#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Placement_Preview_AirStrike

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "StrikePatternEnum_structs.hpp"
#include "AirStrikesPatterns_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Placement_Preview_AirStrike.B_Placement_Preview_AirStrike_C
// 0x01A0 (0x0660 - 0x04C0)
class AB_Placement_Preview_AirStrike_C final : public AFortDecoPreview
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C0(0x0008)(Transient, DuplicateTransient)
	class UAudioComponent*                        airstrike_incoming_place_audiocomponent;           // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GridDecal_Mesh;                                    // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sm_SupplyDrop_TargetRay_01;                        // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        GridDecal;                                         // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box1;                                              // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Spawn_Arrow_NewTrack_0_D8CAB91943322A93E0FF2CA94190A798; // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Spawn_Arrow__Direction_D8CAB91943322A93E0FF2CA94190A798; // 0x04F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5[0x3];                                      // 0x04F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Spawn_Arrow;                                       // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReticuleRestartDelay;                              // 0x0500(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReticuleIntermittentDelay;                         // 0x0504(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BombsDelay;                                        // 0x0508(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_212_x1_Repeat_;                                // 0x050C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Can_212_x2_Repeat_;                                // 0x050D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50E[0x2];                                      // 0x050E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DecalRotation;                                     // 0x0510(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Dotted_Lines_Amount;                               // 0x0514(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Dotted_Lines_Spacing_in_Z;                         // 0x0518(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51C[0x4];                                      // 0x051C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           Dotted_Lines_Spacing;                              // 0x0520(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UMaterialInstanceDynamic*               Threedline_MID;                                    // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ArrowheadStartLocation;                            // 0x0538(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ArrowheadEndLocation;                              // 0x0544(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Bomb_Init_Transform;                               // 0x0550(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Bomb_Start_Location;                               // 0x0580(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ForLoopCounter;                                    // 0x058C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAirStrikesPatterns                    StrikePatternType;                                 // 0x0590(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	EStrikePatternEnum                            Current_Air_Strike_Pattern;                        // 0x05A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x3];                                      // 0x05A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpacingBetweenObjects;                             // 0x05A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UParticleSystemComponent*>       Current_Particle_Array;                            // 0x05A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FVector>                        Position_Array_Cleaned_of_duplicates;              // 0x05B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<int32>                                 Duplicate_Positions;                               // 0x05C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<int32>                                 Double_Entries;                                    // 0x05D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UParticleSystem*                        One_Hit_Particle_Indicator;                        // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Two_Hit_Particle_Indicator;                        // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Position_Array_With_duplicates;                    // 0x05F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         MultiGateIndex;                                    // 0x0608(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60C[0x4];                                      // 0x060C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        TargetEmitterLocations;                            // 0x0610(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<float>                                 TargetEmitterNewMovementStartTimes;                // 0x0620(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UParticleSystemComponent*>       DefaultPositonParticles;                           // 0x0630(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UParticleSystem*                        Default_Location_Template;                         // 0x0640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Line_MID;                                          // 0x0648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Placement_is_Valid;                                // 0x0650(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Placement_is_Valid_Previously;                     // 0x0651(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Valid_state_changed;                               // 0x0652(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Valid_State_Changed_Override;                      // 0x0653(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Reinit_Particles;                                  // 0x0654(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewVar_0;                                          // 0x0655(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Recreate_particles_if_valid;                       // 0x0656(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_657[0x1];                                      // 0x0657(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Delay_Between_Particle_Spawns;                     // 0x0658(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_Placement_Preview_AirStrike(int32 EntryPoint);
	void ReceiveDestroyed();
	void ToggleAirStrikeParticles(bool bInToggle);
	void RestartLineReticule();
	void ReceiveBeginPlay();
	void SwitchType(const TArray<struct FVector>& Positions_With_Duplicates, const TArray<struct FVector>& Cleaned_Positions, const TArray<int32>& Duplicated_Entries);
	void SetVectorParameterValueOnAllPreviewMIDs(class FName ParamName, const struct FLinearColor& ParamValue);
	void SetScalarParameterValueOnAllPreviewMIDs(class FName ParamName, float ParamValue);
	void OnUpdateVisuals(float DeltaSeconds, bool bSafeToPlace);
	void OnUpdateScale(float Scale, const struct FVector& InWorldSpacePivot);
	void OnInitializeDecoPreview(const class ABuildingActor* NewBuildingActor, const class UFortDecoItemDefinition* NewDecoItemDefinition);
	void OnBounceMotionUpdate(float VectorScale);
	void Spawn_Arrow__UpdateFunc();
	void Spawn_Arrow__FinishedFunc();
	void UserConstructionScript();
	void Kill_Emitters_and_Start_Times();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Placement_Preview_AirStrike_C">();
	}
	static class AB_Placement_Preview_AirStrike_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Placement_Preview_AirStrike_C>();
	}
};
static_assert(alignof(AB_Placement_Preview_AirStrike_C) == 0x000010, "Wrong alignment on AB_Placement_Preview_AirStrike_C");
static_assert(sizeof(AB_Placement_Preview_AirStrike_C) == 0x000660, "Wrong size on AB_Placement_Preview_AirStrike_C");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, UberGraphFrame) == 0x0004C0, "Member 'AB_Placement_Preview_AirStrike_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, airstrike_incoming_place_audiocomponent) == 0x0004C8, "Member 'AB_Placement_Preview_AirStrike_C::airstrike_incoming_place_audiocomponent' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, GridDecal_Mesh) == 0x0004D0, "Member 'AB_Placement_Preview_AirStrike_C::GridDecal_Mesh' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Sm_SupplyDrop_TargetRay_01) == 0x0004D8, "Member 'AB_Placement_Preview_AirStrike_C::Sm_SupplyDrop_TargetRay_01' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, GridDecal) == 0x0004E0, "Member 'AB_Placement_Preview_AirStrike_C::GridDecal' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Box1) == 0x0004E8, "Member 'AB_Placement_Preview_AirStrike_C::Box1' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Spawn_Arrow_NewTrack_0_D8CAB91943322A93E0FF2CA94190A798) == 0x0004F0, "Member 'AB_Placement_Preview_AirStrike_C::Spawn_Arrow_NewTrack_0_D8CAB91943322A93E0FF2CA94190A798' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Spawn_Arrow__Direction_D8CAB91943322A93E0FF2CA94190A798) == 0x0004F4, "Member 'AB_Placement_Preview_AirStrike_C::Spawn_Arrow__Direction_D8CAB91943322A93E0FF2CA94190A798' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Spawn_Arrow) == 0x0004F8, "Member 'AB_Placement_Preview_AirStrike_C::Spawn_Arrow' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, ReticuleRestartDelay) == 0x000500, "Member 'AB_Placement_Preview_AirStrike_C::ReticuleRestartDelay' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, ReticuleIntermittentDelay) == 0x000504, "Member 'AB_Placement_Preview_AirStrike_C::ReticuleIntermittentDelay' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, BombsDelay) == 0x000508, "Member 'AB_Placement_Preview_AirStrike_C::BombsDelay' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Can_212_x1_Repeat_) == 0x00050C, "Member 'AB_Placement_Preview_AirStrike_C::Can_212_x1_Repeat_' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Can_212_x2_Repeat_) == 0x00050D, "Member 'AB_Placement_Preview_AirStrike_C::Can_212_x2_Repeat_' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, DecalRotation) == 0x000510, "Member 'AB_Placement_Preview_AirStrike_C::DecalRotation' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Dotted_Lines_Amount) == 0x000514, "Member 'AB_Placement_Preview_AirStrike_C::Dotted_Lines_Amount' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Dotted_Lines_Spacing_in_Z) == 0x000518, "Member 'AB_Placement_Preview_AirStrike_C::Dotted_Lines_Spacing_in_Z' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Dotted_Lines_Spacing) == 0x000520, "Member 'AB_Placement_Preview_AirStrike_C::Dotted_Lines_Spacing' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Threedline_MID) == 0x000530, "Member 'AB_Placement_Preview_AirStrike_C::Threedline_MID' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, ArrowheadStartLocation) == 0x000538, "Member 'AB_Placement_Preview_AirStrike_C::ArrowheadStartLocation' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, ArrowheadEndLocation) == 0x000544, "Member 'AB_Placement_Preview_AirStrike_C::ArrowheadEndLocation' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Bomb_Init_Transform) == 0x000550, "Member 'AB_Placement_Preview_AirStrike_C::Bomb_Init_Transform' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Bomb_Start_Location) == 0x000580, "Member 'AB_Placement_Preview_AirStrike_C::Bomb_Start_Location' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, ForLoopCounter) == 0x00058C, "Member 'AB_Placement_Preview_AirStrike_C::ForLoopCounter' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, StrikePatternType) == 0x000590, "Member 'AB_Placement_Preview_AirStrike_C::StrikePatternType' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Current_Air_Strike_Pattern) == 0x0005A0, "Member 'AB_Placement_Preview_AirStrike_C::Current_Air_Strike_Pattern' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, SpacingBetweenObjects) == 0x0005A4, "Member 'AB_Placement_Preview_AirStrike_C::SpacingBetweenObjects' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Current_Particle_Array) == 0x0005A8, "Member 'AB_Placement_Preview_AirStrike_C::Current_Particle_Array' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Position_Array_Cleaned_of_duplicates) == 0x0005B8, "Member 'AB_Placement_Preview_AirStrike_C::Position_Array_Cleaned_of_duplicates' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Duplicate_Positions) == 0x0005C8, "Member 'AB_Placement_Preview_AirStrike_C::Duplicate_Positions' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Double_Entries) == 0x0005D8, "Member 'AB_Placement_Preview_AirStrike_C::Double_Entries' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, One_Hit_Particle_Indicator) == 0x0005E8, "Member 'AB_Placement_Preview_AirStrike_C::One_Hit_Particle_Indicator' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Two_Hit_Particle_Indicator) == 0x0005F0, "Member 'AB_Placement_Preview_AirStrike_C::Two_Hit_Particle_Indicator' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Position_Array_With_duplicates) == 0x0005F8, "Member 'AB_Placement_Preview_AirStrike_C::Position_Array_With_duplicates' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, MultiGateIndex) == 0x000608, "Member 'AB_Placement_Preview_AirStrike_C::MultiGateIndex' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, TargetEmitterLocations) == 0x000610, "Member 'AB_Placement_Preview_AirStrike_C::TargetEmitterLocations' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, TargetEmitterNewMovementStartTimes) == 0x000620, "Member 'AB_Placement_Preview_AirStrike_C::TargetEmitterNewMovementStartTimes' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, DefaultPositonParticles) == 0x000630, "Member 'AB_Placement_Preview_AirStrike_C::DefaultPositonParticles' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Default_Location_Template) == 0x000640, "Member 'AB_Placement_Preview_AirStrike_C::Default_Location_Template' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Line_MID) == 0x000648, "Member 'AB_Placement_Preview_AirStrike_C::Line_MID' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Placement_is_Valid) == 0x000650, "Member 'AB_Placement_Preview_AirStrike_C::Placement_is_Valid' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Placement_is_Valid_Previously) == 0x000651, "Member 'AB_Placement_Preview_AirStrike_C::Placement_is_Valid_Previously' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Valid_state_changed) == 0x000652, "Member 'AB_Placement_Preview_AirStrike_C::Valid_state_changed' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Valid_State_Changed_Override) == 0x000653, "Member 'AB_Placement_Preview_AirStrike_C::Valid_State_Changed_Override' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Reinit_Particles) == 0x000654, "Member 'AB_Placement_Preview_AirStrike_C::Reinit_Particles' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, NewVar_0) == 0x000655, "Member 'AB_Placement_Preview_AirStrike_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Recreate_particles_if_valid) == 0x000656, "Member 'AB_Placement_Preview_AirStrike_C::Recreate_particles_if_valid' has a wrong offset!");
static_assert(offsetof(AB_Placement_Preview_AirStrike_C, Delay_Between_Particle_Spawns) == 0x000658, "Member 'AB_Placement_Preview_AirStrike_C::Delay_Between_Particle_Spawns' has a wrong offset!");

}


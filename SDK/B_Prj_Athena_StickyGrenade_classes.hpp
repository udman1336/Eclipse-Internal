#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Athena_StickyGrenade

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_Athena_StickyGrenade.B_Prj_Athena_StickyGrenade_C
// 0x0150 (0x0A20 - 0x08D0)
class AB_Prj_Athena_StickyGrenade_C final : public AFortAttachableProjectileBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x08D0(0x0008)(Transient, DuplicateTransient)
	class UParticleSystemComponent*               AttachedFuseBlink;                                 // 0x08D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh;                                              // 0x08E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow_Plunger;                                     // 0x08E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       PawnOverlapSphere;                                 // 0x08F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Trail;                                             // 0x08F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Beep;                                              // 0x0900(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      OverlapCapsule;                                    // 0x0908(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x0910(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Fuse_Particle;                                     // 0x0918(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        GrenadeFuse_AudioComponent;                        // 0x0920(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         WobbleOnStick_WobbleCurve_1ED3EC4848E5A2B016AB61BA3779FA4E; // 0x0928(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            WobbleOnStick__Direction_1ED3EC4848E5A2B016AB61BA3779FA4E; // 0x092C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92D[0x3];                                      // 0x092D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     WobbleOnStick;                                     // 0x0930(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        P_Explosion;                                       // 0x0938(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Cue_DistantSound;                                  // 0x0940(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Cue_CloseSound;                                    // 0x0948(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExplosionRadius;                                   // 0x0950(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_954[0x4];                                      // 0x0954(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackEffect*                   ExplosionForceFeedbackNear;                        // 0x0958(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackEffect*                   ExplosionForceFeedbackFar;                         // 0x0960(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Cue_Stick;                                         // 0x0968(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Beacon_Streak_Color__Friendly_;                    // 0x0970(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Beacon_Streak_Color__Enemy_;                       // 0x0980(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDead_;                                           // 0x0990(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_991[0x3];                                      // 0x0991(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Beacon_Core_Color__Friendly_;                      // 0x0994(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Beacon_Core_Color__Enemy_;                         // 0x09A4(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeBeforeExplode;                                 // 0x09B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OffsetDistanceFromBone;                            // 0x09B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x09BC(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              StuckToPawn;                                       // 0x09C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Audio_StuckToEnvironment;                          // 0x09D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Audio_StuckToPlayer;                               // 0x09D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSelfStickDelayOver_;                             // 0x09E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E1[0x3];                                      // 0x09E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SelfStickDelay;                                    // 0x09E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OffsetDistanceFromPhysicsMesh;                     // 0x09E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x09EC(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasStopped;                                       // 0x09F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9F9[0x7];                                      // 0x09F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      EnemyMeshMaterial;                                 // 0x0A00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      FriendlyMeshMaterial;                              // 0x0A08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         NewVar_0;                                          // 0x0A10(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ExecuteUbergraph_B_Prj_Athena_StickyGrenade(int32 EntryPoint);
	void Event_TriggerExplosion();
	void OnAttachedToDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation_0, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void BndEvt__PawnOverlapSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnTouched(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FHitResult& HitResult, bool bIsOverlap);
	void Event_BuildingActorDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation_0, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnExploded(const TArray<class AActor*>& HitActors, const TArray<struct FHitResult>& HitResults);
	void Stop_Rotation();
	void OnStop(const struct FHitResult& Hit);
	void ReceiveBeginPlay();
	void WobbleOnStick__UpdateFunc();
	void WobbleOnStick__FinishedFunc();
	void UserConstructionScript();
	void PlayStickSound(const struct FVector& Location, class AActor* HitActor, bool Success);
	void HandleHitBuildingWall(class UObject* Object, class UPrimitiveComponent* Component);
	void HandleHitVehicle(class UObject* Object, class UPrimitiveComponent* Component);
	void HandleHitSupplyDrop(class UObject* Object, class UPrimitiveComponent* Component);
	void HandleHits(class UObject* Object, class UPrimitiveComponent* Component);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_Athena_StickyGrenade_C">();
	}
	static class AB_Prj_Athena_StickyGrenade_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_Athena_StickyGrenade_C>();
	}
};
static_assert(alignof(AB_Prj_Athena_StickyGrenade_C) == 0x000008, "Wrong alignment on AB_Prj_Athena_StickyGrenade_C");
static_assert(sizeof(AB_Prj_Athena_StickyGrenade_C) == 0x000A20, "Wrong size on AB_Prj_Athena_StickyGrenade_C");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, UberGraphFrame) == 0x0008D0, "Member 'AB_Prj_Athena_StickyGrenade_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, AttachedFuseBlink) == 0x0008D8, "Member 'AB_Prj_Athena_StickyGrenade_C::AttachedFuseBlink' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, Mesh) == 0x0008E0, "Member 'AB_Prj_Athena_StickyGrenade_C::Mesh' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, Arrow_Plunger) == 0x0008E8, "Member 'AB_Prj_Athena_StickyGrenade_C::Arrow_Plunger' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, PawnOverlapSphere) == 0x0008F0, "Member 'AB_Prj_Athena_StickyGrenade_C::PawnOverlapSphere' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, Trail) == 0x0008F8, "Member 'AB_Prj_Athena_StickyGrenade_C::Trail' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, Beep) == 0x000900, "Member 'AB_Prj_Athena_StickyGrenade_C::Beep' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, OverlapCapsule) == 0x000908, "Member 'AB_Prj_Athena_StickyGrenade_C::OverlapCapsule' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, RotatingMovement) == 0x000910, "Member 'AB_Prj_Athena_StickyGrenade_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, Fuse_Particle) == 0x000918, "Member 'AB_Prj_Athena_StickyGrenade_C::Fuse_Particle' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, GrenadeFuse_AudioComponent) == 0x000920, "Member 'AB_Prj_Athena_StickyGrenade_C::GrenadeFuse_AudioComponent' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, WobbleOnStick_WobbleCurve_1ED3EC4848E5A2B016AB61BA3779FA4E) == 0x000928, "Member 'AB_Prj_Athena_StickyGrenade_C::WobbleOnStick_WobbleCurve_1ED3EC4848E5A2B016AB61BA3779FA4E' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, WobbleOnStick__Direction_1ED3EC4848E5A2B016AB61BA3779FA4E) == 0x00092C, "Member 'AB_Prj_Athena_StickyGrenade_C::WobbleOnStick__Direction_1ED3EC4848E5A2B016AB61BA3779FA4E' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, WobbleOnStick) == 0x000930, "Member 'AB_Prj_Athena_StickyGrenade_C::WobbleOnStick' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, P_Explosion) == 0x000938, "Member 'AB_Prj_Athena_StickyGrenade_C::P_Explosion' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, Cue_DistantSound) == 0x000940, "Member 'AB_Prj_Athena_StickyGrenade_C::Cue_DistantSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, Cue_CloseSound) == 0x000948, "Member 'AB_Prj_Athena_StickyGrenade_C::Cue_CloseSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, ExplosionRadius) == 0x000950, "Member 'AB_Prj_Athena_StickyGrenade_C::ExplosionRadius' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, ExplosionForceFeedbackNear) == 0x000958, "Member 'AB_Prj_Athena_StickyGrenade_C::ExplosionForceFeedbackNear' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, ExplosionForceFeedbackFar) == 0x000960, "Member 'AB_Prj_Athena_StickyGrenade_C::ExplosionForceFeedbackFar' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, Cue_Stick) == 0x000968, "Member 'AB_Prj_Athena_StickyGrenade_C::Cue_Stick' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, Beacon_Streak_Color__Friendly_) == 0x000970, "Member 'AB_Prj_Athena_StickyGrenade_C::Beacon_Streak_Color__Friendly_' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, Beacon_Streak_Color__Enemy_) == 0x000980, "Member 'AB_Prj_Athena_StickyGrenade_C::Beacon_Streak_Color__Enemy_' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, IsDead_) == 0x000990, "Member 'AB_Prj_Athena_StickyGrenade_C::IsDead_' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, Beacon_Core_Color__Friendly_) == 0x000994, "Member 'AB_Prj_Athena_StickyGrenade_C::Beacon_Core_Color__Friendly_' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, Beacon_Core_Color__Enemy_) == 0x0009A4, "Member 'AB_Prj_Athena_StickyGrenade_C::Beacon_Core_Color__Enemy_' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, TimeBeforeExplode) == 0x0009B4, "Member 'AB_Prj_Athena_StickyGrenade_C::TimeBeforeExplode' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, OffsetDistanceFromBone) == 0x0009B8, "Member 'AB_Prj_Athena_StickyGrenade_C::OffsetDistanceFromBone' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, HitNormal) == 0x0009BC, "Member 'AB_Prj_Athena_StickyGrenade_C::HitNormal' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, StuckToPawn) == 0x0009C8, "Member 'AB_Prj_Athena_StickyGrenade_C::StuckToPawn' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, Audio_StuckToEnvironment) == 0x0009D0, "Member 'AB_Prj_Athena_StickyGrenade_C::Audio_StuckToEnvironment' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, Audio_StuckToPlayer) == 0x0009D8, "Member 'AB_Prj_Athena_StickyGrenade_C::Audio_StuckToPlayer' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, IsSelfStickDelayOver_) == 0x0009E0, "Member 'AB_Prj_Athena_StickyGrenade_C::IsSelfStickDelayOver_' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, SelfStickDelay) == 0x0009E4, "Member 'AB_Prj_Athena_StickyGrenade_C::SelfStickDelay' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, OffsetDistanceFromPhysicsMesh) == 0x0009E8, "Member 'AB_Prj_Athena_StickyGrenade_C::OffsetDistanceFromPhysicsMesh' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, HitLocation) == 0x0009EC, "Member 'AB_Prj_Athena_StickyGrenade_C::HitLocation' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, bHasStopped) == 0x0009F8, "Member 'AB_Prj_Athena_StickyGrenade_C::bHasStopped' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, EnemyMeshMaterial) == 0x000A00, "Member 'AB_Prj_Athena_StickyGrenade_C::EnemyMeshMaterial' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, FriendlyMeshMaterial) == 0x000A08, "Member 'AB_Prj_Athena_StickyGrenade_C::FriendlyMeshMaterial' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_StickyGrenade_C, NewVar_0) == 0x000A10, "Member 'AB_Prj_Athena_StickyGrenade_C::NewVar_0' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemTransformConfirmationModal

#include "Basic.hpp"

#include "ItemTransformConfirmationModal_classes.hpp"
#include "ItemTransformConfirmationModal_parameters.hpp"


namespace SDK
{

// Function ItemTransformConfirmationModal.ItemTransformConfirmationModal_C.ExecuteUbergraph_ItemTransformConfirmationModal
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemTransformConfirmationModal_C::ExecuteUbergraph_ItemTransformConfirmationModal(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTransformConfirmationModal_C", "ExecuteUbergraph_ItemTransformConfirmationModal");

	Params::ItemTransformConfirmationModal_C_ExecuteUbergraph_ItemTransformConfirmationModal Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemTransformConfirmationModal.ItemTransformConfirmationModal_C.Handle Transform Failed
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ErrorMessage                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UItemTransformConfirmationModal_C::Handle_Transform_Failed(const class FText& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTransformConfirmationModal_C", "Handle Transform Failed");

	Params::ItemTransformConfirmationModal_C_Handle_Transform_Failed Parms{};

	Parms.ErrorMessage = std::move(ErrorMessage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemTransformConfirmationModal.ItemTransformConfirmationModal_C.Handle Transform Succeeded
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FFortItemInstanceQuantityPair>TransmoggedItems                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<struct FFortItemInstanceQuantityPair>RecycledItems                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UItemTransformConfirmationModal_C::Handle_Transform_Succeeded(const TArray<struct FFortItemInstanceQuantityPair>& TransmoggedItems, const TArray<struct FFortItemInstanceQuantityPair>& RecycledItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTransformConfirmationModal_C", "Handle Transform Succeeded");

	Params::ItemTransformConfirmationModal_C_Handle_Transform_Succeeded Parms{};

	Parms.TransmoggedItems = std::move(TransmoggedItems);
	Parms.RecycledItems = std::move(RecycledItems);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemTransformConfirmationModal.ItemTransformConfirmationModal_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemTransformConfirmationModal_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTransformConfirmationModal_C", "PreConstruct");

	Params::ItemTransformConfirmationModal_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemTransformConfirmationModal.ItemTransformConfirmationModal_C.OnActivated
// (Event, Protected, BlueprintEvent)

void UItemTransformConfirmationModal_C::OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTransformConfirmationModal_C", "OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTransformConfirmationModal.ItemTransformConfirmationModal_C.BndEvt__ConfirmButton_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButton*                    Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemTransformConfirmationModal_C::BndEvt__ConfirmButton_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature(class UCommonButton* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTransformConfirmationModal_C", "BndEvt__ConfirmButton_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature");

	Params::ItemTransformConfirmationModal_C_BndEvt__ConfirmButton_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemTransformConfirmationModal.ItemTransformConfirmationModal_C.BndEvt__CancelButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButton*                    Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemTransformConfirmationModal_C::BndEvt__CancelButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature(class UCommonButton* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTransformConfirmationModal_C", "BndEvt__CancelButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature");

	Params::ItemTransformConfirmationModal_C_BndEvt__CancelButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemTransformConfirmationModal.ItemTransformConfirmationModal_C.UpdateTransformInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortItem*                        TransformKey                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UFortItem*>                SacrificeItems                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int32                                   SacrificePoints                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CurrentTier                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemTransformConfirmationModal_C::UpdateTransformInfo(class UFortItem* TransformKey, TArray<class UFortItem*>& SacrificeItems, int32 SacrificePoints, int32 CurrentTier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTransformConfirmationModal_C", "UpdateTransformInfo");

	Params::ItemTransformConfirmationModal_C_UpdateTransformInfo Parms{};

	Parms.TransformKey = TransformKey;
	Parms.SacrificeItems = std::move(SacrificeItems);
	Parms.SacrificePoints = SacrificePoints;
	Parms.CurrentTier = CurrentTier;

	UObject::ProcessEvent(Func, &Parms);

	SacrificeItems = std::move(Parms.SacrificeItems);
}


// Function ItemTransformConfirmationModal.ItemTransformConfirmationModal_C.Setup Transform MCP Binds
// (Public, BlueprintCallable, BlueprintEvent)

void UItemTransformConfirmationModal_C::Setup_Transform_MCP_Binds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTransformConfirmationModal_C", "Setup Transform MCP Binds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTransformConfirmationModal.ItemTransformConfirmationModal_C.Cleanup Confirmation Widget
// (Public, BlueprintCallable, BlueprintEvent)

void UItemTransformConfirmationModal_C::Cleanup_Confirmation_Widget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTransformConfirmationModal_C", "Cleanup Confirmation Widget");

	UObject::ProcessEvent(Func, nullptr);
}

}


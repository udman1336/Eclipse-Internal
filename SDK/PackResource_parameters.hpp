#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PackResource

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function PackResource.PackResource_C.ExecuteUbergraph_PackResource
// 0x0020 (0x0020 - 0x0000)
struct PackResource_C_ExecuteUbergraph_PackResource final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PackResource_C_ExecuteUbergraph_PackResource) == 0x000008, "Wrong alignment on PackResource_C_ExecuteUbergraph_PackResource");
static_assert(sizeof(PackResource_C_ExecuteUbergraph_PackResource) == 0x000020, "Wrong size on PackResource_C_ExecuteUbergraph_PackResource");
static_assert(offsetof(PackResource_C_ExecuteUbergraph_PackResource, EntryPoint) == 0x000000, "Member 'PackResource_C_ExecuteUbergraph_PackResource::EntryPoint' has a wrong offset!");
static_assert(offsetof(PackResource_C_ExecuteUbergraph_PackResource, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'PackResource_C_ExecuteUbergraph_PackResource::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PackResource_C_ExecuteUbergraph_PackResource, CallFunc_GetContext_ReturnValue) == 0x000018, "Member 'PackResource_C_ExecuteUbergraph_PackResource::CallFunc_GetContext_ReturnValue' has a wrong offset!");

// Function PackResource.PackResource_C.UpdateType
// 0x00C0 (0x00C0 - 0x0000)
struct PackResource_C_UpdateType final
{
public:
	EFortResourceType                             ResourceType_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortResourceType                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable1;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable12;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable123;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable1234;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue;          // 0x0038(0x0088)()
};
static_assert(alignof(PackResource_C_UpdateType) == 0x000008, "Wrong alignment on PackResource_C_UpdateType");
static_assert(sizeof(PackResource_C_UpdateType) == 0x0000C0, "Wrong size on PackResource_C_UpdateType");
static_assert(offsetof(PackResource_C_UpdateType, ResourceType_0) == 0x000000, "Member 'PackResource_C_UpdateType::ResourceType_0' has a wrong offset!");
static_assert(offsetof(PackResource_C_UpdateType, Temp_byte_Variable) == 0x000001, "Member 'PackResource_C_UpdateType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PackResource_C_UpdateType, Temp_object_Variable) == 0x000008, "Member 'PackResource_C_UpdateType::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PackResource_C_UpdateType, Temp_object_Variable1) == 0x000010, "Member 'PackResource_C_UpdateType::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(PackResource_C_UpdateType, Temp_object_Variable12) == 0x000018, "Member 'PackResource_C_UpdateType::Temp_object_Variable12' has a wrong offset!");
static_assert(offsetof(PackResource_C_UpdateType, Temp_object_Variable123) == 0x000020, "Member 'PackResource_C_UpdateType::Temp_object_Variable123' has a wrong offset!");
static_assert(offsetof(PackResource_C_UpdateType, Temp_object_Variable1234) == 0x000028, "Member 'PackResource_C_UpdateType::Temp_object_Variable1234' has a wrong offset!");
static_assert(offsetof(PackResource_C_UpdateType, K2Node_Select_Default) == 0x000030, "Member 'PackResource_C_UpdateType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PackResource_C_UpdateType, CallFunc_MakeBrushFromSprite_ReturnValue) == 0x000038, "Member 'PackResource_C_UpdateType::CallFunc_MakeBrushFromSprite_ReturnValue' has a wrong offset!");

// Function PackResource.PackResource_C.TryUpdateBackground
// 0x0070 (0x0070 - 0x0000)
struct PackResource_C_TryUpdateBackground final
{
public:
	bool                                          Local_IsResourceActive;                            // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortResourceItemDefinition*            CallFunc_GetCurrentResourceItemDefinition_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable12;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable123;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBROnly_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select1_Default;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortResourceItemDefinition*            CallFunc_GetResourceItemDefinition_ReturnValue;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PackResource_C_TryUpdateBackground) == 0x000008, "Wrong alignment on PackResource_C_TryUpdateBackground");
static_assert(sizeof(PackResource_C_TryUpdateBackground) == 0x000070, "Wrong size on PackResource_C_TryUpdateBackground");
static_assert(offsetof(PackResource_C_TryUpdateBackground, Local_IsResourceActive) == 0x000000, "Member 'PackResource_C_TryUpdateBackground::Local_IsResourceActive' has a wrong offset!");
static_assert(offsetof(PackResource_C_TryUpdateBackground, Temp_bool_Variable) == 0x000001, "Member 'PackResource_C_TryUpdateBackground::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PackResource_C_TryUpdateBackground, Temp_class_Variable) == 0x000008, "Member 'PackResource_C_TryUpdateBackground::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(PackResource_C_TryUpdateBackground, Temp_class_Variable1) == 0x000010, "Member 'PackResource_C_TryUpdateBackground::Temp_class_Variable1' has a wrong offset!");
static_assert(offsetof(PackResource_C_TryUpdateBackground, CallFunc_GetContext_ReturnValue) == 0x000018, "Member 'PackResource_C_TryUpdateBackground::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(PackResource_C_TryUpdateBackground, Temp_bool_Variable1) == 0x000020, "Member 'PackResource_C_TryUpdateBackground::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(PackResource_C_TryUpdateBackground, CallFunc_GetCurrentResourceItemDefinition_ReturnValue) == 0x000028, "Member 'PackResource_C_TryUpdateBackground::CallFunc_GetCurrentResourceItemDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(PackResource_C_TryUpdateBackground, Temp_class_Variable12) == 0x000030, "Member 'PackResource_C_TryUpdateBackground::Temp_class_Variable12' has a wrong offset!");
static_assert(offsetof(PackResource_C_TryUpdateBackground, Temp_class_Variable123) == 0x000038, "Member 'PackResource_C_TryUpdateBackground::Temp_class_Variable123' has a wrong offset!");
static_assert(offsetof(PackResource_C_TryUpdateBackground, CallFunc_IsBROnly_ReturnValue) == 0x000040, "Member 'PackResource_C_TryUpdateBackground::CallFunc_IsBROnly_ReturnValue' has a wrong offset!");
static_assert(offsetof(PackResource_C_TryUpdateBackground, K2Node_Select_Default) == 0x000048, "Member 'PackResource_C_TryUpdateBackground::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PackResource_C_TryUpdateBackground, K2Node_Select1_Default) == 0x000050, "Member 'PackResource_C_TryUpdateBackground::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(PackResource_C_TryUpdateBackground, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000058, "Member 'PackResource_C_TryUpdateBackground::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PackResource_C_TryUpdateBackground, CallFunc_GetResourceItemDefinition_ReturnValue) == 0x000060, "Member 'PackResource_C_TryUpdateBackground::CallFunc_GetResourceItemDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(PackResource_C_TryUpdateBackground, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000068, "Member 'PackResource_C_TryUpdateBackground::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function PackResource.PackResource_C.TryUpdateCount
// 0x0028 (0x0028 - 0x0000)
struct PackResource_C_TryUpdateCount final
{
public:
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue1;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResourceCount_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResourceCount_ReturnValue1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PackResource_C_TryUpdateCount) == 0x000008, "Wrong alignment on PackResource_C_TryUpdateCount");
static_assert(sizeof(PackResource_C_TryUpdateCount) == 0x000028, "Wrong size on PackResource_C_TryUpdateCount");
static_assert(offsetof(PackResource_C_TryUpdateCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000000, "Member 'PackResource_C_TryUpdateCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PackResource_C_TryUpdateCount, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'PackResource_C_TryUpdateCount::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(PackResource_C_TryUpdateCount, CallFunc_GetContext_ReturnValue1) == 0x000010, "Member 'PackResource_C_TryUpdateCount::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(PackResource_C_TryUpdateCount, CallFunc_GetResourceCount_ReturnValue) == 0x000018, "Member 'PackResource_C_TryUpdateCount::CallFunc_GetResourceCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(PackResource_C_TryUpdateCount, CallFunc_GetResourceCount_ReturnValue1) == 0x00001C, "Member 'PackResource_C_TryUpdateCount::CallFunc_GetResourceCount_ReturnValue1' has a wrong offset!");
static_assert(offsetof(PackResource_C_TryUpdateCount, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000020, "Member 'PackResource_C_TryUpdateCount::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function PackResource.PackResource_C.SetImageSize
// 0x0188 (0x0188 - 0x0000)
struct PackResource_C_SetImageSize final
{
public:
	bool                                          useLargeIcon;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable1;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable12;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable123;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable1234;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortResourceType                             Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           Temp_object_Variable12345;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable123456;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable1234567;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable12345678;                      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable123456789;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortResourceType                             Temp_byte_Variable1;                               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           K2Node_Select_Default;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           K2Node_Select1_Default;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue;          // 0x0078(0x0088)()
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue1;         // 0x0100(0x0088)()
};
static_assert(alignof(PackResource_C_SetImageSize) == 0x000008, "Wrong alignment on PackResource_C_SetImageSize");
static_assert(sizeof(PackResource_C_SetImageSize) == 0x000188, "Wrong size on PackResource_C_SetImageSize");
static_assert(offsetof(PackResource_C_SetImageSize, useLargeIcon) == 0x000000, "Member 'PackResource_C_SetImageSize::useLargeIcon' has a wrong offset!");
static_assert(offsetof(PackResource_C_SetImageSize, Temp_object_Variable) == 0x000008, "Member 'PackResource_C_SetImageSize::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PackResource_C_SetImageSize, Temp_object_Variable1) == 0x000010, "Member 'PackResource_C_SetImageSize::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(PackResource_C_SetImageSize, Temp_object_Variable12) == 0x000018, "Member 'PackResource_C_SetImageSize::Temp_object_Variable12' has a wrong offset!");
static_assert(offsetof(PackResource_C_SetImageSize, Temp_object_Variable123) == 0x000020, "Member 'PackResource_C_SetImageSize::Temp_object_Variable123' has a wrong offset!");
static_assert(offsetof(PackResource_C_SetImageSize, Temp_object_Variable1234) == 0x000028, "Member 'PackResource_C_SetImageSize::Temp_object_Variable1234' has a wrong offset!");
static_assert(offsetof(PackResource_C_SetImageSize, Temp_byte_Variable) == 0x000030, "Member 'PackResource_C_SetImageSize::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PackResource_C_SetImageSize, Temp_object_Variable12345) == 0x000038, "Member 'PackResource_C_SetImageSize::Temp_object_Variable12345' has a wrong offset!");
static_assert(offsetof(PackResource_C_SetImageSize, Temp_object_Variable123456) == 0x000040, "Member 'PackResource_C_SetImageSize::Temp_object_Variable123456' has a wrong offset!");
static_assert(offsetof(PackResource_C_SetImageSize, Temp_object_Variable1234567) == 0x000048, "Member 'PackResource_C_SetImageSize::Temp_object_Variable1234567' has a wrong offset!");
static_assert(offsetof(PackResource_C_SetImageSize, Temp_object_Variable12345678) == 0x000050, "Member 'PackResource_C_SetImageSize::Temp_object_Variable12345678' has a wrong offset!");
static_assert(offsetof(PackResource_C_SetImageSize, Temp_object_Variable123456789) == 0x000058, "Member 'PackResource_C_SetImageSize::Temp_object_Variable123456789' has a wrong offset!");
static_assert(offsetof(PackResource_C_SetImageSize, Temp_byte_Variable1) == 0x000060, "Member 'PackResource_C_SetImageSize::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(PackResource_C_SetImageSize, K2Node_Select_Default) == 0x000068, "Member 'PackResource_C_SetImageSize::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PackResource_C_SetImageSize, K2Node_Select1_Default) == 0x000070, "Member 'PackResource_C_SetImageSize::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(PackResource_C_SetImageSize, CallFunc_MakeBrushFromSprite_ReturnValue) == 0x000078, "Member 'PackResource_C_SetImageSize::CallFunc_MakeBrushFromSprite_ReturnValue' has a wrong offset!");
static_assert(offsetof(PackResource_C_SetImageSize, CallFunc_MakeBrushFromSprite_ReturnValue1) == 0x000100, "Member 'PackResource_C_SetImageSize::CallFunc_MakeBrushFromSprite_ReturnValue1' has a wrong offset!");

// Function PackResource.PackResource_C.OnTouchStarted
// 0x0218 (0x0218 - 0x0000)
struct PackResource_C_OnTouchStarted final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InTouchEvent;                                      // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(PackResource_C_OnTouchStarted) == 0x000008, "Wrong alignment on PackResource_C_OnTouchStarted");
static_assert(sizeof(PackResource_C_OnTouchStarted) == 0x000218, "Wrong size on PackResource_C_OnTouchStarted");
static_assert(offsetof(PackResource_C_OnTouchStarted, MyGeometry) == 0x000000, "Member 'PackResource_C_OnTouchStarted::MyGeometry' has a wrong offset!");
static_assert(offsetof(PackResource_C_OnTouchStarted, InTouchEvent) == 0x000038, "Member 'PackResource_C_OnTouchStarted::InTouchEvent' has a wrong offset!");
static_assert(offsetof(PackResource_C_OnTouchStarted, ReturnValue) == 0x0000A8, "Member 'PackResource_C_OnTouchStarted::ReturnValue' has a wrong offset!");
static_assert(offsetof(PackResource_C_OnTouchStarted, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'PackResource_C_OnTouchStarted::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function PackResource.PackResource_C.Change Material
// 0x0008 (0x0008 - 0x0000)
struct PackResource_C_Change_Material final
{
public:
	class UAthenaHUDContext*                      CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PackResource_C_Change_Material) == 0x000008, "Wrong alignment on PackResource_C_Change_Material");
static_assert(sizeof(PackResource_C_Change_Material) == 0x000008, "Wrong size on PackResource_C_Change_Material");
static_assert(offsetof(PackResource_C_Change_Material, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'PackResource_C_Change_Material::CallFunc_GetContext_ReturnValue' has a wrong offset!");

// Function PackResource.PackResource_C.RefreshSmallerCountLayout
// 0x0030 (0x0030 - 0x0000)
struct PackResource_C_RefreshSmallerCountLayout final
{
public:
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_GetCountOpacity_SlateColor;               // 0x0008(0x0028)()
};
static_assert(alignof(PackResource_C_RefreshSmallerCountLayout) == 0x000008, "Wrong alignment on PackResource_C_RefreshSmallerCountLayout");
static_assert(sizeof(PackResource_C_RefreshSmallerCountLayout) == 0x000030, "Wrong size on PackResource_C_RefreshSmallerCountLayout");
static_assert(offsetof(PackResource_C_RefreshSmallerCountLayout, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000000, "Member 'PackResource_C_RefreshSmallerCountLayout::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PackResource_C_RefreshSmallerCountLayout, CallFunc_GetCountOpacity_SlateColor) == 0x000008, "Member 'PackResource_C_RefreshSmallerCountLayout::CallFunc_GetCountOpacity_SlateColor' has a wrong offset!");

// Function PackResource.PackResource_C.RefreshLargerCountLayout
// 0x0050 (0x0050 - 0x0000)
struct PackResource_C_RefreshLargerCountLayout final
{
public:
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_GetCountOpacity_SlateColor;               // 0x0008(0x0028)()
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetShorthandItemStackCount_ReturnValue;   // 0x0038(0x0018)()
};
static_assert(alignof(PackResource_C_RefreshLargerCountLayout) == 0x000008, "Wrong alignment on PackResource_C_RefreshLargerCountLayout");
static_assert(sizeof(PackResource_C_RefreshLargerCountLayout) == 0x000050, "Wrong size on PackResource_C_RefreshLargerCountLayout");
static_assert(offsetof(PackResource_C_RefreshLargerCountLayout, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000000, "Member 'PackResource_C_RefreshLargerCountLayout::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PackResource_C_RefreshLargerCountLayout, CallFunc_GetCountOpacity_SlateColor) == 0x000008, "Member 'PackResource_C_RefreshLargerCountLayout::CallFunc_GetCountOpacity_SlateColor' has a wrong offset!");
static_assert(offsetof(PackResource_C_RefreshLargerCountLayout, CallFunc_GetContext_ReturnValue) == 0x000030, "Member 'PackResource_C_RefreshLargerCountLayout::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(PackResource_C_RefreshLargerCountLayout, CallFunc_GetShorthandItemStackCount_ReturnValue) == 0x000038, "Member 'PackResource_C_RefreshLargerCountLayout::CallFunc_GetShorthandItemStackCount_ReturnValue' has a wrong offset!");

// Function PackResource.PackResource_C.GetCountOpacity
// 0x0088 (0x0088 - 0x0000)
struct PackResource_C_GetCountOpacity final
{
public:
	struct FSlateColor                            SlateColor;                                        // 0x0000(0x0028)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResourceItemMaxStackSize_ReturnValue;  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x004C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0060(0x0028)()
};
static_assert(alignof(PackResource_C_GetCountOpacity) == 0x000008, "Wrong alignment on PackResource_C_GetCountOpacity");
static_assert(sizeof(PackResource_C_GetCountOpacity) == 0x000088, "Wrong size on PackResource_C_GetCountOpacity");
static_assert(offsetof(PackResource_C_GetCountOpacity, SlateColor) == 0x000000, "Member 'PackResource_C_GetCountOpacity::SlateColor' has a wrong offset!");
static_assert(offsetof(PackResource_C_GetCountOpacity, Temp_bool_Variable) == 0x000028, "Member 'PackResource_C_GetCountOpacity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PackResource_C_GetCountOpacity, Temp_float_Variable) == 0x00002C, "Member 'PackResource_C_GetCountOpacity::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(PackResource_C_GetCountOpacity, Temp_float_Variable1) == 0x000030, "Member 'PackResource_C_GetCountOpacity::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(PackResource_C_GetCountOpacity, CallFunc_GetContext_ReturnValue) == 0x000038, "Member 'PackResource_C_GetCountOpacity::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(PackResource_C_GetCountOpacity, CallFunc_GetResourceItemMaxStackSize_ReturnValue) == 0x000040, "Member 'PackResource_C_GetCountOpacity::CallFunc_GetResourceItemMaxStackSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PackResource_C_GetCountOpacity, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'PackResource_C_GetCountOpacity::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PackResource_C_GetCountOpacity, K2Node_Select_Default) == 0x000048, "Member 'PackResource_C_GetCountOpacity::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PackResource_C_GetCountOpacity, K2Node_MakeStruct_LinearColor) == 0x00004C, "Member 'PackResource_C_GetCountOpacity::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(PackResource_C_GetCountOpacity, K2Node_MakeStruct_SlateColor) == 0x000060, "Member 'PackResource_C_GetCountOpacity::K2Node_MakeStruct_SlateColor' has a wrong offset!");

}


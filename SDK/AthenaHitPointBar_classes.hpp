#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaHitPointBar

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaHitPointBar.AthenaHitPointBar_C
// 0x02B0 (0x04E0 - 0x0230)
class UAthenaHitPointBar_C final : public UAthenaPlayerHitPointBarBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(Transient, DuplicateTransient)
	class USizeBox*                               BarSizeBox;                                        // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CurrentValue;                                      // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon;                                              // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       MaxValue;                                          // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USimpleMaterialProgressBar_C*           ProgressBarDelta;                                  // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USimpleMaterialProgressBar_C*           ProgressBarFill;                                   // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         TextArea;                                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture2D*                             Fill_Texture;                                      // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Gloss_Texture;                                     // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Critical_Color_A;                                  // 0x0280(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Critical_Color_B;                                  // 0x0290(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Critical_Color_C;                                  // 0x02A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortMultiSizeFont                     MultiFont;                                         // 0x02B0(0x0210)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UTexture2D*                             Baseplate_Texture;                                 // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DBNOStateCache;                                    // 0x04C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           HealthIcon;                                        // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           ShieldIcon;                                        // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AthenaHitPointBar(int32 EntryPoint);
	void OnDeltaChanged();
	void OnDBNOStateChanged(bool IsDBNO);
	void OnValueChangedWithReason(float Value, EFortHitPointModificationReason Reason);
	void OnMaxValueChanged(float Value);
	void PreConstruct(bool IsDesignTime);
	void UpdateMaxValue();
	void UpdateCurrentValue();
	void Update_Fill_Bar();
	void Initialize_Bar();
	void Update_Delta_Bar();
	void UpdateHealthType();
	void UpdateDBNOState(bool bIsDBNO);
	void SetSize(bool useLargeSize);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaHitPointBar_C">();
	}
	static class UAthenaHitPointBar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaHitPointBar_C>();
	}
};
static_assert(alignof(UAthenaHitPointBar_C) == 0x000008, "Wrong alignment on UAthenaHitPointBar_C");
static_assert(sizeof(UAthenaHitPointBar_C) == 0x0004E0, "Wrong size on UAthenaHitPointBar_C");
static_assert(offsetof(UAthenaHitPointBar_C, UberGraphFrame) == 0x000230, "Member 'UAthenaHitPointBar_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, BarSizeBox) == 0x000238, "Member 'UAthenaHitPointBar_C::BarSizeBox' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, CurrentValue) == 0x000240, "Member 'UAthenaHitPointBar_C::CurrentValue' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, Icon) == 0x000248, "Member 'UAthenaHitPointBar_C::Icon' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, MaxValue) == 0x000250, "Member 'UAthenaHitPointBar_C::MaxValue' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, ProgressBarDelta) == 0x000258, "Member 'UAthenaHitPointBar_C::ProgressBarDelta' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, ProgressBarFill) == 0x000260, "Member 'UAthenaHitPointBar_C::ProgressBarFill' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, TextArea) == 0x000268, "Member 'UAthenaHitPointBar_C::TextArea' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, Fill_Texture) == 0x000270, "Member 'UAthenaHitPointBar_C::Fill_Texture' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, Gloss_Texture) == 0x000278, "Member 'UAthenaHitPointBar_C::Gloss_Texture' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, Critical_Color_A) == 0x000280, "Member 'UAthenaHitPointBar_C::Critical_Color_A' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, Critical_Color_B) == 0x000290, "Member 'UAthenaHitPointBar_C::Critical_Color_B' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, Critical_Color_C) == 0x0002A0, "Member 'UAthenaHitPointBar_C::Critical_Color_C' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, MultiFont) == 0x0002B0, "Member 'UAthenaHitPointBar_C::MultiFont' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, Baseplate_Texture) == 0x0004C0, "Member 'UAthenaHitPointBar_C::Baseplate_Texture' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, DBNOStateCache) == 0x0004C8, "Member 'UAthenaHitPointBar_C::DBNOStateCache' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, HealthIcon) == 0x0004D0, "Member 'UAthenaHitPointBar_C::HealthIcon' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, ShieldIcon) == 0x0004D8, "Member 'UAthenaHitPointBar_C::ShieldIcon' has a wrong offset!");

}


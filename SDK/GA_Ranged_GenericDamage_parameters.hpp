#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Ranged_GenericDamage

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_Ranged_GenericDamage.GA_Ranged_GenericDamage_C.K2_CommitExecute
// 0x00A8 (0x00A8 - 0x0000)
struct GA_Ranged_GenericDamage_C_K2_CommitExecute final
{
public:
	struct FGameplayEventData                     CallFunc_GetEventData_GameplayEventData;           // 0x0000(0x00A8)()
};
static_assert(alignof(GA_Ranged_GenericDamage_C_K2_CommitExecute) == 0x000008, "Wrong alignment on GA_Ranged_GenericDamage_C_K2_CommitExecute");
static_assert(sizeof(GA_Ranged_GenericDamage_C_K2_CommitExecute) == 0x0000A8, "Wrong size on GA_Ranged_GenericDamage_C_K2_CommitExecute");
static_assert(offsetof(GA_Ranged_GenericDamage_C_K2_CommitExecute, CallFunc_GetEventData_GameplayEventData) == 0x000000, "Member 'GA_Ranged_GenericDamage_C_K2_CommitExecute::CallFunc_GetEventData_GameplayEventData' has a wrong offset!");

// Function GA_Ranged_GenericDamage.GA_Ranged_GenericDamage_C.GetEventData
// 0x01D0 (0x01D0 - 0x0000)
struct GA_Ranged_GenericDamage_C_GetEventData final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     GameplayEventData;                                 // 0x0008(0x00A8)(Parm, OutParm)
	struct FGameplayTagContainer                  GT_TargetTags;                                     // 0x00B0(0x0020)(Edit, BlueprintVisible)
	struct FGameplayTagContainer                  GT_InstigatorTags;                                 // 0x00D0(0x0020)(Edit, BlueprintVisible)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerState*                       K2Node_DynamicCast_AsFort_Player_State;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_GetCurrentPawn_ReturnValue;               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWeapon*                            CallFunc_GetCurrentSourceWeapon_ReturnValue;       // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0120(0x00A8)()
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue12;                    // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Ranged_GenericDamage_C_GetEventData) == 0x000008, "Wrong alignment on GA_Ranged_GenericDamage_C_GetEventData");
static_assert(sizeof(GA_Ranged_GenericDamage_C_GetEventData) == 0x0001D0, "Wrong size on GA_Ranged_GenericDamage_C_GetEventData");
static_assert(offsetof(GA_Ranged_GenericDamage_C_GetEventData, EventTag) == 0x000000, "Member 'GA_Ranged_GenericDamage_C_GetEventData::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Ranged_GenericDamage_C_GetEventData, GameplayEventData) == 0x000008, "Member 'GA_Ranged_GenericDamage_C_GetEventData::GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_Ranged_GenericDamage_C_GetEventData, GT_TargetTags) == 0x0000B0, "Member 'GA_Ranged_GenericDamage_C_GetEventData::GT_TargetTags' has a wrong offset!");
static_assert(offsetof(GA_Ranged_GenericDamage_C_GetEventData, GT_InstigatorTags) == 0x0000D0, "Member 'GA_Ranged_GenericDamage_C_GetEventData::GT_InstigatorTags' has a wrong offset!");
static_assert(offsetof(GA_Ranged_GenericDamage_C_GetEventData, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x0000F0, "Member 'GA_Ranged_GenericDamage_C_GetEventData::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ranged_GenericDamage_C_GetEventData, K2Node_DynamicCast_AsFort_Player_State) == 0x0000F8, "Member 'GA_Ranged_GenericDamage_C_GetEventData::K2Node_DynamicCast_AsFort_Player_State' has a wrong offset!");
static_assert(offsetof(GA_Ranged_GenericDamage_C_GetEventData, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'GA_Ranged_GenericDamage_C_GetEventData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Ranged_GenericDamage_C_GetEventData, CallFunc_GetCurrentPawn_ReturnValue) == 0x000108, "Member 'GA_Ranged_GenericDamage_C_GetEventData::CallFunc_GetCurrentPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ranged_GenericDamage_C_GetEventData, CallFunc_IsValid_ReturnValue) == 0x000110, "Member 'GA_Ranged_GenericDamage_C_GetEventData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ranged_GenericDamage_C_GetEventData, CallFunc_GetCurrentSourceWeapon_ReturnValue) == 0x000118, "Member 'GA_Ranged_GenericDamage_C_GetEventData::CallFunc_GetCurrentSourceWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ranged_GenericDamage_C_GetEventData, K2Node_MakeStruct_GameplayEventData) == 0x000120, "Member 'GA_Ranged_GenericDamage_C_GetEventData::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_Ranged_GenericDamage_C_GetEventData, CallFunc_IsValid_ReturnValue1) == 0x0001C8, "Member 'GA_Ranged_GenericDamage_C_GetEventData::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GA_Ranged_GenericDamage_C_GetEventData, CallFunc_IsValid_ReturnValue12) == 0x0001C9, "Member 'GA_Ranged_GenericDamage_C_GetEventData::CallFunc_IsValid_ReturnValue12' has a wrong offset!");
static_assert(offsetof(GA_Ranged_GenericDamage_C_GetEventData, CallFunc_BooleanAND_ReturnValue) == 0x0001CA, "Member 'GA_Ranged_GenericDamage_C_GetEventData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}


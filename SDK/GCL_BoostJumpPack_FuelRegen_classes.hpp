#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCL_BoostJumpPack_FuelRegen

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCL_BoostJumpPack_FuelRegen.GCL_BoostJumpPack_FuelRegen_C
// 0x0080 (0x04C0 - 0x0440)
class AGCL_BoostJumpPack_FuelRegen_C final : public AFortGameplayCueNotify_Looping
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0440(0x0008)(Transient, DuplicateTransient)
	float                                         FullBlinkTimeline_Blink_108772B949790E60DC9BE1BAC70C2EA1; // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FullBlinkTimeline__Direction_108772B949790E60DC9BE1BAC70C2EA1; // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44D[0x3];                                      // 0x044D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FullBlinkTimeline;                                 // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               SpawnedParticleEmitter;                            // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFuelRechargeAudioEnabled;                         // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerPawn_Athena_C*                   PlayerPawn;                                        // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UpwardThrustMax;                                   // 0x0470(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LateralThrustMax;                                  // 0x0474(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UpwardAccelerationMax;                             // 0x0478(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LateralAccelerationMax;                            // 0x047C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentUpwardVelocity;                             // 0x0480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FuelMax;                                           // 0x0484(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetFuelVolumeMultiplier;                        // 0x0488(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentFuelVolumeMultiplier;                       // 0x048C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundOnFuelRecharged;                              // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundOnFuelChargeRamp;                             // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayedFuelRecharge;                               // 0x04A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A1[0x3];                                      // 0x04A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         JetpackActivatedTime;                              // 0x04A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FuelRechargeRampVolumeMultiplier;                  // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            FuelRechargeRampVolumeCurve;                       // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        OnFuelRechargeRamp_Comp;                           // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GCL_BoostJumpPack_FuelRegen(int32 EntryPoint);
	void Start_Fuel_Blink_FX();
	void ResetBlink();
	void Audio_Tick();
	void ReceiveTick(float DeltaSeconds);
	void FullBlinkTimeline__UpdateFunc();
	void FullBlinkTimeline__FinishedFunc();
	void UserConstructionScript();
	bool OnActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void CacheAttributes();
	void GetFuelPercent(float* FuelPercent);
	void SetFuelRechargeAudioEnabled(bool Enabled);
	float GetFuel();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCL_BoostJumpPack_FuelRegen_C">();
	}
	static class AGCL_BoostJumpPack_FuelRegen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCL_BoostJumpPack_FuelRegen_C>();
	}
};
static_assert(alignof(AGCL_BoostJumpPack_FuelRegen_C) == 0x000010, "Wrong alignment on AGCL_BoostJumpPack_FuelRegen_C");
static_assert(sizeof(AGCL_BoostJumpPack_FuelRegen_C) == 0x0004C0, "Wrong size on AGCL_BoostJumpPack_FuelRegen_C");
static_assert(offsetof(AGCL_BoostJumpPack_FuelRegen_C, UberGraphFrame) == 0x000440, "Member 'AGCL_BoostJumpPack_FuelRegen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_FuelRegen_C, FullBlinkTimeline_Blink_108772B949790E60DC9BE1BAC70C2EA1) == 0x000448, "Member 'AGCL_BoostJumpPack_FuelRegen_C::FullBlinkTimeline_Blink_108772B949790E60DC9BE1BAC70C2EA1' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_FuelRegen_C, FullBlinkTimeline__Direction_108772B949790E60DC9BE1BAC70C2EA1) == 0x00044C, "Member 'AGCL_BoostJumpPack_FuelRegen_C::FullBlinkTimeline__Direction_108772B949790E60DC9BE1BAC70C2EA1' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_FuelRegen_C, FullBlinkTimeline) == 0x000450, "Member 'AGCL_BoostJumpPack_FuelRegen_C::FullBlinkTimeline' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_FuelRegen_C, SpawnedParticleEmitter) == 0x000458, "Member 'AGCL_BoostJumpPack_FuelRegen_C::SpawnedParticleEmitter' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_FuelRegen_C, bFuelRechargeAudioEnabled) == 0x000460, "Member 'AGCL_BoostJumpPack_FuelRegen_C::bFuelRechargeAudioEnabled' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_FuelRegen_C, PlayerPawn) == 0x000468, "Member 'AGCL_BoostJumpPack_FuelRegen_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_FuelRegen_C, UpwardThrustMax) == 0x000470, "Member 'AGCL_BoostJumpPack_FuelRegen_C::UpwardThrustMax' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_FuelRegen_C, LateralThrustMax) == 0x000474, "Member 'AGCL_BoostJumpPack_FuelRegen_C::LateralThrustMax' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_FuelRegen_C, UpwardAccelerationMax) == 0x000478, "Member 'AGCL_BoostJumpPack_FuelRegen_C::UpwardAccelerationMax' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_FuelRegen_C, LateralAccelerationMax) == 0x00047C, "Member 'AGCL_BoostJumpPack_FuelRegen_C::LateralAccelerationMax' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_FuelRegen_C, CurrentUpwardVelocity) == 0x000480, "Member 'AGCL_BoostJumpPack_FuelRegen_C::CurrentUpwardVelocity' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_FuelRegen_C, FuelMax) == 0x000484, "Member 'AGCL_BoostJumpPack_FuelRegen_C::FuelMax' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_FuelRegen_C, TargetFuelVolumeMultiplier) == 0x000488, "Member 'AGCL_BoostJumpPack_FuelRegen_C::TargetFuelVolumeMultiplier' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_FuelRegen_C, CurrentFuelVolumeMultiplier) == 0x00048C, "Member 'AGCL_BoostJumpPack_FuelRegen_C::CurrentFuelVolumeMultiplier' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_FuelRegen_C, SoundOnFuelRecharged) == 0x000490, "Member 'AGCL_BoostJumpPack_FuelRegen_C::SoundOnFuelRecharged' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_FuelRegen_C, SoundOnFuelChargeRamp) == 0x000498, "Member 'AGCL_BoostJumpPack_FuelRegen_C::SoundOnFuelChargeRamp' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_FuelRegen_C, bPlayedFuelRecharge) == 0x0004A0, "Member 'AGCL_BoostJumpPack_FuelRegen_C::bPlayedFuelRecharge' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_FuelRegen_C, JetpackActivatedTime) == 0x0004A4, "Member 'AGCL_BoostJumpPack_FuelRegen_C::JetpackActivatedTime' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_FuelRegen_C, FuelRechargeRampVolumeMultiplier) == 0x0004A8, "Member 'AGCL_BoostJumpPack_FuelRegen_C::FuelRechargeRampVolumeMultiplier' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_FuelRegen_C, FuelRechargeRampVolumeCurve) == 0x0004B0, "Member 'AGCL_BoostJumpPack_FuelRegen_C::FuelRechargeRampVolumeCurve' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_FuelRegen_C, OnFuelRechargeRamp_Comp) == 0x0004B8, "Member 'AGCL_BoostJumpPack_FuelRegen_C::OnFuelRechargeRamp_Comp' has a wrong offset!");

}


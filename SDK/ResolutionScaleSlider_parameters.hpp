#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ResolutionScaleSlider

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function ResolutionScaleSlider.ResolutionScaleSlider_C.ExecuteUbergraph_ResolutionScaleSlider
// 0x0160 (0x0160 - 0x0000)
struct ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent1;                          // 0x0008(0x0070)(ConstParm)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0080(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00B8(0x0070)(ConstParm)
	float                                         K2Node_ComponentBoundEvent_Value1;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0130(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor1;                    // 0x0140(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue1;                    // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider) == 0x000008, "Wrong alignment on ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider");
static_assert(sizeof(ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider) == 0x000160, "Wrong size on ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider");
static_assert(offsetof(ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider, EntryPoint) == 0x000000, "Member 'ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider::EntryPoint' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider, K2Node_Event_MouseEvent1) == 0x000008, "Member 'ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider::K2Node_Event_MouseEvent1' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000078, "Member 'ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider, K2Node_Event_MyGeometry) == 0x000080, "Member 'ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider, K2Node_Event_MouseEvent) == 0x0000B8, "Member 'ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider, K2Node_ComponentBoundEvent_Value1) == 0x000128, "Member 'ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider::K2Node_ComponentBoundEvent_Value1' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider, K2Node_ComponentBoundEvent_Value) == 0x00012C, "Member 'ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider, K2Node_MakeStruct_LinearColor) == 0x000130, "Member 'ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider, K2Node_MakeStruct_LinearColor1) == 0x000140, "Member 'ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider::K2Node_MakeStruct_LinearColor1' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider, CallFunc_GetGameUserSettings_ReturnValue) == 0x000150, "Member 'ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider, CallFunc_GetValue_ReturnValue) == 0x000158, "Member 'ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider, CallFunc_GetValue_ReturnValue1) == 0x00015C, "Member 'ResolutionScaleSlider_C_ExecuteUbergraph_ResolutionScaleSlider::CallFunc_GetValue_ReturnValue1' has a wrong offset!");

// Function ResolutionScaleSlider.ResolutionScaleSlider_C.BndEvt__MenuSlider_K2Node_ComponentBoundEvent_9_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct ResolutionScaleSlider_C_BndEvt__MenuSlider_K2Node_ComponentBoundEvent_9_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ResolutionScaleSlider_C_BndEvt__MenuSlider_K2Node_ComponentBoundEvent_9_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on ResolutionScaleSlider_C_BndEvt__MenuSlider_K2Node_ComponentBoundEvent_9_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(ResolutionScaleSlider_C_BndEvt__MenuSlider_K2Node_ComponentBoundEvent_9_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on ResolutionScaleSlider_C_BndEvt__MenuSlider_K2Node_ComponentBoundEvent_9_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(ResolutionScaleSlider_C_BndEvt__MenuSlider_K2Node_ComponentBoundEvent_9_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'ResolutionScaleSlider_C_BndEvt__MenuSlider_K2Node_ComponentBoundEvent_9_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function ResolutionScaleSlider.ResolutionScaleSlider_C.BndEvt__MenuSlider_K2Node_ComponentBoundEvent_124_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct ResolutionScaleSlider_C_BndEvt__MenuSlider_K2Node_ComponentBoundEvent_124_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ResolutionScaleSlider_C_BndEvt__MenuSlider_K2Node_ComponentBoundEvent_124_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on ResolutionScaleSlider_C_BndEvt__MenuSlider_K2Node_ComponentBoundEvent_124_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(ResolutionScaleSlider_C_BndEvt__MenuSlider_K2Node_ComponentBoundEvent_124_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on ResolutionScaleSlider_C_BndEvt__MenuSlider_K2Node_ComponentBoundEvent_124_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(ResolutionScaleSlider_C_BndEvt__MenuSlider_K2Node_ComponentBoundEvent_124_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'ResolutionScaleSlider_C_BndEvt__MenuSlider_K2Node_ComponentBoundEvent_124_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function ResolutionScaleSlider.ResolutionScaleSlider_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct ResolutionScaleSlider_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ResolutionScaleSlider_C_OnMouseEnter) == 0x000008, "Wrong alignment on ResolutionScaleSlider_C_OnMouseEnter");
static_assert(sizeof(ResolutionScaleSlider_C_OnMouseEnter) == 0x0000A8, "Wrong size on ResolutionScaleSlider_C_OnMouseEnter");
static_assert(offsetof(ResolutionScaleSlider_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'ResolutionScaleSlider_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'ResolutionScaleSlider_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function ResolutionScaleSlider.ResolutionScaleSlider_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct ResolutionScaleSlider_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ResolutionScaleSlider_C_OnMouseLeave) == 0x000008, "Wrong alignment on ResolutionScaleSlider_C_OnMouseLeave");
static_assert(sizeof(ResolutionScaleSlider_C_OnMouseLeave) == 0x000070, "Wrong size on ResolutionScaleSlider_C_OnMouseLeave");
static_assert(offsetof(ResolutionScaleSlider_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'ResolutionScaleSlider_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function ResolutionScaleSlider.ResolutionScaleSlider_C.Update Slider
// 0x0038 (0x0038 - 0x0000)
struct ResolutionScaleSlider_C_Update_Slider final
{
public:
	class FText                                   Slider_Text;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Hover_Text_0;                                      // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UCommonTextBlock*                       Tooltip_Text_Block;                                // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ResolutionScaleSlider_C_Update_Slider) == 0x000008, "Wrong alignment on ResolutionScaleSlider_C_Update_Slider");
static_assert(sizeof(ResolutionScaleSlider_C_Update_Slider) == 0x000038, "Wrong size on ResolutionScaleSlider_C_Update_Slider");
static_assert(offsetof(ResolutionScaleSlider_C_Update_Slider, Slider_Text) == 0x000000, "Member 'ResolutionScaleSlider_C_Update_Slider::Slider_Text' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_Update_Slider, Hover_Text_0) == 0x000018, "Member 'ResolutionScaleSlider_C_Update_Slider::Hover_Text_0' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_Update_Slider, Tooltip_Text_Block) == 0x000030, "Member 'ResolutionScaleSlider_C_Update_Slider::Tooltip_Text_Block' has a wrong offset!");

// Function ResolutionScaleSlider.ResolutionScaleSlider_C.Center on Widget
// 0x0008 (0x0008 - 0x0000)
struct ResolutionScaleSlider_C_Center_on_Widget final
{
public:
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ResolutionScaleSlider_C_Center_on_Widget) == 0x000008, "Wrong alignment on ResolutionScaleSlider_C_Center_on_Widget");
static_assert(sizeof(ResolutionScaleSlider_C_Center_on_Widget) == 0x000008, "Wrong size on ResolutionScaleSlider_C_Center_on_Widget");
static_assert(offsetof(ResolutionScaleSlider_C_Center_on_Widget, CallFunc_GetUINavigationManager_ReturnValue) == 0x000000, "Member 'ResolutionScaleSlider_C_Center_on_Widget::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");

// Function ResolutionScaleSlider.ResolutionScaleSlider_C.OnFocusReceived
// 0x01D0 (0x01D0 - 0x0000)
struct ResolutionScaleSlider_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0108(0x00B8)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue1;      // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ResolutionScaleSlider_C_OnFocusReceived) == 0x000008, "Wrong alignment on ResolutionScaleSlider_C_OnFocusReceived");
static_assert(sizeof(ResolutionScaleSlider_C_OnFocusReceived) == 0x0001D0, "Wrong size on ResolutionScaleSlider_C_OnFocusReceived");
static_assert(offsetof(ResolutionScaleSlider_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'ResolutionScaleSlider_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'ResolutionScaleSlider_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'ResolutionScaleSlider_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_OnFocusReceived, CallFunc_GetUINavigationManager_ReturnValue) == 0x0000F8, "Member 'ResolutionScaleSlider_C_OnFocusReceived::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_OnFocusReceived, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000100, "Member 'ResolutionScaleSlider_C_OnFocusReceived::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x000108, "Member 'ResolutionScaleSlider_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_OnFocusReceived, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001C0, "Member 'ResolutionScaleSlider_C_OnFocusReceived::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_OnFocusReceived, CallFunc_GetUINavigationManager_ReturnValue1) == 0x0001C8, "Member 'ResolutionScaleSlider_C_OnFocusReceived::CallFunc_GetUINavigationManager_ReturnValue1' has a wrong offset!");

// Function ResolutionScaleSlider.ResolutionScaleSlider_C.RefreshRenderScale
// 0x01A8 (0x01A8 - 0x0000)
struct ResolutionScaleSlider_C_RefreshRenderScale final
{
public:
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMinYResolutionFor3DView_ReturnValue;   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWindowMode                                   CallFunc_GetFullscreenMode_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              CallFunc_GetScreenResolution_ReturnValue;          // 0x0028(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetDesktopResolution_ReturnValue;         // 0x0030(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_MinScaleValue; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_MaxScaleValue; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0050(0x0018)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0070(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue1;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue1;           // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue1;            // 0x00D0(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue12;           // 0x00E8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x0100(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData12;            // 0x0140(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0190(0x0018)()
};
static_assert(alignof(ResolutionScaleSlider_C_RefreshRenderScale) == 0x000008, "Wrong alignment on ResolutionScaleSlider_C_RefreshRenderScale");
static_assert(sizeof(ResolutionScaleSlider_C_RefreshRenderScale) == 0x0001A8, "Wrong size on ResolutionScaleSlider_C_RefreshRenderScale");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_MakeLiteralName_ReturnValue) == 0x000000, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_GetValue_ReturnValue) == 0x000008, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_GetGameUserSettings_ReturnValue) == 0x000010, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_GetMinYResolutionFor3DView_ReturnValue) == 0x000018, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_GetMinYResolutionFor3DView_ReturnValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_GetFullscreenMode_ReturnValue) == 0x00001C, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_GetFullscreenMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000020, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000024, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000025, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_GetScreenResolution_ReturnValue) == 0x000028, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_GetScreenResolution_ReturnValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_GetDesktopResolution_ReturnValue) == 0x000030, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_GetDesktopResolution_ReturnValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized) == 0x000038, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue) == 0x00003C, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_GetResolutionScaleInformationEx_MinScaleValue) == 0x000040, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_GetResolutionScaleInformationEx_MinScaleValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_GetResolutionScaleInformationEx_MaxScaleValue) == 0x000044, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_GetResolutionScaleInformationEx_MaxScaleValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_SelectInt_ReturnValue) == 0x000048, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_Conv_FloatToText_ReturnValue) == 0x000050, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x000068, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, K2Node_MakeStruct_FormatArgumentData) == 0x000070, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000B0, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x0000B4, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_FClamp_ReturnValue) == 0x0000B8, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_FMax_ReturnValue) == 0x0000BC, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_SelectInt_ReturnValue1) == 0x0000C0, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_SelectInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000C4, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_Multiply_IntFloat_ReturnValue1) == 0x0000C8, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_Multiply_IntFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_Conv_FloatToText_ReturnValue1) == 0x0000D0, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_Conv_FloatToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_Conv_FloatToText_ReturnValue12) == 0x0000E8, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_Conv_FloatToText_ReturnValue12' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, K2Node_MakeStruct_FormatArgumentData1) == 0x000100, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, K2Node_MakeStruct_FormatArgumentData12) == 0x000140, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::K2Node_MakeStruct_FormatArgumentData12' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, K2Node_MakeArray_Array) == 0x000180, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ResolutionScaleSlider_C_RefreshRenderScale, CallFunc_Format_ReturnValue) == 0x000190, "Member 'ResolutionScaleSlider_C_RefreshRenderScale::CallFunc_Format_ReturnValue' has a wrong offset!");

}


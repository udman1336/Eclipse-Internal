#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_Generic_AdrenalineRush_PeriodicHeal

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GC_Generic_AdrenalineRush_PeriodicHeal.GC_Generic_AdrenalineRush_PeriodicHeal_C.ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal
// 0x0100 (0x0100 - 0x0000)
struct GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_MyTarget;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayCueEvent                             K2Node_Event_EventType;                            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_Event_Parameters;                           // 0x0030(0x00B8)(ConstParm, ContainsInstancedReference)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerPawn_Generic_C*                  K2Node_DynamicCast_AsPlayer_Pawn_Generic;          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HealthCheck_Check_Return;                 // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal) == 0x000008, "Wrong alignment on GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal");
static_assert(sizeof(GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal) == 0x000100, "Wrong size on GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal");
static_assert(offsetof(GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal, EntryPoint) == 0x000000, "Member 'GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal::EntryPoint' has a wrong offset!");
static_assert(offsetof(GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal, Temp_int_Array_Index_Variable) == 0x000004, "Member 'GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal, CallFunc_Array_Get_Item) == 0x000010, "Member 'GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal, K2Node_Event_MyTarget) == 0x000020, "Member 'GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal::K2Node_Event_MyTarget' has a wrong offset!");
static_assert(offsetof(GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal, K2Node_Event_EventType) == 0x000028, "Member 'GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal::K2Node_Event_EventType' has a wrong offset!");
static_assert(offsetof(GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal, K2Node_Event_Parameters) == 0x000030, "Member 'GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal::K2Node_Event_Parameters' has a wrong offset!");
static_assert(offsetof(GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal, CallFunc_IsPlaying_ReturnValue) == 0x0000E8, "Member 'GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal, K2Node_SwitchEnum_CmpSuccess) == 0x0000E9, "Member 'GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal, K2Node_DynamicCast_AsPlayer_Pawn_Generic) == 0x0000F0, "Member 'GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal::K2Node_DynamicCast_AsPlayer_Pawn_Generic' has a wrong offset!");
static_assert(offsetof(GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal, CallFunc_HealthCheck_Check_Return) == 0x0000F9, "Member 'GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal::CallFunc_HealthCheck_Check_Return' has a wrong offset!");
static_assert(offsetof(GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000FA, "Member 'GC_Generic_AdrenalineRush_PeriodicHeal_C_ExecuteUbergraph_GC_Generic_AdrenalineRush_PeriodicHeal::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function GC_Generic_AdrenalineRush_PeriodicHeal.GC_Generic_AdrenalineRush_PeriodicHeal_C.K2_HandleGameplayCue
// 0x00C8 (0x00C8 - 0x0000)
struct GC_Generic_AdrenalineRush_PeriodicHeal_C_K2_HandleGameplayCue final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayCueEvent                             EventType;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0010(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GC_Generic_AdrenalineRush_PeriodicHeal_C_K2_HandleGameplayCue) == 0x000008, "Wrong alignment on GC_Generic_AdrenalineRush_PeriodicHeal_C_K2_HandleGameplayCue");
static_assert(sizeof(GC_Generic_AdrenalineRush_PeriodicHeal_C_K2_HandleGameplayCue) == 0x0000C8, "Wrong size on GC_Generic_AdrenalineRush_PeriodicHeal_C_K2_HandleGameplayCue");
static_assert(offsetof(GC_Generic_AdrenalineRush_PeriodicHeal_C_K2_HandleGameplayCue, MyTarget) == 0x000000, "Member 'GC_Generic_AdrenalineRush_PeriodicHeal_C_K2_HandleGameplayCue::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_Generic_AdrenalineRush_PeriodicHeal_C_K2_HandleGameplayCue, EventType) == 0x000008, "Member 'GC_Generic_AdrenalineRush_PeriodicHeal_C_K2_HandleGameplayCue::EventType' has a wrong offset!");
static_assert(offsetof(GC_Generic_AdrenalineRush_PeriodicHeal_C_K2_HandleGameplayCue, Parameters) == 0x000010, "Member 'GC_Generic_AdrenalineRush_PeriodicHeal_C_K2_HandleGameplayCue::Parameters' has a wrong offset!");

// Function GC_Generic_AdrenalineRush_PeriodicHeal.GC_Generic_AdrenalineRush_PeriodicHeal_C.HealthCheck
// 0x0014 (0x0014 - 0x0000)
struct GC_Generic_AdrenalineRush_PeriodicHeal_C_HealthCheck final
{
public:
	bool                                          Check_Return;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxHealth_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GC_Generic_AdrenalineRush_PeriodicHeal_C_HealthCheck) == 0x000004, "Wrong alignment on GC_Generic_AdrenalineRush_PeriodicHeal_C_HealthCheck");
static_assert(sizeof(GC_Generic_AdrenalineRush_PeriodicHeal_C_HealthCheck) == 0x000014, "Wrong size on GC_Generic_AdrenalineRush_PeriodicHeal_C_HealthCheck");
static_assert(offsetof(GC_Generic_AdrenalineRush_PeriodicHeal_C_HealthCheck, Check_Return) == 0x000000, "Member 'GC_Generic_AdrenalineRush_PeriodicHeal_C_HealthCheck::Check_Return' has a wrong offset!");
static_assert(offsetof(GC_Generic_AdrenalineRush_PeriodicHeal_C_HealthCheck, CallFunc_GetMaxHealth_ReturnValue) == 0x000004, "Member 'GC_Generic_AdrenalineRush_PeriodicHeal_C_HealthCheck::CallFunc_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Generic_AdrenalineRush_PeriodicHeal_C_HealthCheck, CallFunc_GetHealth_ReturnValue) == 0x000008, "Member 'GC_Generic_AdrenalineRush_PeriodicHeal_C_HealthCheck::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Generic_AdrenalineRush_PeriodicHeal_C_HealthCheck, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'GC_Generic_AdrenalineRush_PeriodicHeal_C_HealthCheck::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Generic_AdrenalineRush_PeriodicHeal_C_HealthCheck, CallFunc_Less_FloatFloat_ReturnValue) == 0x000010, "Member 'GC_Generic_AdrenalineRush_PeriodicHeal_C_HealthCheck::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FlingerInterface

#include "Basic.hpp"

#include "FlingerInterface_classes.hpp"
#include "FlingerInterface_parameters.hpp"


namespace SDK
{

// Function FlingerInterface.FlingerInterface_C.FlingerSpawnedAnEnemy
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortAIPawn*                      EnemySpawned                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortProjectileBase*              ProjectileThatSpawnedThisEnemy                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IFlingerInterface_C::FlingerSpawnedAnEnemy(class AFortAIPawn* EnemySpawned, class AFortProjectileBase* ProjectileThatSpawnedThisEnemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlingerInterface_C", "FlingerSpawnedAnEnemy");

	Params::FlingerInterface_C_FlingerSpawnedAnEnemy Parms{};

	Parms.EnemySpawned = EnemySpawned;
	Parms.ProjectileThatSpawnedThisEnemy = ProjectileThatSpawnedThisEnemy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FlingerInterface.FlingerInterface_C.CanFlingerSpawnAnEnemy
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ActorWhoAsked                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IFlingerInterface_C::CanFlingerSpawnAnEnemy(class AActor* ActorWhoAsked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlingerInterface_C", "CanFlingerSpawnAnEnemy");

	Params::FlingerInterface_C_CanFlingerSpawnAnEnemy Parms{};

	Parms.ActorWhoAsked = ActorWhoAsked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FlingerInterface.FlingerInterface_C.FlingerCanSpawnAnEnemy
// (Public, BlueprintCallable, BlueprintEvent)

void IFlingerInterface_C::FlingerCanSpawnAnEnemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlingerInterface_C", "FlingerCanSpawnAnEnemy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FlingerInterface.FlingerInterface_C.FlingerCan'tSpawnAnEnemy
// (Public, BlueprintCallable, BlueprintEvent)

void IFlingerInterface_C::FlingerCan_tSpawnAnEnemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlingerInterface_C", "FlingerCan'tSpawnAnEnemy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FlingerInterface.FlingerInterface_C.FlingerThrewAProjectileContainingAnEnemy
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortProjectileBase*              Projectile                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IFlingerInterface_C::FlingerThrewAProjectileContainingAnEnemy(class AFortProjectileBase* Projectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlingerInterface_C", "FlingerThrewAProjectileContainingAnEnemy");

	Params::FlingerInterface_C_FlingerThrewAProjectileContainingAnEnemy Parms{};

	Parms.Projectile = Projectile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FlingerInterface.FlingerInterface_C.FlingerEnemyFailedToSpawn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortProjectileBase*              FailedProjectile                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IFlingerInterface_C::FlingerEnemyFailedToSpawn(class AFortProjectileBase* FailedProjectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlingerInterface_C", "FlingerEnemyFailedToSpawn");

	Params::FlingerInterface_C_FlingerEnemyFailedToSpawn Parms{};

	Parms.FailedProjectile = FailedProjectile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FlingerInterface.FlingerInterface_C.AlertEnemySpawnedByFlinger
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          PushMomentum                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PushDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            OwningFlinger                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IFlingerInterface_C::AlertEnemySpawnedByFlinger(const struct FVector& PushMomentum, float PushDuration, class APawn* OwningFlinger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlingerInterface_C", "AlertEnemySpawnedByFlinger");

	Params::FlingerInterface_C_AlertEnemySpawnedByFlinger Parms{};

	Parms.PushMomentum = std::move(PushMomentum);
	Parms.PushDuration = PushDuration;
	Parms.OwningFlinger = OwningFlinger;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FlingerInterface.FlingerInterface_C.FlingerEnemyDied
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            PawnThatDied                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IFlingerInterface_C::FlingerEnemyDied(class APawn* PawnThatDied)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlingerInterface_C", "FlingerEnemyDied");

	Params::FlingerInterface_C_FlingerEnemyDied Parms{};

	Parms.PawnThatDied = PawnThatDied;

	UObject::ProcessEvent(Func, &Parms);
}

}


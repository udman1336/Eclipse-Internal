#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TabGamePadConfig

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonInput_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function TabGamePadConfig.TabGamePadConfig_C.ExecuteUbergraph_TabGamePadConfig
// 0x0158 (0x0158 - 0x0000)
struct TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECommonGamepadType                            Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonGamepadType                            Temp_byte_Variable1;                               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Number_in_List, class UOptionsMenuInputOneKey_C* Widget)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor)
	bool                                          CallFunc_IsPS4Platform_ReturnValue;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsXboxPlatform_ReturnValue;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Selected_Index12;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Selected_Index)>         K2Node_CreateDelegate_OutputDelegate12;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 Number_in_List, bool Is_Primary_Button)> K2Node_CreateDelegate_OutputDelegate123;           // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_Selected_Index1;                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UUserWidget*                            K2Node_ComponentBoundEvent_Widget;                 // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Number_in_List1;                // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Is_Primary_Button;              // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UOptionsMenuInputOneKey_C*              K2Node_DynamicCast_AsOptions_Menu_Input_One_Key;   // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00A0(0x0018)()
	int32                                         K2Node_CustomEvent_Selected_Index;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Number_In_List;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOptionsMenuInputOneKey_C*              K2Node_CustomEvent_Widget;                         // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Selected_Index)>         K2Node_CreateDelegate_OutputDelegate1234;          // 0x00C8(0x0010)(ZeroConstructor, NoDestructor)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue1;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputContext*                    CallFunc_GetContext_ReturnValue12;                 // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable1;                             // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Selected_Index;         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item1;                          // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ECommonGamepadType                            K2Node_Select1_Default;                            // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRefreshPending_ReturnValue;             // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 Selected_Index)>         K2Node_CreateDelegate_OutputDelegate12345;         // 0x0140(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasCustomGamepadBindingChanges_ReturnValue; // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig) == 0x000008, "Wrong alignment on TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig");
static_assert(sizeof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig) == 0x000158, "Wrong size on TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, EntryPoint) == 0x000000, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::EntryPoint' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, Temp_bool_Variable) == 0x000004, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, Temp_byte_Variable) == 0x000005, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, Temp_byte_Variable1) == 0x000006, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, K2Node_CreateDelegate_OutputDelegate1) == 0x000020, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, CallFunc_IsPS4Platform_ReturnValue) == 0x000038, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::CallFunc_IsPS4Platform_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, CallFunc_IsXboxPlatform_ReturnValue) == 0x000039, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::CallFunc_IsXboxPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, CallFunc_BooleanOR_ReturnValue) == 0x00003A, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, K2Node_CustomEvent_Selected_Index12) == 0x00003C, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::K2Node_CustomEvent_Selected_Index12' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, K2Node_CreateDelegate_OutputDelegate12) == 0x000040, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, K2Node_CreateDelegate_OutputDelegate123) == 0x000058, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::K2Node_CreateDelegate_OutputDelegate123' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, K2Node_CustomEvent_Selected_Index1) == 0x000068, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::K2Node_CustomEvent_Selected_Index1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, CallFunc_Array_Get_Item) == 0x000070, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, K2Node_ComponentBoundEvent_Widget) == 0x000080, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::K2Node_ComponentBoundEvent_Widget' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, K2Node_CustomEvent_Number_in_List1) == 0x000088, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::K2Node_CustomEvent_Number_in_List1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, K2Node_CustomEvent_Is_Primary_Button) == 0x00008C, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::K2Node_CustomEvent_Is_Primary_Button' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, K2Node_DynamicCast_AsOptions_Menu_Input_One_Key) == 0x000090, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::K2Node_DynamicCast_AsOptions_Menu_Input_One_Key' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, CallFunc_MakeLiteralText_ReturnValue) == 0x0000A0, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, K2Node_CustomEvent_Selected_Index) == 0x0000B8, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::K2Node_CustomEvent_Selected_Index' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, K2Node_CustomEvent_Number_In_List) == 0x0000BC, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::K2Node_CustomEvent_Number_In_List' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, K2Node_CustomEvent_Widget) == 0x0000C0, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::K2Node_CustomEvent_Widget' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, K2Node_CreateDelegate_OutputDelegate1234) == 0x0000C8, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::K2Node_CreateDelegate_OutputDelegate1234' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, CallFunc_GetContext_ReturnValue1) == 0x0000D8, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, CallFunc_GetContext_ReturnValue12) == 0x0000E0, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::CallFunc_GetContext_ReturnValue12' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, Temp_string_Variable) == 0x0000E8, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, Temp_string_Variable1) == 0x0000F8, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::Temp_string_Variable1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, K2Node_ComponentBoundEvent_Selected_Index) == 0x000108, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::K2Node_ComponentBoundEvent_Selected_Index' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, Temp_bool_Variable1) == 0x00010C, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, CallFunc_Array_Get_Item1) == 0x000110, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000120, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, K2Node_Select_Default) == 0x000128, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, K2Node_Select1_Default) == 0x000138, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, CallFunc_IsRefreshPending_ReturnValue) == 0x000139, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::CallFunc_IsRefreshPending_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, K2Node_CreateDelegate_OutputDelegate12345) == 0x000140, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::K2Node_CreateDelegate_OutputDelegate12345' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig, CallFunc_HasCustomGamepadBindingChanges_ReturnValue) == 0x000150, "Member 'TabGamePadConfig_C_ExecuteUbergraph_TabGamePadConfig::CallFunc_HasCustomGamepadBindingChanges_ReturnValue' has a wrong offset!");

// Function TabGamePadConfig.TabGamePadConfig_C.BndEvt__CustomInputTemplateConfigs_K2Node_ComponentBoundEvent_5_Selection Changed__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct TabGamePadConfig_C_BndEvt__CustomInputTemplateConfigs_K2Node_ComponentBoundEvent_5_Selection_Changed__DelegateSignature final
{
public:
	int32                                         Selected_Index;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_C_BndEvt__CustomInputTemplateConfigs_K2Node_ComponentBoundEvent_5_Selection_Changed__DelegateSignature) == 0x000004, "Wrong alignment on TabGamePadConfig_C_BndEvt__CustomInputTemplateConfigs_K2Node_ComponentBoundEvent_5_Selection_Changed__DelegateSignature");
static_assert(sizeof(TabGamePadConfig_C_BndEvt__CustomInputTemplateConfigs_K2Node_ComponentBoundEvent_5_Selection_Changed__DelegateSignature) == 0x000004, "Wrong size on TabGamePadConfig_C_BndEvt__CustomInputTemplateConfigs_K2Node_ComponentBoundEvent_5_Selection_Changed__DelegateSignature");
static_assert(offsetof(TabGamePadConfig_C_BndEvt__CustomInputTemplateConfigs_K2Node_ComponentBoundEvent_5_Selection_Changed__DelegateSignature, Selected_Index) == 0x000000, "Member 'TabGamePadConfig_C_BndEvt__CustomInputTemplateConfigs_K2Node_ComponentBoundEvent_5_Selection_Changed__DelegateSignature::Selected_Index' has a wrong offset!");

// Function TabGamePadConfig.TabGamePadConfig_C.Unclicked_Bind
// 0x0010 (0x0010 - 0x0000)
struct TabGamePadConfig_C_Unclicked_Bind final
{
public:
	int32                                         Number_in_List;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOptionsMenuInputOneKey_C*              Widget;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_C_Unclicked_Bind) == 0x000008, "Wrong alignment on TabGamePadConfig_C_Unclicked_Bind");
static_assert(sizeof(TabGamePadConfig_C_Unclicked_Bind) == 0x000010, "Wrong size on TabGamePadConfig_C_Unclicked_Bind");
static_assert(offsetof(TabGamePadConfig_C_Unclicked_Bind, Number_in_List) == 0x000000, "Member 'TabGamePadConfig_C_Unclicked_Bind::Number_in_List' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Unclicked_Bind, Widget) == 0x000008, "Member 'TabGamePadConfig_C_Unclicked_Bind::Widget' has a wrong offset!");

// Function TabGamePadConfig.TabGamePadConfig_C.Configuration Changed
// 0x0004 (0x0004 - 0x0000)
struct TabGamePadConfig_C_Configuration_Changed final
{
public:
	int32                                         Selected_Index;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_C_Configuration_Changed) == 0x000004, "Wrong alignment on TabGamePadConfig_C_Configuration_Changed");
static_assert(sizeof(TabGamePadConfig_C_Configuration_Changed) == 0x000004, "Wrong size on TabGamePadConfig_C_Configuration_Changed");
static_assert(offsetof(TabGamePadConfig_C_Configuration_Changed, Selected_Index) == 0x000000, "Member 'TabGamePadConfig_C_Configuration_Changed::Selected_Index' has a wrong offset!");

// Function TabGamePadConfig.TabGamePadConfig_C.InputClicked_Bind
// 0x0008 (0x0008 - 0x0000)
struct TabGamePadConfig_C_InputClicked_Bind final
{
public:
	int32                                         Number_in_List;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Primary_Button;                                 // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_C_InputClicked_Bind) == 0x000004, "Wrong alignment on TabGamePadConfig_C_InputClicked_Bind");
static_assert(sizeof(TabGamePadConfig_C_InputClicked_Bind) == 0x000008, "Wrong size on TabGamePadConfig_C_InputClicked_Bind");
static_assert(offsetof(TabGamePadConfig_C_InputClicked_Bind, Number_in_List) == 0x000000, "Member 'TabGamePadConfig_C_InputClicked_Bind::Number_in_List' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_InputClicked_Bind, Is_Primary_Button) == 0x000004, "Member 'TabGamePadConfig_C_InputClicked_Bind::Is_Primary_Button' has a wrong offset!");

// Function TabGamePadConfig.TabGamePadConfig_C.BndEvt__InputCommonListView_K2Node_ComponentBoundEvent_130_OnListViewItemWidgetCreated__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct TabGamePadConfig_C_BndEvt__InputCommonListView_K2Node_ComponentBoundEvent_130_OnListViewItemWidgetCreated__DelegateSignature final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_C_BndEvt__InputCommonListView_K2Node_ComponentBoundEvent_130_OnListViewItemWidgetCreated__DelegateSignature) == 0x000008, "Wrong alignment on TabGamePadConfig_C_BndEvt__InputCommonListView_K2Node_ComponentBoundEvent_130_OnListViewItemWidgetCreated__DelegateSignature");
static_assert(sizeof(TabGamePadConfig_C_BndEvt__InputCommonListView_K2Node_ComponentBoundEvent_130_OnListViewItemWidgetCreated__DelegateSignature) == 0x000008, "Wrong size on TabGamePadConfig_C_BndEvt__InputCommonListView_K2Node_ComponentBoundEvent_130_OnListViewItemWidgetCreated__DelegateSignature");
static_assert(offsetof(TabGamePadConfig_C_BndEvt__InputCommonListView_K2Node_ComponentBoundEvent_130_OnListViewItemWidgetCreated__DelegateSignature, Widget) == 0x000000, "Member 'TabGamePadConfig_C_BndEvt__InputCommonListView_K2Node_ComponentBoundEvent_130_OnListViewItemWidgetCreated__DelegateSignature::Widget' has a wrong offset!");

// Function TabGamePadConfig.TabGamePadConfig_C.Gamepad Config Changed
// 0x0004 (0x0004 - 0x0000)
struct TabGamePadConfig_C_Gamepad_Config_Changed final
{
public:
	int32                                         Selected_Index;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_C_Gamepad_Config_Changed) == 0x000004, "Wrong alignment on TabGamePadConfig_C_Gamepad_Config_Changed");
static_assert(sizeof(TabGamePadConfig_C_Gamepad_Config_Changed) == 0x000004, "Wrong size on TabGamePadConfig_C_Gamepad_Config_Changed");
static_assert(offsetof(TabGamePadConfig_C_Gamepad_Config_Changed, Selected_Index) == 0x000000, "Member 'TabGamePadConfig_C_Gamepad_Config_Changed::Selected_Index' has a wrong offset!");

// Function TabGamePadConfig.TabGamePadConfig_C.GamepadPlatformConfigChanged
// 0x0004 (0x0004 - 0x0000)
struct TabGamePadConfig_C_GamepadPlatformConfigChanged final
{
public:
	int32                                         Selected_Index;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_C_GamepadPlatformConfigChanged) == 0x000004, "Wrong alignment on TabGamePadConfig_C_GamepadPlatformConfigChanged");
static_assert(sizeof(TabGamePadConfig_C_GamepadPlatformConfigChanged) == 0x000004, "Wrong size on TabGamePadConfig_C_GamepadPlatformConfigChanged");
static_assert(offsetof(TabGamePadConfig_C_GamepadPlatformConfigChanged, Selected_Index) == 0x000000, "Member 'TabGamePadConfig_C_GamepadPlatformConfigChanged::Selected_Index' has a wrong offset!");

// Function TabGamePadConfig.TabGamePadConfig_C.Initialize Data
// 0x0148 (0x0148 - 0x0000)
struct TabGamePadConfig_C_Initialize_Data final
{
public:
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESubGame                                      CallFunc_GetSubGame_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetNames; // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class FText>                           CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetFriendlyNames; // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   Temp_text_Variable;                                // 0x0030(0x0018)()
	class FText                                   Temp_text_Variable1;                               // 0x0048(0x0018)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0070(0x0018)()
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   K2Node_Select_Default;                             // 0x00B0(0x0018)()
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue1;                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESubGame                                      CallFunc_GetSubGame_ReturnValue1;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetNames1; // 0x00D8(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class FText>                           CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetFriendlyNames1; // 0x00E8(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue1;             // 0x00F8(0x0018)()
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0110(0x0018)()
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item1;                          // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue1;           // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_C_Initialize_Data) == 0x000008, "Wrong alignment on TabGamePadConfig_C_Initialize_Data");
static_assert(sizeof(TabGamePadConfig_C_Initialize_Data) == 0x000148, "Wrong size on TabGamePadConfig_C_Initialize_Data");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'TabGamePadConfig_C_Initialize_Data::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, CallFunc_GetSubGame_ReturnValue) == 0x000008, "Member 'TabGamePadConfig_C_Initialize_Data::CallFunc_GetSubGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'TabGamePadConfig_C_Initialize_Data::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetNames) == 0x000010, "Member 'TabGamePadConfig_C_Initialize_Data::CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetNames' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetFriendlyNames) == 0x000020, "Member 'TabGamePadConfig_C_Initialize_Data::CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetFriendlyNames' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, Temp_text_Variable) == 0x000030, "Member 'TabGamePadConfig_C_Initialize_Data::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, Temp_text_Variable1) == 0x000048, "Member 'TabGamePadConfig_C_Initialize_Data::Temp_text_Variable1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'TabGamePadConfig_C_Initialize_Data::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, Temp_bool_Variable) == 0x000064, "Member 'TabGamePadConfig_C_Initialize_Data::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'TabGamePadConfig_C_Initialize_Data::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, CallFunc_MakeLiteralText_ReturnValue) == 0x000070, "Member 'TabGamePadConfig_C_Initialize_Data::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, CallFunc_GetPlatformName_ReturnValue) == 0x000088, "Member 'TabGamePadConfig_C_Initialize_Data::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000098, "Member 'TabGamePadConfig_C_Initialize_Data::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, K2Node_MakeArray_Array) == 0x0000A0, "Member 'TabGamePadConfig_C_Initialize_Data::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, K2Node_Select_Default) == 0x0000B0, "Member 'TabGamePadConfig_C_Initialize_Data::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, CallFunc_GetContext_ReturnValue1) == 0x0000C8, "Member 'TabGamePadConfig_C_Initialize_Data::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, CallFunc_GetSubGame_ReturnValue1) == 0x0000D0, "Member 'TabGamePadConfig_C_Initialize_Data::CallFunc_GetSubGame_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetNames1) == 0x0000D8, "Member 'TabGamePadConfig_C_Initialize_Data::CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetNames1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetFriendlyNames1) == 0x0000E8, "Member 'TabGamePadConfig_C_Initialize_Data::CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetFriendlyNames1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, CallFunc_MakeLiteralText_ReturnValue1) == 0x0000F8, "Member 'TabGamePadConfig_C_Initialize_Data::CallFunc_MakeLiteralText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, CallFunc_Array_Get_Item) == 0x000110, "Member 'TabGamePadConfig_C_Initialize_Data::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, CallFunc_Array_AddUnique_ReturnValue) == 0x000128, "Member 'TabGamePadConfig_C_Initialize_Data::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, CallFunc_Array_Get_Item1) == 0x000130, "Member 'TabGamePadConfig_C_Initialize_Data::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, CallFunc_Array_Length_ReturnValue) == 0x000140, "Member 'TabGamePadConfig_C_Initialize_Data::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, CallFunc_EqualEqual_StrStr_ReturnValue1) == 0x000144, "Member 'TabGamePadConfig_C_Initialize_Data::CallFunc_EqualEqual_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Initialize_Data, CallFunc_Less_IntInt_ReturnValue) == 0x000145, "Member 'TabGamePadConfig_C_Initialize_Data::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function TabGamePadConfig.TabGamePadConfig_C.Update Data
// 0x0060 (0x0060 - 0x0000)
struct TabGamePadConfig_C_Update_Data final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentInputPresetName_ReturnValue;    // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue1;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentCustomInputTemplatePresetName_ReturnValue; // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetControllerPlatform_ReturnValue;        // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_C_Update_Data) == 0x000008, "Wrong alignment on TabGamePadConfig_C_Update_Data");
static_assert(sizeof(TabGamePadConfig_C_Update_Data) == 0x000060, "Wrong size on TabGamePadConfig_C_Update_Data");
static_assert(offsetof(TabGamePadConfig_C_Update_Data, Temp_bool_Variable) == 0x000000, "Member 'TabGamePadConfig_C_Update_Data::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Update_Data, Temp_int_Variable) == 0x000004, "Member 'TabGamePadConfig_C_Update_Data::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Update_Data, Temp_int_Variable1) == 0x000008, "Member 'TabGamePadConfig_C_Update_Data::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Update_Data, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'TabGamePadConfig_C_Update_Data::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Update_Data, CallFunc_GetCurrentInputPresetName_ReturnValue) == 0x000018, "Member 'TabGamePadConfig_C_Update_Data::CallFunc_GetCurrentInputPresetName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Update_Data, CallFunc_GetContext_ReturnValue1) == 0x000028, "Member 'TabGamePadConfig_C_Update_Data::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Update_Data, CallFunc_GetCurrentCustomInputTemplatePresetName_ReturnValue) == 0x000030, "Member 'TabGamePadConfig_C_Update_Data::CallFunc_GetCurrentCustomInputTemplatePresetName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Update_Data, CallFunc_GetControllerPlatform_ReturnValue) == 0x000040, "Member 'TabGamePadConfig_C_Update_Data::CallFunc_GetControllerPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Update_Data, CallFunc_Array_Find_ReturnValue) == 0x000050, "Member 'TabGamePadConfig_C_Update_Data::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Update_Data, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000054, "Member 'TabGamePadConfig_C_Update_Data::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Update_Data, K2Node_Select_Default) == 0x000058, "Member 'TabGamePadConfig_C_Update_Data::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_Update_Data, CallFunc_Array_Find_ReturnValue1) == 0x00005C, "Member 'TabGamePadConfig_C_Update_Data::CallFunc_Array_Find_ReturnValue1' has a wrong offset!");

// Function TabGamePadConfig.TabGamePadConfig_C.Handle Mode Toggled
// 0x0001 (0x0001 - 0x0000)
struct TabGamePadConfig_C_Handle_Mode_Toggled final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_C_Handle_Mode_Toggled) == 0x000001, "Wrong alignment on TabGamePadConfig_C_Handle_Mode_Toggled");
static_assert(sizeof(TabGamePadConfig_C_Handle_Mode_Toggled) == 0x000001, "Wrong size on TabGamePadConfig_C_Handle_Mode_Toggled");
static_assert(offsetof(TabGamePadConfig_C_Handle_Mode_Toggled, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'TabGamePadConfig_C_Handle_Mode_Toggled::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function TabGamePadConfig.TabGamePadConfig_C.HandleGamepadMappingInfoChange
// 0x0088 (0x0088 - 0x0000)
struct TabGamePadConfig_C_HandleGamepadMappingInfoChange final
{
public:
	TSoftObjectPtr<class UTexture2D>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0000(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue1; // 0x0028(0x0028)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCustomConfig_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x0058(0x0028)(ConstParm, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_C_HandleGamepadMappingInfoChange) == 0x000008, "Wrong alignment on TabGamePadConfig_C_HandleGamepadMappingInfoChange");
static_assert(sizeof(TabGamePadConfig_C_HandleGamepadMappingInfoChange) == 0x000088, "Wrong size on TabGamePadConfig_C_HandleGamepadMappingInfoChange");
static_assert(offsetof(TabGamePadConfig_C_HandleGamepadMappingInfoChange, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000000, "Member 'TabGamePadConfig_C_HandleGamepadMappingInfoChange::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_HandleGamepadMappingInfoChange, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue1) == 0x000028, "Member 'TabGamePadConfig_C_HandleGamepadMappingInfoChange::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_HandleGamepadMappingInfoChange, Temp_int_Variable) == 0x000050, "Member 'TabGamePadConfig_C_HandleGamepadMappingInfoChange::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_HandleGamepadMappingInfoChange, CallFunc_IsCustomConfig_ReturnValue) == 0x000054, "Member 'TabGamePadConfig_C_HandleGamepadMappingInfoChange::CallFunc_IsCustomConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_HandleGamepadMappingInfoChange, K2Node_Select_Default) == 0x000058, "Member 'TabGamePadConfig_C_HandleGamepadMappingInfoChange::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_HandleGamepadMappingInfoChange, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000080, "Member 'TabGamePadConfig_C_HandleGamepadMappingInfoChange::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");

// Function TabGamePadConfig.TabGamePadConfig_C.OverlayKeyPressed
// 0x0040 (0x0040 - 0x0000)
struct TabGamePadConfig_C_OverlayKeyPressed final
{
public:
	struct FKey                                   NewKey;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue1;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetItemAt_ReturnValue;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetListWidget_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOptionsMenuInputOneKey_C*              K2Node_DynamicCast_AsOptions_Menu_Input_One_Key;   // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_C_OverlayKeyPressed) == 0x000008, "Wrong alignment on TabGamePadConfig_C_OverlayKeyPressed");
static_assert(sizeof(TabGamePadConfig_C_OverlayKeyPressed) == 0x000040, "Wrong size on TabGamePadConfig_C_OverlayKeyPressed");
static_assert(offsetof(TabGamePadConfig_C_OverlayKeyPressed, NewKey) == 0x000000, "Member 'TabGamePadConfig_C_OverlayKeyPressed::NewKey' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_OverlayKeyPressed, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000018, "Member 'TabGamePadConfig_C_OverlayKeyPressed::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_OverlayKeyPressed, CallFunc_EqualEqual_KeyKey_ReturnValue1) == 0x000019, "Member 'TabGamePadConfig_C_OverlayKeyPressed::CallFunc_EqualEqual_KeyKey_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_OverlayKeyPressed, CallFunc_BooleanOR_ReturnValue) == 0x00001A, "Member 'TabGamePadConfig_C_OverlayKeyPressed::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_OverlayKeyPressed, CallFunc_GetItemAt_ReturnValue) == 0x000020, "Member 'TabGamePadConfig_C_OverlayKeyPressed::CallFunc_GetItemAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_OverlayKeyPressed, CallFunc_GetListWidget_ReturnValue) == 0x000028, "Member 'TabGamePadConfig_C_OverlayKeyPressed::CallFunc_GetListWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_OverlayKeyPressed, K2Node_DynamicCast_AsOptions_Menu_Input_One_Key) == 0x000030, "Member 'TabGamePadConfig_C_OverlayKeyPressed::K2Node_DynamicCast_AsOptions_Menu_Input_One_Key' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_OverlayKeyPressed, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'TabGamePadConfig_C_OverlayKeyPressed::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function TabGamePadConfig.TabGamePadConfig_C.SetInputEnabled
// 0x0038 (0x0038 - 0x0000)
struct TabGamePadConfig_C_SetInputEnabled final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetItemAt_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumItems_ReturnValue;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetListWidget_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOptionsMenuInputOneKey_C*              K2Node_DynamicCast_AsOptions_Menu_Input_One_Key;   // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_C_SetInputEnabled) == 0x000008, "Wrong alignment on TabGamePadConfig_C_SetInputEnabled");
static_assert(sizeof(TabGamePadConfig_C_SetInputEnabled) == 0x000038, "Wrong size on TabGamePadConfig_C_SetInputEnabled");
static_assert(offsetof(TabGamePadConfig_C_SetInputEnabled, Enable) == 0x000000, "Member 'TabGamePadConfig_C_SetInputEnabled::Enable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_SetInputEnabled, Temp_int_Variable) == 0x000004, "Member 'TabGamePadConfig_C_SetInputEnabled::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_SetInputEnabled, CallFunc_GetItemAt_ReturnValue) == 0x000008, "Member 'TabGamePadConfig_C_SetInputEnabled::CallFunc_GetItemAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_SetInputEnabled, CallFunc_GetNumItems_ReturnValue) == 0x000010, "Member 'TabGamePadConfig_C_SetInputEnabled::CallFunc_GetNumItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_SetInputEnabled, CallFunc_GetListWidget_ReturnValue) == 0x000018, "Member 'TabGamePadConfig_C_SetInputEnabled::CallFunc_GetListWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_SetInputEnabled, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'TabGamePadConfig_C_SetInputEnabled::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_SetInputEnabled, K2Node_DynamicCast_AsOptions_Menu_Input_One_Key) == 0x000028, "Member 'TabGamePadConfig_C_SetInputEnabled::K2Node_DynamicCast_AsOptions_Menu_Input_One_Key' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_SetInputEnabled, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'TabGamePadConfig_C_SetInputEnabled::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_SetInputEnabled, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'TabGamePadConfig_C_SetInputEnabled::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function TabGamePadConfig.TabGamePadConfig_C.IsCustomConfig
// 0x0008 (0x0008 - 0x0000)
struct TabGamePadConfig_C_IsCustomConfig final
{
public:
	int32                                         PresetIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCustomGamepadConfig_ReturnValue;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_C_IsCustomConfig) == 0x000004, "Wrong alignment on TabGamePadConfig_C_IsCustomConfig");
static_assert(sizeof(TabGamePadConfig_C_IsCustomConfig) == 0x000008, "Wrong size on TabGamePadConfig_C_IsCustomConfig");
static_assert(offsetof(TabGamePadConfig_C_IsCustomConfig, PresetIndex) == 0x000000, "Member 'TabGamePadConfig_C_IsCustomConfig::PresetIndex' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_IsCustomConfig, ReturnValue) == 0x000004, "Member 'TabGamePadConfig_C_IsCustomConfig::ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_C_IsCustomConfig, CallFunc_IsCustomGamepadConfig_ReturnValue) == 0x000005, "Member 'TabGamePadConfig_C_IsCustomConfig::CallFunc_IsCustomGamepadConfig_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Survivor

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "SurvivorHitInfoType_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Survivor.Survivor_C
// 0x0170 (0x1D50 - 0x1BE0)
class ASurvivor_C final : public AFortAIPawn
{
public:
	uint8                                         Pad_1BD8[0x8];                                     // 0x1BD8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1BE0(0x0008)(Transient, DuplicateTransient)
	class UFortMiniMapComponent*                  FortMiniMap;                                       // 0x1BE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       SpeechBubbleComponent;                             // 0x1BF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          InteractBox;                                       // 0x1BF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_SurvivorAnchor_C*                   SurvivorAnchor;                                    // 0x1C00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SurvivorAnchorClass;                               // 0x1C08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_DamageTagsServer;                               // 0x1C10(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_MeleeDamage;                                    // 0x1C30(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_NPCStatusAOE;                                   // 0x1C50(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           TC_NPCStatusLockedInPlace;                         // 0x1C70(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_NPCBehaviorCower;                               // 0x1C78(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           Event_NPCAbilityNonAttackAvoidEnemy;               // 0x1C98(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Event_NPCAbilityNonAttackCowerTrue;                // 0x1CA0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Event_NPCAbilityNonAttackCowerFalse;               // 0x1CA8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Event_NPCAbilityNonAttackRescueTrue;               // 0x1CB0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Event_NPCAbilityNonAttackConversationOrScriptedAnimation; // 0x1CB8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_SurvivorLockedInPlace;                          // 0x1CC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ScriptedAnimMontage;                               // 0x1CC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SpeechBubbleWidgetClass;                           // 0x1CD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bToggleInteractChannel;                            // 0x1CD8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_1CD9[0x7];                                     // 0x1CD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortGameStateZone*                     ZoneState;                                         // 0x1CE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 SurvivorName;                                      // 0x1CE8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          ShowAnchorBoundsWhenTeleportingIn;                 // 0x1CF8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CF9[0x7];                                     // 0x1CF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       MeshMIDArray;                                      // 0x1D00(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          MIDs_Initialized;                                  // 0x1D10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TeleportInWantsToHappen;                           // 0x1D11(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TeleportOutWantsToHappen;                          // 0x1D12(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D13[0x5];                                     // 0x1D13(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LastSpeechText;                                    // 0x1D18(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         TeleportEffectModeReplicated;                      // 0x1D30(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	int32                                         TeleportEffectModeLocal;                           // 0x1D34(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   InteractionBangRef;                                // 0x1D38(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InteractionBangRelativeOffset;                     // 0x1D40(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InteractionBangEnabled;                            // 0x1D4C(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          bHasAppliedAppearanceOverride;                     // 0x1D4D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Survivor(int32 EntryPoint);
	void ShowInteractionBang(bool Enabled);
	void GameplayCue_Teleport_Out(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Teleport_In(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void PlayTeleportIn();
	void PlayTeleportOut();
	void OnAppearanceOverridden();
	void MIDsInitialized();
	void AdditiveHitReactDelay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void OnSurvivorDowned(class AFortAIPawn* DownedAI, class AController* DownedInstigator);
	void ReceiveBeginPlay();
	void OnClearSentence();
	void OnDisplaySentence(const class FText& SpeechText);
	void Unlock();
	void Lock();
	void SurvivorSetLockedInPlace(bool LockedInPlace);
	void StartCowering();
	void StopCowering();
	void OnDamageServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void UserConstructionScript();
	void OnRep_bToggleInteractChannel();
	void Set_Interact_Channel_Response(bool ShouldInteractChannelBeActive);
	void SetLastHitInfoOnBlackboard(ESurvivorHitInfoType SurvivorHitInfoType);
	void InitializeMIDs();
	void OnRep_TeleportEffectModeReplicated();
	void InteractionBangVisibility(bool Enabled);
	void OnRep_InteractionBangEnabled();
	void IsAppearanceApplied(bool* IsApplied);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Survivor_C">();
	}
	static class ASurvivor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASurvivor_C>();
	}
};
static_assert(alignof(ASurvivor_C) == 0x000010, "Wrong alignment on ASurvivor_C");
static_assert(sizeof(ASurvivor_C) == 0x001D50, "Wrong size on ASurvivor_C");
static_assert(offsetof(ASurvivor_C, UberGraphFrame) == 0x001BE0, "Member 'ASurvivor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, FortMiniMap) == 0x001BE8, "Member 'ASurvivor_C::FortMiniMap' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, SpeechBubbleComponent) == 0x001BF0, "Member 'ASurvivor_C::SpeechBubbleComponent' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, InteractBox) == 0x001BF8, "Member 'ASurvivor_C::InteractBox' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, SurvivorAnchor) == 0x001C00, "Member 'ASurvivor_C::SurvivorAnchor' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, SurvivorAnchorClass) == 0x001C08, "Member 'ASurvivor_C::SurvivorAnchorClass' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, TC_DamageTagsServer) == 0x001C10, "Member 'ASurvivor_C::TC_DamageTagsServer' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, TC_MeleeDamage) == 0x001C30, "Member 'ASurvivor_C::TC_MeleeDamage' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, TC_NPCStatusAOE) == 0x001C50, "Member 'ASurvivor_C::TC_NPCStatusAOE' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, TC_NPCStatusLockedInPlace) == 0x001C70, "Member 'ASurvivor_C::TC_NPCStatusLockedInPlace' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, TC_NPCBehaviorCower) == 0x001C78, "Member 'ASurvivor_C::TC_NPCBehaviorCower' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, Event_NPCAbilityNonAttackAvoidEnemy) == 0x001C98, "Member 'ASurvivor_C::Event_NPCAbilityNonAttackAvoidEnemy' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, Event_NPCAbilityNonAttackCowerTrue) == 0x001CA0, "Member 'ASurvivor_C::Event_NPCAbilityNonAttackCowerTrue' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, Event_NPCAbilityNonAttackCowerFalse) == 0x001CA8, "Member 'ASurvivor_C::Event_NPCAbilityNonAttackCowerFalse' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, Event_NPCAbilityNonAttackRescueTrue) == 0x001CB0, "Member 'ASurvivor_C::Event_NPCAbilityNonAttackRescueTrue' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, Event_NPCAbilityNonAttackConversationOrScriptedAnimation) == 0x001CB8, "Member 'ASurvivor_C::Event_NPCAbilityNonAttackConversationOrScriptedAnimation' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, GE_SurvivorLockedInPlace) == 0x001CC0, "Member 'ASurvivor_C::GE_SurvivorLockedInPlace' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, ScriptedAnimMontage) == 0x001CC8, "Member 'ASurvivor_C::ScriptedAnimMontage' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, SpeechBubbleWidgetClass) == 0x001CD0, "Member 'ASurvivor_C::SpeechBubbleWidgetClass' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, bToggleInteractChannel) == 0x001CD8, "Member 'ASurvivor_C::bToggleInteractChannel' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, ZoneState) == 0x001CE0, "Member 'ASurvivor_C::ZoneState' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, SurvivorName) == 0x001CE8, "Member 'ASurvivor_C::SurvivorName' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, ShowAnchorBoundsWhenTeleportingIn) == 0x001CF8, "Member 'ASurvivor_C::ShowAnchorBoundsWhenTeleportingIn' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, MeshMIDArray) == 0x001D00, "Member 'ASurvivor_C::MeshMIDArray' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, MIDs_Initialized) == 0x001D10, "Member 'ASurvivor_C::MIDs_Initialized' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, TeleportInWantsToHappen) == 0x001D11, "Member 'ASurvivor_C::TeleportInWantsToHappen' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, TeleportOutWantsToHappen) == 0x001D12, "Member 'ASurvivor_C::TeleportOutWantsToHappen' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, LastSpeechText) == 0x001D18, "Member 'ASurvivor_C::LastSpeechText' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, TeleportEffectModeReplicated) == 0x001D30, "Member 'ASurvivor_C::TeleportEffectModeReplicated' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, TeleportEffectModeLocal) == 0x001D34, "Member 'ASurvivor_C::TeleportEffectModeLocal' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, InteractionBangRef) == 0x001D38, "Member 'ASurvivor_C::InteractionBangRef' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, InteractionBangRelativeOffset) == 0x001D40, "Member 'ASurvivor_C::InteractionBangRelativeOffset' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, InteractionBangEnabled) == 0x001D4C, "Member 'ASurvivor_C::InteractionBangEnabled' has a wrong offset!");
static_assert(offsetof(ASurvivor_C, bHasAppliedAppearanceOverride) == 0x001D4D, "Member 'ASurvivor_C::bHasAppliedAppearanceOverride' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActivateAbilityByTag

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ActivateAbilityByTag.ActivateAbilityByTag_C
// 0x0068 (0x0100 - 0x0098)
class UActivateAbilityByTag_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(Transient, DuplicateTransient)
	struct FGameplayTagContainer                  TC_AbilityToActivate;                              // 0x00A0(0x0020)(Edit, BlueprintVisible)
	bool                                          RequireCanHitTargetWithAbility;                    // 0x00C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PawnTargetsOnly;                                   // 0x00C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  ProhibitedTargetTags;                              // 0x00C8(0x0020)(Edit, BlueprintVisible)
	class AFortAIController*                      OwnerAIController;                                 // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortAIPawn*                            OwnerPawn;                                         // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OwnerGoalActor;                                    // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ActivateAbilityByTag(int32 EntryPoint);
	void ReceiveTick(class AActor* OwnerActor, float DeltaSeconds);
	void ReceiveActivation(class AActor* OwnerActor);
	void ReceiveDeactivation(class AActor* OwnerActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ActivateAbilityByTag_C">();
	}
	static class UActivateAbilityByTag_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActivateAbilityByTag_C>();
	}
};
static_assert(alignof(UActivateAbilityByTag_C) == 0x000008, "Wrong alignment on UActivateAbilityByTag_C");
static_assert(sizeof(UActivateAbilityByTag_C) == 0x000100, "Wrong size on UActivateAbilityByTag_C");
static_assert(offsetof(UActivateAbilityByTag_C, UberGraphFrame) == 0x000098, "Member 'UActivateAbilityByTag_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UActivateAbilityByTag_C, TC_AbilityToActivate) == 0x0000A0, "Member 'UActivateAbilityByTag_C::TC_AbilityToActivate' has a wrong offset!");
static_assert(offsetof(UActivateAbilityByTag_C, RequireCanHitTargetWithAbility) == 0x0000C0, "Member 'UActivateAbilityByTag_C::RequireCanHitTargetWithAbility' has a wrong offset!");
static_assert(offsetof(UActivateAbilityByTag_C, PawnTargetsOnly) == 0x0000C1, "Member 'UActivateAbilityByTag_C::PawnTargetsOnly' has a wrong offset!");
static_assert(offsetof(UActivateAbilityByTag_C, ProhibitedTargetTags) == 0x0000C8, "Member 'UActivateAbilityByTag_C::ProhibitedTargetTags' has a wrong offset!");
static_assert(offsetof(UActivateAbilityByTag_C, OwnerAIController) == 0x0000E8, "Member 'UActivateAbilityByTag_C::OwnerAIController' has a wrong offset!");
static_assert(offsetof(UActivateAbilityByTag_C, OwnerPawn) == 0x0000F0, "Member 'UActivateAbilityByTag_C::OwnerPawn' has a wrong offset!");
static_assert(offsetof(UActivateAbilityByTag_C, OwnerGoalActor) == 0x0000F8, "Member 'UActivateAbilityByTag_C::OwnerGoalActor' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortReplayTimeline

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function FortReplayTimeline.FortReplayTimeline_C.ExecuteUbergraph_FortReplayTimeline
// 0x0060 (0x0060 - 0x0000)
struct FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EHudVisibilityState IsVisible)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_TimeNow;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortReplayContext*                     CallFunc_GetContext_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortReplayContext*                     CallFunc_GetContext_ReturnValue1;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bIsTimelineFocus)>        K2Node_CreateDelegate_OutputDelegate1;             // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	class UFortReplayContext*                     CallFunc_GetContext_ReturnValue12;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortReplayContext*                     CallFunc_GetContext_ReturnValue123;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline) == 0x000008, "Wrong alignment on FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline");
static_assert(sizeof(FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline) == 0x000060, "Wrong size on FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline");
static_assert(offsetof(FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline, EntryPoint) == 0x000000, "Member 'FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline::EntryPoint' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline, K2Node_Event_IsDesignTime) == 0x000018, "Member 'FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline, K2Node_CustomEvent_TimeNow) == 0x00001C, "Member 'FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline::K2Node_CustomEvent_TimeNow' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline, CallFunc_GetContext_ReturnValue) == 0x000020, "Member 'FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline, CallFunc_GetContext_ReturnValue1) == 0x000028, "Member 'FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline, K2Node_CreateDelegate_OutputDelegate1) == 0x000030, "Member 'FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline, CallFunc_GetContext_ReturnValue12) == 0x000040, "Member 'FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline::CallFunc_GetContext_ReturnValue12' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline, CallFunc_GetValue_ReturnValue) == 0x000048, "Member 'FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline, CallFunc_GetContext_ReturnValue123) == 0x000050, "Member 'FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline::CallFunc_GetContext_ReturnValue123' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000058, "Member 'FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline, CallFunc_FClamp_ReturnValue) == 0x00005C, "Member 'FortReplayTimeline_C_ExecuteUbergraph_FortReplayTimeline::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function FortReplayTimeline.FortReplayTimeline_C.CurrentTimeChangedFromNative
// 0x0004 (0x0004 - 0x0000)
struct FortReplayTimeline_C_CurrentTimeChangedFromNative final
{
public:
	float                                         TimeNow;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayTimeline_C_CurrentTimeChangedFromNative) == 0x000004, "Wrong alignment on FortReplayTimeline_C_CurrentTimeChangedFromNative");
static_assert(sizeof(FortReplayTimeline_C_CurrentTimeChangedFromNative) == 0x000004, "Wrong size on FortReplayTimeline_C_CurrentTimeChangedFromNative");
static_assert(offsetof(FortReplayTimeline_C_CurrentTimeChangedFromNative, TimeNow) == 0x000000, "Member 'FortReplayTimeline_C_CurrentTimeChangedFromNative::TimeNow' has a wrong offset!");

// Function FortReplayTimeline.FortReplayTimeline_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct FortReplayTimeline_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FortReplayTimeline_C_PreConstruct) == 0x000001, "Wrong alignment on FortReplayTimeline_C_PreConstruct");
static_assert(sizeof(FortReplayTimeline_C_PreConstruct) == 0x000001, "Wrong size on FortReplayTimeline_C_PreConstruct");
static_assert(offsetof(FortReplayTimeline_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'FortReplayTimeline_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function FortReplayTimeline.FortReplayTimeline_C.InitializeBar
// 0x0008 (0x0008 - 0x0000)
struct FortReplayTimeline_C_InitializeBar final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayTimeline_C_InitializeBar) == 0x000008, "Wrong alignment on FortReplayTimeline_C_InitializeBar");
static_assert(sizeof(FortReplayTimeline_C_InitializeBar) == 0x000008, "Wrong size on FortReplayTimeline_C_InitializeBar");
static_assert(offsetof(FortReplayTimeline_C_InitializeBar, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000000, "Member 'FortReplayTimeline_C_InitializeBar::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function FortReplayTimeline.FortReplayTimeline_C.UpdateFillBar
// 0x0040 (0x0040 - 0x0000)
struct FortReplayTimeline_C_UpdateFillBar final
{
public:
	float                                         InPercent;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USizeBoxSlot*                           K2Node_DynamicCast_AsSize_Box_Slot;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0030(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayTimeline_C_UpdateFillBar) == 0x000008, "Wrong alignment on FortReplayTimeline_C_UpdateFillBar");
static_assert(sizeof(FortReplayTimeline_C_UpdateFillBar) == 0x000040, "Wrong size on FortReplayTimeline_C_UpdateFillBar");
static_assert(offsetof(FortReplayTimeline_C_UpdateFillBar, InPercent) == 0x000000, "Member 'FortReplayTimeline_C_UpdateFillBar::InPercent' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_UpdateFillBar, Temp_float_Variable) == 0x000004, "Member 'FortReplayTimeline_C_UpdateFillBar::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_UpdateFillBar, K2Node_DynamicCast_AsSize_Box_Slot) == 0x000008, "Member 'FortReplayTimeline_C_UpdateFillBar::K2Node_DynamicCast_AsSize_Box_Slot' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_UpdateFillBar, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'FortReplayTimeline_C_UpdateFillBar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_UpdateFillBar, CallFunc_BreakVector2D_X) == 0x000014, "Member 'FortReplayTimeline_C_UpdateFillBar::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_UpdateFillBar, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'FortReplayTimeline_C_UpdateFillBar::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_UpdateFillBar, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'FortReplayTimeline_C_UpdateFillBar::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_UpdateFillBar, Temp_bool_Variable) == 0x000020, "Member 'FortReplayTimeline_C_UpdateFillBar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_UpdateFillBar, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'FortReplayTimeline_C_UpdateFillBar::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_UpdateFillBar, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'FortReplayTimeline_C_UpdateFillBar::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_UpdateFillBar, K2Node_Select_Default) == 0x00002C, "Member 'FortReplayTimeline_C_UpdateFillBar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_UpdateFillBar, K2Node_MakeStruct_LinearColor) == 0x000030, "Member 'FortReplayTimeline_C_UpdateFillBar::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function FortReplayTimeline.FortReplayTimeline_C.SetReplayContext
// 0x0018 (0x0018 - 0x0000)
struct FortReplayTimeline_C_SetReplayContext final
{
public:
	class UFortReplayContext*                     InReplayContext;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float TimeNow)>                K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(FortReplayTimeline_C_SetReplayContext) == 0x000008, "Wrong alignment on FortReplayTimeline_C_SetReplayContext");
static_assert(sizeof(FortReplayTimeline_C_SetReplayContext) == 0x000018, "Wrong size on FortReplayTimeline_C_SetReplayContext");
static_assert(offsetof(FortReplayTimeline_C_SetReplayContext, InReplayContext) == 0x000000, "Member 'FortReplayTimeline_C_SetReplayContext::InReplayContext' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_SetReplayContext, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'FortReplayTimeline_C_SetReplayContext::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function FortReplayTimeline.FortReplayTimeline_C.OnTimelineInputFocusChanged
// 0x0078 (0x0078 - 0x0000)
struct FortReplayTimeline_C_OnTimelineInputFocusChanged final
{
public:
	bool                                          bHasInputFocus;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CancelAction;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, NoDestructor)
	struct FDataTableRowHandle                    ConfirmAction;                                     // 0x0018(0x0010)(Edit, BlueprintVisible, NoDestructor)
	bool                                          HasFocus;                                          // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate1;             // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	class UCommonUIContext*                       CallFunc_GetContext_ReturnValue;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputManager*                    CallFunc_GetInputManager_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayTimeline_C_OnTimelineInputFocusChanged) == 0x000008, "Wrong alignment on FortReplayTimeline_C_OnTimelineInputFocusChanged");
static_assert(sizeof(FortReplayTimeline_C_OnTimelineInputFocusChanged) == 0x000078, "Wrong size on FortReplayTimeline_C_OnTimelineInputFocusChanged");
static_assert(offsetof(FortReplayTimeline_C_OnTimelineInputFocusChanged, bHasInputFocus) == 0x000000, "Member 'FortReplayTimeline_C_OnTimelineInputFocusChanged::bHasInputFocus' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_OnTimelineInputFocusChanged, CancelAction) == 0x000008, "Member 'FortReplayTimeline_C_OnTimelineInputFocusChanged::CancelAction' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_OnTimelineInputFocusChanged, ConfirmAction) == 0x000018, "Member 'FortReplayTimeline_C_OnTimelineInputFocusChanged::ConfirmAction' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_OnTimelineInputFocusChanged, HasFocus) == 0x000028, "Member 'FortReplayTimeline_C_OnTimelineInputFocusChanged::HasFocus' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_OnTimelineInputFocusChanged, Temp_bool_Variable) == 0x000029, "Member 'FortReplayTimeline_C_OnTimelineInputFocusChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_OnTimelineInputFocusChanged, Temp_byte_Variable) == 0x00002A, "Member 'FortReplayTimeline_C_OnTimelineInputFocusChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_OnTimelineInputFocusChanged, Temp_byte_Variable1) == 0x00002B, "Member 'FortReplayTimeline_C_OnTimelineInputFocusChanged::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_OnTimelineInputFocusChanged, K2Node_Select_Default) == 0x00002C, "Member 'FortReplayTimeline_C_OnTimelineInputFocusChanged::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_OnTimelineInputFocusChanged, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'FortReplayTimeline_C_OnTimelineInputFocusChanged::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_OnTimelineInputFocusChanged, CallFunc_GetUINavigationManager_ReturnValue) == 0x000038, "Member 'FortReplayTimeline_C_OnTimelineInputFocusChanged::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_OnTimelineInputFocusChanged, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'FortReplayTimeline_C_OnTimelineInputFocusChanged::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_OnTimelineInputFocusChanged, K2Node_CreateDelegate_OutputDelegate1) == 0x000050, "Member 'FortReplayTimeline_C_OnTimelineInputFocusChanged::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_OnTimelineInputFocusChanged, CallFunc_GetContext_ReturnValue) == 0x000060, "Member 'FortReplayTimeline_C_OnTimelineInputFocusChanged::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_OnTimelineInputFocusChanged, CallFunc_GetInputManager_ReturnValue) == 0x000068, "Member 'FortReplayTimeline_C_OnTimelineInputFocusChanged::CallFunc_GetInputManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_OnTimelineInputFocusChanged, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000070, "Member 'FortReplayTimeline_C_OnTimelineInputFocusChanged::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_OnTimelineInputFocusChanged, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000074, "Member 'FortReplayTimeline_C_OnTimelineInputFocusChanged::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function FortReplayTimeline.FortReplayTimeline_C.OnPressConfirm
// 0x0018 (0x0018 - 0x0000)
struct FortReplayTimeline_C_OnPressConfirm final
{
public:
	bool                                          bHandled;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnPressCancel_bHandled;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortReplayContext*                     CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayTimeline_C_OnPressConfirm) == 0x000008, "Wrong alignment on FortReplayTimeline_C_OnPressConfirm");
static_assert(sizeof(FortReplayTimeline_C_OnPressConfirm) == 0x000018, "Wrong size on FortReplayTimeline_C_OnPressConfirm");
static_assert(offsetof(FortReplayTimeline_C_OnPressConfirm, bHandled) == 0x000000, "Member 'FortReplayTimeline_C_OnPressConfirm::bHandled' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_OnPressConfirm, CallFunc_OnPressCancel_bHandled) == 0x000001, "Member 'FortReplayTimeline_C_OnPressConfirm::CallFunc_OnPressCancel_bHandled' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_OnPressConfirm, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'FortReplayTimeline_C_OnPressConfirm::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_OnPressConfirm, CallFunc_GetValue_ReturnValue) == 0x000010, "Member 'FortReplayTimeline_C_OnPressConfirm::CallFunc_GetValue_ReturnValue' has a wrong offset!");

// Function FortReplayTimeline.FortReplayTimeline_C.OnPressCancel
// 0x0010 (0x0010 - 0x0000)
struct FortReplayTimeline_C_OnPressCancel final
{
public:
	bool                                          bHandled;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortReplayContext*                     CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayTimeline_C_OnPressCancel) == 0x000008, "Wrong alignment on FortReplayTimeline_C_OnPressCancel");
static_assert(sizeof(FortReplayTimeline_C_OnPressCancel) == 0x000010, "Wrong size on FortReplayTimeline_C_OnPressCancel");
static_assert(offsetof(FortReplayTimeline_C_OnPressCancel, bHandled) == 0x000000, "Member 'FortReplayTimeline_C_OnPressCancel::bHandled' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_OnPressCancel, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'FortReplayTimeline_C_OnPressCancel::CallFunc_GetContext_ReturnValue' has a wrong offset!");

// Function FortReplayTimeline.FortReplayTimeline_C.OnHUDVisibilityChanged
// 0x0018 (0x0018 - 0x0000)
struct FortReplayTimeline_C_OnHUDVisibilityChanged final
{
public:
	EHudVisibilityState                           VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortReplayContext*                     CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FortReplayTimeline_C_OnHUDVisibilityChanged) == 0x000008, "Wrong alignment on FortReplayTimeline_C_OnHUDVisibilityChanged");
static_assert(sizeof(FortReplayTimeline_C_OnHUDVisibilityChanged) == 0x000018, "Wrong size on FortReplayTimeline_C_OnHUDVisibilityChanged");
static_assert(offsetof(FortReplayTimeline_C_OnHUDVisibilityChanged, VisibilityState) == 0x000000, "Member 'FortReplayTimeline_C_OnHUDVisibilityChanged::VisibilityState' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_OnHUDVisibilityChanged, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'FortReplayTimeline_C_OnHUDVisibilityChanged::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayTimeline_C_OnHUDVisibilityChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'FortReplayTimeline_C_OnHUDVisibilityChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function FortReplayTimeline.FortReplayTimeline_C.GetProgressBarWidget
// 0x0008 (0x0008 - 0x0000)
struct FortReplayTimeline_C_GetProgressBarWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayTimeline_C_GetProgressBarWidget) == 0x000008, "Wrong alignment on FortReplayTimeline_C_GetProgressBarWidget");
static_assert(sizeof(FortReplayTimeline_C_GetProgressBarWidget) == 0x000008, "Wrong size on FortReplayTimeline_C_GetProgressBarWidget");
static_assert(offsetof(FortReplayTimeline_C_GetProgressBarWidget, ReturnValue) == 0x000000, "Member 'FortReplayTimeline_C_GetProgressBarWidget::ReturnValue' has a wrong offset!");

}


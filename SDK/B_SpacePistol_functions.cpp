#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_SpacePistol

#include "Basic.hpp"

#include "B_SpacePistol_classes.hpp"
#include "B_SpacePistol_parameters.hpp"


namespace SDK
{

// Function B_SpacePistol.B_SpacePistol_C.ExecuteUbergraph_B_SpacePistol
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_SpacePistol_C::ExecuteUbergraph_B_SpacePistol(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SpacePistol_C", "ExecuteUbergraph_B_SpacePistol");

	Params::B_SpacePistol_C_ExecuteUbergraph_B_SpacePistol Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SpacePistol.B_SpacePistol_C.OnPlayImpactFX
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// EPhysicalSurface                        ImpactPhysicalSurface                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystemComponent*         SpawnedPSC                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_SpacePistol_C::OnPlayImpactFX(const struct FHitResult& HitResult, EPhysicalSurface ImpactPhysicalSurface, class UParticleSystemComponent* SpawnedPSC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SpacePistol_C", "OnPlayImpactFX");

	Params::B_SpacePistol_C_OnPlayImpactFX Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.ImpactPhysicalSurface = ImpactPhysicalSurface;
	Parms.SpawnedPSC = SpawnedPSC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SpacePistol.B_SpacePistol_C.ClearEmptyLERP
// (BlueprintCallable, BlueprintEvent)

void AB_SpacePistol_C::ClearEmptyLERP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SpacePistol_C", "ClearEmptyLERP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_SpacePistol.B_SpacePistol_C.OnAmmoCountChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AB_SpacePistol_C::OnAmmoCountChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SpacePistol_C", "OnAmmoCountChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_SpacePistol.B_SpacePistol_C.OnPlayReloadFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// EFortReloadFXState                      ReloadStage                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_SpacePistol_C::OnPlayReloadFX(EFortReloadFXState ReloadStage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SpacePistol_C", "OnPlayReloadFX");

	Params::B_SpacePistol_C_OnPlayReloadFX Parms{};

	Parms.ReloadStage = ReloadStage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SpacePistol.B_SpacePistol_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_SpacePistol_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SpacePistol_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_SpacePistol.B_SpacePistol_C.OnPlayWeaponFireFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bPersistentFire                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSecondaryFire                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_SpacePistol_C::OnPlayWeaponFireFX(bool bPersistentFire, bool bSecondaryFire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SpacePistol_C", "OnPlayWeaponFireFX");

	Params::B_SpacePistol_C_OnPlayWeaponFireFX Parms{};

	Parms.bPersistentFire = bPersistentFire;
	Parms.bSecondaryFire = bSecondaryFire;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SpacePistol.B_SpacePistol_C.ScaleBarReload__UpdateFunc
// (BlueprintEvent)

void AB_SpacePistol_C::ScaleBarReload__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SpacePistol_C", "ScaleBarReload__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_SpacePistol.B_SpacePistol_C.ScaleBarReload__FinishedFunc
// (BlueprintEvent)

void AB_SpacePistol_C::ScaleBarReload__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SpacePistol_C", "ScaleBarReload__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_SpacePistol.B_SpacePistol_C.EmptyLERPstate__UpdateFunc
// (BlueprintEvent)

void AB_SpacePistol_C::EmptyLERPstate__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SpacePistol_C", "EmptyLERPstate__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_SpacePistol.B_SpacePistol_C.EmptyLERPstate__FinishedFunc
// (BlueprintEvent)

void AB_SpacePistol_C::EmptyLERPstate__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SpacePistol_C", "EmptyLERPstate__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_SpacePistol.B_SpacePistol_C.ReloadLERPstate__UpdateFunc
// (BlueprintEvent)

void AB_SpacePistol_C::ReloadLERPstate__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SpacePistol_C", "ReloadLERPstate__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_SpacePistol.B_SpacePistol_C.ReloadLERPstate__FinishedFunc
// (BlueprintEvent)

void AB_SpacePistol_C::ReloadLERPstate__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SpacePistol_C", "ReloadLERPstate__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_SpacePistol.B_SpacePistol_C.ScaleBarBetweenClipCounts__UpdateFunc
// (BlueprintEvent)

void AB_SpacePistol_C::ScaleBarBetweenClipCounts__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SpacePistol_C", "ScaleBarBetweenClipCounts__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_SpacePistol.B_SpacePistol_C.ScaleBarBetweenClipCounts__FinishedFunc
// (BlueprintEvent)

void AB_SpacePistol_C::ScaleBarBetweenClipCounts__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SpacePistol_C", "ScaleBarBetweenClipCounts__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_SpacePistol.B_SpacePistol_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AB_SpacePistol_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SpacePistol_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_SpacePistol.B_SpacePistol_C.SetAmmoBarVariables
// (Public, BlueprintCallable, BlueprintEvent)

void AB_SpacePistol_C::SetAmmoBarVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SpacePistol_C", "SetAmmoBarVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_SpacePistol.B_SpacePistol_C.SetReloadVariables
// (Public, BlueprintCallable, BlueprintEvent)

void AB_SpacePistol_C::SetReloadVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SpacePistol_C", "SetReloadVariables");

	UObject::ProcessEvent(Func, nullptr);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TabAccessibilityOptions

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function TabAccessibilityOptions.TabAccessibilityOptions_C.ExecuteUbergraph_TabAccessibilityOptions
// 0x0024 (0x0024 - 0x0000)
struct TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHearingImpairedFeatureAvailable_ReturnValue; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EColorBlindMode                               Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EColorBlindMode                               Temp_byte_Variable1;                               // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EColorBlindMode                               Temp_byte_Variable12;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EColorBlindMode                               Temp_byte_Variable123;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable1234;                            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable12345;                           // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Slider_Value;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Selected_Index1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Selected_Index;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EColorBlindMode                               K2Node_Select1_Default;                            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions) == 0x000004, "Wrong alignment on TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions");
static_assert(sizeof(TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions) == 0x000024, "Wrong size on TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions");
static_assert(offsetof(TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions, EntryPoint) == 0x000000, "Member 'TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions::EntryPoint' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions, CallFunc_IsHearingImpairedFeatureAvailable_ReturnValue) == 0x000004, "Member 'TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions::CallFunc_IsHearingImpairedFeatureAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions, Temp_int_Variable) == 0x000008, "Member 'TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions, Temp_byte_Variable) == 0x00000C, "Member 'TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions, Temp_byte_Variable1) == 0x00000D, "Member 'TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions, Temp_byte_Variable12) == 0x00000E, "Member 'TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions::Temp_byte_Variable12' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions, Temp_byte_Variable123) == 0x00000F, "Member 'TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions::Temp_byte_Variable123' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions, Temp_bool_Variable) == 0x000010, "Member 'TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions, Temp_byte_Variable1234) == 0x000011, "Member 'TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions::Temp_byte_Variable1234' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions, Temp_byte_Variable12345) == 0x000012, "Member 'TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions::Temp_byte_Variable12345' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions, K2Node_Select_Default) == 0x000013, "Member 'TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions, K2Node_ComponentBoundEvent_Slider_Value) == 0x000014, "Member 'TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions::K2Node_ComponentBoundEvent_Slider_Value' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions, K2Node_ComponentBoundEvent_Selected_Index1) == 0x000018, "Member 'TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions::K2Node_ComponentBoundEvent_Selected_Index1' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions, K2Node_ComponentBoundEvent_Selected_Index) == 0x00001C, "Member 'TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions::K2Node_ComponentBoundEvent_Selected_Index' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions, K2Node_Select1_Default) == 0x000020, "Member 'TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions, CallFunc_Conv_IntToBool_ReturnValue) == 0x000021, "Member 'TabAccessibilityOptions_C_ExecuteUbergraph_TabAccessibilityOptions::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");

// Function TabAccessibilityOptions.TabAccessibilityOptions_C.BndEvt__HearingImpairedMode_K2Node_ComponentBoundEvent_13_Selection Changed__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct TabAccessibilityOptions_C_BndEvt__HearingImpairedMode_K2Node_ComponentBoundEvent_13_Selection_Changed__DelegateSignature final
{
public:
	int32                                         Selected_Index;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabAccessibilityOptions_C_BndEvt__HearingImpairedMode_K2Node_ComponentBoundEvent_13_Selection_Changed__DelegateSignature) == 0x000004, "Wrong alignment on TabAccessibilityOptions_C_BndEvt__HearingImpairedMode_K2Node_ComponentBoundEvent_13_Selection_Changed__DelegateSignature");
static_assert(sizeof(TabAccessibilityOptions_C_BndEvt__HearingImpairedMode_K2Node_ComponentBoundEvent_13_Selection_Changed__DelegateSignature) == 0x000004, "Wrong size on TabAccessibilityOptions_C_BndEvt__HearingImpairedMode_K2Node_ComponentBoundEvent_13_Selection_Changed__DelegateSignature");
static_assert(offsetof(TabAccessibilityOptions_C_BndEvt__HearingImpairedMode_K2Node_ComponentBoundEvent_13_Selection_Changed__DelegateSignature, Selected_Index) == 0x000000, "Member 'TabAccessibilityOptions_C_BndEvt__HearingImpairedMode_K2Node_ComponentBoundEvent_13_Selection_Changed__DelegateSignature::Selected_Index' has a wrong offset!");

// Function TabAccessibilityOptions.TabAccessibilityOptions_C.BndEvt__ColorBlindMode_K2Node_ComponentBoundEvent_11_Selection Changed__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct TabAccessibilityOptions_C_BndEvt__ColorBlindMode_K2Node_ComponentBoundEvent_11_Selection_Changed__DelegateSignature final
{
public:
	int32                                         Selected_Index;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabAccessibilityOptions_C_BndEvt__ColorBlindMode_K2Node_ComponentBoundEvent_11_Selection_Changed__DelegateSignature) == 0x000004, "Wrong alignment on TabAccessibilityOptions_C_BndEvt__ColorBlindMode_K2Node_ComponentBoundEvent_11_Selection_Changed__DelegateSignature");
static_assert(sizeof(TabAccessibilityOptions_C_BndEvt__ColorBlindMode_K2Node_ComponentBoundEvent_11_Selection_Changed__DelegateSignature) == 0x000004, "Wrong size on TabAccessibilityOptions_C_BndEvt__ColorBlindMode_K2Node_ComponentBoundEvent_11_Selection_Changed__DelegateSignature");
static_assert(offsetof(TabAccessibilityOptions_C_BndEvt__ColorBlindMode_K2Node_ComponentBoundEvent_11_Selection_Changed__DelegateSignature, Selected_Index) == 0x000000, "Member 'TabAccessibilityOptions_C_BndEvt__ColorBlindMode_K2Node_ComponentBoundEvent_11_Selection_Changed__DelegateSignature::Selected_Index' has a wrong offset!");

// Function TabAccessibilityOptions.TabAccessibilityOptions_C.BndEvt__OptionsMenuSlider_K2Node_ComponentBoundEvent_10_SliderChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct TabAccessibilityOptions_C_BndEvt__OptionsMenuSlider_K2Node_ComponentBoundEvent_10_SliderChanged__DelegateSignature final
{
public:
	float                                         Slider_Value;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabAccessibilityOptions_C_BndEvt__OptionsMenuSlider_K2Node_ComponentBoundEvent_10_SliderChanged__DelegateSignature) == 0x000004, "Wrong alignment on TabAccessibilityOptions_C_BndEvt__OptionsMenuSlider_K2Node_ComponentBoundEvent_10_SliderChanged__DelegateSignature");
static_assert(sizeof(TabAccessibilityOptions_C_BndEvt__OptionsMenuSlider_K2Node_ComponentBoundEvent_10_SliderChanged__DelegateSignature) == 0x000004, "Wrong size on TabAccessibilityOptions_C_BndEvt__OptionsMenuSlider_K2Node_ComponentBoundEvent_10_SliderChanged__DelegateSignature");
static_assert(offsetof(TabAccessibilityOptions_C_BndEvt__OptionsMenuSlider_K2Node_ComponentBoundEvent_10_SliderChanged__DelegateSignature, Slider_Value) == 0x000000, "Member 'TabAccessibilityOptions_C_BndEvt__OptionsMenuSlider_K2Node_ComponentBoundEvent_10_SliderChanged__DelegateSignature::Slider_Value' has a wrong offset!");

// Function TabAccessibilityOptions.TabAccessibilityOptions_C.Update Data
// 0x0034 (0x0034 - 0x0000)
struct TabAccessibilityOptions_C_Update_Data final
{
public:
	EColorBlindMode                               Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable12;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable123;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable1234;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable12345;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EColorBlindMode                               CallFunc_GetColorBlindMode_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetColorBlindStrength_ReturnValue;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHearingImpairedMode_ReturnValue;       // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select1_Default;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabAccessibilityOptions_C_Update_Data) == 0x000004, "Wrong alignment on TabAccessibilityOptions_C_Update_Data");
static_assert(sizeof(TabAccessibilityOptions_C_Update_Data) == 0x000034, "Wrong size on TabAccessibilityOptions_C_Update_Data");
static_assert(offsetof(TabAccessibilityOptions_C_Update_Data, Temp_byte_Variable) == 0x000000, "Member 'TabAccessibilityOptions_C_Update_Data::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_Update_Data, Temp_int_Variable) == 0x000004, "Member 'TabAccessibilityOptions_C_Update_Data::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_Update_Data, Temp_int_Variable1) == 0x000008, "Member 'TabAccessibilityOptions_C_Update_Data::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_Update_Data, Temp_int_Variable12) == 0x00000C, "Member 'TabAccessibilityOptions_C_Update_Data::Temp_int_Variable12' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_Update_Data, Temp_int_Variable123) == 0x000010, "Member 'TabAccessibilityOptions_C_Update_Data::Temp_int_Variable123' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_Update_Data, Temp_bool_Variable) == 0x000014, "Member 'TabAccessibilityOptions_C_Update_Data::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_Update_Data, Temp_int_Variable1234) == 0x000018, "Member 'TabAccessibilityOptions_C_Update_Data::Temp_int_Variable1234' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_Update_Data, Temp_int_Variable12345) == 0x00001C, "Member 'TabAccessibilityOptions_C_Update_Data::Temp_int_Variable12345' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_Update_Data, CallFunc_GetColorBlindMode_ReturnValue) == 0x000020, "Member 'TabAccessibilityOptions_C_Update_Data::CallFunc_GetColorBlindMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_Update_Data, CallFunc_GetColorBlindStrength_ReturnValue) == 0x000024, "Member 'TabAccessibilityOptions_C_Update_Data::CallFunc_GetColorBlindStrength_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_Update_Data, K2Node_Select_Default) == 0x000028, "Member 'TabAccessibilityOptions_C_Update_Data::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_Update_Data, CallFunc_GetHearingImpairedMode_ReturnValue) == 0x00002C, "Member 'TabAccessibilityOptions_C_Update_Data::CallFunc_GetHearingImpairedMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_Update_Data, K2Node_Select1_Default) == 0x000030, "Member 'TabAccessibilityOptions_C_Update_Data::K2Node_Select1_Default' has a wrong offset!");

// Function TabAccessibilityOptions.TabAccessibilityOptions_C.Initialize Data
// 0x0038 (0x0038 - 0x0000)
struct TabAccessibilityOptions_C_Initialize_Data final
{
public:
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0000(0x0018)()
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class FText>                           K2Node_MakeArray_Array1;                           // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(TabAccessibilityOptions_C_Initialize_Data) == 0x000008, "Wrong alignment on TabAccessibilityOptions_C_Initialize_Data");
static_assert(sizeof(TabAccessibilityOptions_C_Initialize_Data) == 0x000038, "Wrong size on TabAccessibilityOptions_C_Initialize_Data");
static_assert(offsetof(TabAccessibilityOptions_C_Initialize_Data, CallFunc_MakeLiteralText_ReturnValue) == 0x000000, "Member 'TabAccessibilityOptions_C_Initialize_Data::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_Initialize_Data, K2Node_MakeArray_Array) == 0x000018, "Member 'TabAccessibilityOptions_C_Initialize_Data::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TabAccessibilityOptions_C_Initialize_Data, K2Node_MakeArray_Array1) == 0x000028, "Member 'TabAccessibilityOptions_C_Initialize_Data::K2Node_MakeArray_Array1' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAB_FlingerThrowHusk

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GAB_FlingerThrowHusk.GAB_FlingerThrowHusk_C
// 0x0030 (0x0B18 - 0x0AE8)
class UGAB_FlingerThrowHusk_C final : public UFortGameplayAbility
{
public:
	uint8                                         Pad_AE8[0x8];                                      // 0x0AE8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AF0(0x0008)(Transient, DuplicateTransient)
	class AFlingerPawn_C*                         FlingerPawn;                                       // 0x0AF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHuskPawn_C*                            HuskHeldByFlinger;                                 // 0x0B00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_FlingerGrabNPC;                                 // 0x0B08(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_NPCRangedThrow;                                 // 0x0B10(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GAB_FlingerThrowHusk(int32 EntryPoint);
	void UnbindOnEndPlay(class AHuskPawn_C* Pawn);
	void BindOnEndPlay(class AHuskPawn_C* Pawn);
	void OnEndPlay(class AActor* Actor, EEndPlayReason EndPlayReason);
	void StopFX();
	void SpawnFX();
	void CommitAndEndAbility();
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void Triggered_B56594C44CE933A96A3E13BDCFC1097D(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Cancelled_B56594C44CE933A96A3E13BDCFC1097D(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Completed_B56594C44CE933A96A3E13BDCFC1097D(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);

	bool K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, struct FGameplayTagContainer* RelevantTags) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GAB_FlingerThrowHusk_C">();
	}
	static class UGAB_FlingerThrowHusk_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGAB_FlingerThrowHusk_C>();
	}
};
static_assert(alignof(UGAB_FlingerThrowHusk_C) == 0x000008, "Wrong alignment on UGAB_FlingerThrowHusk_C");
static_assert(sizeof(UGAB_FlingerThrowHusk_C) == 0x000B18, "Wrong size on UGAB_FlingerThrowHusk_C");
static_assert(offsetof(UGAB_FlingerThrowHusk_C, UberGraphFrame) == 0x000AF0, "Member 'UGAB_FlingerThrowHusk_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGAB_FlingerThrowHusk_C, FlingerPawn) == 0x000AF8, "Member 'UGAB_FlingerThrowHusk_C::FlingerPawn' has a wrong offset!");
static_assert(offsetof(UGAB_FlingerThrowHusk_C, HuskHeldByFlinger) == 0x000B00, "Member 'UGAB_FlingerThrowHusk_C::HuskHeldByFlinger' has a wrong offset!");
static_assert(offsetof(UGAB_FlingerThrowHusk_C, GC_FlingerGrabNPC) == 0x000B08, "Member 'UGAB_FlingerThrowHusk_C::GC_FlingerGrabNPC' has a wrong offset!");
static_assert(offsetof(UGAB_FlingerThrowHusk_C, GC_NPCRangedThrow) == 0x000B10, "Member 'UGAB_FlingerThrowHusk_C::GC_NPCRangedThrow' has a wrong offset!");

}


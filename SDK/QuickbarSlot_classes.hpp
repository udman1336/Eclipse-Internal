#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuickbarSlot

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "ItemDisplayStyle_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass QuickbarSlot.QuickbarSlot_C
// 0x0080 (0x0370 - 0x02F0)
class UQuickbarSlot_C : public UFortQuickBarSlotBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Selected;                                          // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimMaximize;                                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimMinimize;                                      // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               _SizeBox__Item;                                    // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemLocked;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindWidget_C*                       KeybindTopCombo1;                                  // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindWidget_C*                       KeybindTopCombo2;                                  // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       QuickBarSlotInvalidationBox;                       // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Selection;                                         // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBoxBottomKeybind;                              // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBoxTopKeybind;                                 // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EItemDisplayStyle                             ItemDisplayStyle;                                  // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EFortItemCooldownType>                 CooldownTypesSupported;                            // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	float                                         AnimatedBoxScaleFactor;                            // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	EFortItemCardSize                             MinimumCardSize;                                   // 0x036C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemCardSize                             MaximumCardSize;                                   // 0x036D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldCollapseItemWidgetBorder;                    // 0x036E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_QuickbarSlot(int32 EntryPoint);
	void SetAnimatedBoxScaleFactor(float AnimatedBoxScaleFactor_0);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void HandleMinimizeStarted();
	void HandleMaximizeFinished();
	void HandleMinimizeFinished();
	void HandleMaximizeStarted();
	void SetSelected(bool Selected_0);
	void Minimize(bool ShouldSkipAnimation);
	void Maximize(bool ShouldSkipAnimation);
	void InitializeCooldowns();
	void OnCooldownStarted(EFortItemCooldownType CooldownType);
	void OnCooldownStopped(EFortItemCooldownType CooldownType);
	void UpdateItemBoxSize();
	void InitializeInvalidation();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"QuickbarSlot_C">();
	}
	static class UQuickbarSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuickbarSlot_C>();
	}
};
static_assert(alignof(UQuickbarSlot_C) == 0x000008, "Wrong alignment on UQuickbarSlot_C");
static_assert(sizeof(UQuickbarSlot_C) == 0x000370, "Wrong size on UQuickbarSlot_C");
static_assert(offsetof(UQuickbarSlot_C, UberGraphFrame) == 0x0002F0, "Member 'UQuickbarSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, Selected) == 0x0002F8, "Member 'UQuickbarSlot_C::Selected' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, AnimMaximize) == 0x000300, "Member 'UQuickbarSlot_C::AnimMaximize' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, AnimMinimize) == 0x000308, "Member 'UQuickbarSlot_C::AnimMinimize' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, _SizeBox__Item) == 0x000310, "Member 'UQuickbarSlot_C::_SizeBox__Item' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, ItemLocked) == 0x000318, "Member 'UQuickbarSlot_C::ItemLocked' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, KeybindTopCombo1) == 0x000320, "Member 'UQuickbarSlot_C::KeybindTopCombo1' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, KeybindTopCombo2) == 0x000328, "Member 'UQuickbarSlot_C::KeybindTopCombo2' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, QuickBarSlotInvalidationBox) == 0x000330, "Member 'UQuickbarSlot_C::QuickBarSlotInvalidationBox' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, Selection) == 0x000338, "Member 'UQuickbarSlot_C::Selection' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, SizeBoxBottomKeybind) == 0x000340, "Member 'UQuickbarSlot_C::SizeBoxBottomKeybind' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, SizeBoxTopKeybind) == 0x000348, "Member 'UQuickbarSlot_C::SizeBoxTopKeybind' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, ItemDisplayStyle) == 0x000350, "Member 'UQuickbarSlot_C::ItemDisplayStyle' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, CooldownTypesSupported) == 0x000358, "Member 'UQuickbarSlot_C::CooldownTypesSupported' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, AnimatedBoxScaleFactor) == 0x000368, "Member 'UQuickbarSlot_C::AnimatedBoxScaleFactor' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, MinimumCardSize) == 0x00036C, "Member 'UQuickbarSlot_C::MinimumCardSize' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, MaximumCardSize) == 0x00036D, "Member 'UQuickbarSlot_C::MaximumCardSize' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, ShouldCollapseItemWidgetBorder) == 0x00036E, "Member 'UQuickbarSlot_C::ShouldCollapseItemWidgetBorder' has a wrong offset!");

}


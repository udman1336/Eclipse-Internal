#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerPawn_Constructor

#include "Basic.hpp"

#include "PlayerPawn_Constructor_classes.hpp"
#include "PlayerPawn_Constructor_parameters.hpp"


namespace SDK
{

// Function PlayerPawn_Constructor.PlayerPawn_Constructor_C.ExecuteUbergraph_PlayerPawn_Constructor
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_Constructor_C::ExecuteUbergraph_PlayerPawn_Constructor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_Constructor_C", "ExecuteUbergraph_PlayerPawn_Constructor");

	Params::PlayerPawn_Constructor_C_ExecuteUbergraph_PlayerPawn_Constructor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn_Constructor.PlayerPawn_Constructor_C.SetBase
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_Constructor_BASE_C*            SavedBase_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_Constructor_C::SetBase(class AB_Constructor_BASE_C* SavedBase_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_Constructor_C", "SetBase");

	Params::PlayerPawn_Constructor_C_SetBase Parms{};

	Parms.SavedBase_0 = SavedBase_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn_Constructor.PlayerPawn_Constructor_C.ToggleShield
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Toggle                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlayerPawn_Constructor_C::ToggleShield(bool Toggle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_Constructor_C", "ToggleShield");

	Params::PlayerPawn_Constructor_C_ToggleShield Parms{};

	Parms.Toggle = Toggle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn_Constructor.PlayerPawn_Constructor_C.MultiToggleShield
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Toggle                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlayerPawn_Constructor_C::MultiToggleShield(bool Toggle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_Constructor_C", "MultiToggleShield");

	Params::PlayerPawn_Constructor_C_MultiToggleShield Parms{};

	Parms.Toggle = Toggle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn_Constructor.PlayerPawn_Constructor_C.SetMenuScreenClassName
// (BlueprintCallable, BlueprintEvent)

void APlayerPawn_Constructor_C::SetMenuScreenClassName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_Constructor_C", "SetMenuScreenClassName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn_Constructor.PlayerPawn_Constructor_C.testEndIFF
// (BlueprintCallable, BlueprintEvent)

void APlayerPawn_Constructor_C::testEndIFF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_Constructor_C", "testEndIFF");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn_Constructor.PlayerPawn_Constructor_C.PlayArm
// (BlueprintCallable, BlueprintEvent)

void APlayerPawn_Constructor_C::PlayArm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_Constructor_C", "PlayArm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn_Constructor.PlayerPawn_Constructor_C.GameplayCue.Abilities.Activation.Generic.HarvestBuff.Tier2
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameplayCueEvent                       EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void APlayerPawn_Constructor_C::GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_Constructor_C", "GameplayCue.Abilities.Activation.Generic.HarvestBuff.Tier2");

	Params::PlayerPawn_Constructor_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2 Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn_Constructor.PlayerPawn_Constructor_C.GameplayCue.Abilities.Activation.Generic.HarvestBuff.Tier1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameplayCueEvent                       EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void APlayerPawn_Constructor_C::GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_Constructor_C", "GameplayCue.Abilities.Activation.Generic.HarvestBuff.Tier1");

	Params::PlayerPawn_Constructor_C_GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1 Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn_Constructor.PlayerPawn_Constructor_C.OnCharacterPartsReinitialized
// (Event, Protected, BlueprintEvent)

void APlayerPawn_Constructor_C::OnCharacterPartsReinitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_Constructor_C", "OnCharacterPartsReinitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn_Constructor.PlayerPawn_Constructor_C.testIFF
// (BlueprintCallable, BlueprintEvent)

void APlayerPawn_Constructor_C::testIFF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_Constructor_C", "testIFF");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn_Constructor.PlayerPawn_Constructor_C.GameplayCue.Constructor.PlasmaPulse.IFFCoding
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameplayCueEvent                       EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void APlayerPawn_Constructor_C::GameplayCue_Constructor_PlasmaPulse_IFFCoding(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_Constructor_C", "GameplayCue.Constructor.PlasmaPulse.IFFCoding");

	Params::PlayerPawn_Constructor_C_GameplayCue_Constructor_PlasmaPulse_IFFCoding Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn_Constructor.PlayerPawn_Constructor_C.GameplayCue.Constructor.KineticOverload.ActiveFX
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameplayCueEvent                       EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void APlayerPawn_Constructor_C::GameplayCue_Constructor_KineticOverload_ActiveFX(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_Constructor_C", "GameplayCue.Constructor.KineticOverload.ActiveFX");

	Params::PlayerPawn_Constructor_C_GameplayCue_Constructor_KineticOverload_ActiveFX Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn_Constructor.PlayerPawn_Constructor_C.GameplayCue.Constructor.ToInfinityAndBeyond.ActiveFX
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameplayCueEvent                       EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void APlayerPawn_Constructor_C::GameplayCue_Constructor_ToInfinityAndBeyond_ActiveFX(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_Constructor_C", "GameplayCue.Constructor.ToInfinityAndBeyond.ActiveFX");

	Params::PlayerPawn_Constructor_C_GameplayCue_Constructor_ToInfinityAndBeyond_ActiveFX Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn_Constructor.PlayerPawn_Constructor_C.GameplayCue.Damage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameplayCueEvent                       EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void APlayerPawn_Constructor_C::GameplayCue_Damage(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_Constructor_C", "GameplayCue.Damage");

	Params::PlayerPawn_Constructor_C_GameplayCue_Damage Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn_Constructor.PlayerPawn_Constructor_C.TakeDamageTimeline__UpdateFunc
// (BlueprintEvent)

void APlayerPawn_Constructor_C::TakeDamageTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_Constructor_C", "TakeDamageTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn_Constructor.PlayerPawn_Constructor_C.TakeDamageTimeline__FinishedFunc
// (BlueprintEvent)

void APlayerPawn_Constructor_C::TakeDamageTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_Constructor_C", "TakeDamageTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn_Constructor.PlayerPawn_Constructor_C.SetIFFMeshesEnabled
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnabled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlayerPawn_Constructor_C::SetIFFMeshesEnabled(bool IsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_Constructor_C", "SetIFFMeshesEnabled");

	Params::PlayerPawn_Constructor_C_SetIFFMeshesEnabled Parms{};

	Parms.IsEnabled = IsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn_Constructor.PlayerPawn_Constructor_C.OnRep_SavedBase
// (BlueprintCallable, BlueprintEvent)

void APlayerPawn_Constructor_C::OnRep_SavedBase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_Constructor_C", "OnRep_SavedBase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn_Constructor.PlayerPawn_Constructor_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void APlayerPawn_Constructor_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_Constructor_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn_Constructor.PlayerPawn_Constructor_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void APlayerPawn_Constructor_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_Constructor_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengeBundlePage

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ChallengeBundlePage.ChallengeBundlePage_C
// 0x00A0 (0x0470 - 0x03D0)
class UChallengeBundlePage_C final : public UFortChallengeBundleWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03D0(0x0008)(Transient, DuplicateTransient)
	class UOverlay*                               BacchusCloseOverlay;                               // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UChallengeBundleCategoryHeader_C*       ChallengeBundleCategoryHeader;                     // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UChallengeProgressWidget_C*             ChallengeProgressWidget;                           // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      ClaimRewardsButton;                                // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        LockCheckSwitcher;                                 // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       LockedText;                                        // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortMultiSizeItemCard*                 MainReward;                                        // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPanelButton_C*                         PageNextButton;                                    // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPanelButton_C*                         PagePreviousButton;                                // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPanelButton_C*                         PanelButton;                                       // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       QuestListTitle;                                    // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           QuestPanel;                                        // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       RewardText;                                        // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpacingLine;                                       // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Status_LockedHB;                                   // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           Status_ProgressVB;                                 // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        StatusSwitcher;                                    // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortSwipePanel*                        SwipePanel;                                        // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortTokenType*                         MysteryItemDef;                                    // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ChallengeBundlePage(int32 EntryPoint);
	void BndEvt__SwipePanel_K2Node_ComponentBoundEvent_26_OnFortSwipeEvent__DelegateSignature();
	void BndEvt__SwipePanel_K2Node_ComponentBoundEvent_11_OnFortSwipeEvent__DelegateSignature();
	void BndEvt__PanelButton_K2Node_ComponentBoundEvent_16_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__PageNextButton_K2Node_ComponentBoundEvent_18_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__PagePreviousButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void OnBundleUpdated();
	void Construct();
	void UpdateBundle();
	void UpdateQuests();
	void ClaimNextQuestReward();
	void RegisterEventListeners();
	void CreateQuestWidget(class UFortQuestItem* Quest, class UFortQuestItemDefinition* QuestDefinition);
	void HandleBack(bool* Passthrough);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ChallengeBundlePage_C">();
	}
	static class UChallengeBundlePage_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChallengeBundlePage_C>();
	}
};
static_assert(alignof(UChallengeBundlePage_C) == 0x000008, "Wrong alignment on UChallengeBundlePage_C");
static_assert(sizeof(UChallengeBundlePage_C) == 0x000470, "Wrong size on UChallengeBundlePage_C");
static_assert(offsetof(UChallengeBundlePage_C, UberGraphFrame) == 0x0003D0, "Member 'UChallengeBundlePage_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UChallengeBundlePage_C, BacchusCloseOverlay) == 0x0003D8, "Member 'UChallengeBundlePage_C::BacchusCloseOverlay' has a wrong offset!");
static_assert(offsetof(UChallengeBundlePage_C, ChallengeBundleCategoryHeader) == 0x0003E0, "Member 'UChallengeBundlePage_C::ChallengeBundleCategoryHeader' has a wrong offset!");
static_assert(offsetof(UChallengeBundlePage_C, ChallengeProgressWidget) == 0x0003E8, "Member 'UChallengeBundlePage_C::ChallengeProgressWidget' has a wrong offset!");
static_assert(offsetof(UChallengeBundlePage_C, ClaimRewardsButton) == 0x0003F0, "Member 'UChallengeBundlePage_C::ClaimRewardsButton' has a wrong offset!");
static_assert(offsetof(UChallengeBundlePage_C, LockCheckSwitcher) == 0x0003F8, "Member 'UChallengeBundlePage_C::LockCheckSwitcher' has a wrong offset!");
static_assert(offsetof(UChallengeBundlePage_C, LockedText) == 0x000400, "Member 'UChallengeBundlePage_C::LockedText' has a wrong offset!");
static_assert(offsetof(UChallengeBundlePage_C, MainReward) == 0x000408, "Member 'UChallengeBundlePage_C::MainReward' has a wrong offset!");
static_assert(offsetof(UChallengeBundlePage_C, PageNextButton) == 0x000410, "Member 'UChallengeBundlePage_C::PageNextButton' has a wrong offset!");
static_assert(offsetof(UChallengeBundlePage_C, PagePreviousButton) == 0x000418, "Member 'UChallengeBundlePage_C::PagePreviousButton' has a wrong offset!");
static_assert(offsetof(UChallengeBundlePage_C, PanelButton) == 0x000420, "Member 'UChallengeBundlePage_C::PanelButton' has a wrong offset!");
static_assert(offsetof(UChallengeBundlePage_C, QuestListTitle) == 0x000428, "Member 'UChallengeBundlePage_C::QuestListTitle' has a wrong offset!");
static_assert(offsetof(UChallengeBundlePage_C, QuestPanel) == 0x000430, "Member 'UChallengeBundlePage_C::QuestPanel' has a wrong offset!");
static_assert(offsetof(UChallengeBundlePage_C, RewardText) == 0x000438, "Member 'UChallengeBundlePage_C::RewardText' has a wrong offset!");
static_assert(offsetof(UChallengeBundlePage_C, SpacingLine) == 0x000440, "Member 'UChallengeBundlePage_C::SpacingLine' has a wrong offset!");
static_assert(offsetof(UChallengeBundlePage_C, Status_LockedHB) == 0x000448, "Member 'UChallengeBundlePage_C::Status_LockedHB' has a wrong offset!");
static_assert(offsetof(UChallengeBundlePage_C, Status_ProgressVB) == 0x000450, "Member 'UChallengeBundlePage_C::Status_ProgressVB' has a wrong offset!");
static_assert(offsetof(UChallengeBundlePage_C, StatusSwitcher) == 0x000458, "Member 'UChallengeBundlePage_C::StatusSwitcher' has a wrong offset!");
static_assert(offsetof(UChallengeBundlePage_C, SwipePanel) == 0x000460, "Member 'UChallengeBundlePage_C::SwipePanel' has a wrong offset!");
static_assert(offsetof(UChallengeBundlePage_C, MysteryItemDef) == 0x000468, "Member 'UChallengeBundlePage_C::MysteryItemDef' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortReplayNotification

#include "Basic.hpp"

#include "FortReplayNotification_classes.hpp"
#include "FortReplayNotification_parameters.hpp"


namespace SDK
{

// Function FortReplayNotification.FortReplayNotification_C.ExecuteUbergraph_FortReplayNotification
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortReplayNotification_C::ExecuteUbergraph_FortReplayNotification(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortReplayNotification_C", "ExecuteUbergraph_FortReplayNotification");

	Params::FortReplayNotification_C_ExecuteUbergraph_FortReplayNotification Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortReplayNotification.FortReplayNotification_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UFortReplayNotification_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortReplayNotification_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortReplayNotification.FortReplayNotification_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortReplayNotification_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortReplayNotification_C", "Tick");

	Params::FortReplayNotification_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortReplayNotification.FortReplayNotification_C.ShowNotification
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             NotificationText                                       (BlueprintVisible, BlueprintReadOnly, Parm)

void UFortReplayNotification_C::ShowNotification(const class FText& NotificationText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortReplayNotification_C", "ShowNotification");

	Params::FortReplayNotification_C_ShowNotification Parms{};

	Parms.NotificationText = std::move(NotificationText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortReplayNotification.FortReplayNotification_C.TickFade
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortReplayNotification_C::TickFade(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortReplayNotification_C", "TickFade");

	Params::FortReplayNotification_C_TickFade Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortReplayNotification.FortReplayNotification_C.StartFading
// (Private, BlueprintCallable, BlueprintEvent)

void UFortReplayNotification_C::StartFading()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortReplayNotification_C", "StartFading");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortReplayNotification.FortReplayNotification_C.TickRemainingTime
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortReplayNotification_C::TickRemainingTime(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortReplayNotification_C", "TickRemainingTime");

	Params::FortReplayNotification_C_TickRemainingTime Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortReplayNotification.FortReplayNotification_C.SetNotificationVisibility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        Visibility_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortReplayNotification_C::SetNotificationVisibility(ESlateVisibility Visibility_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortReplayNotification_C", "SetNotificationVisibility");

	Params::FortReplayNotification_C_SetNotificationVisibility Parms{};

	Parms.Visibility_0 = Visibility_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortReplayNotification.FortReplayNotification_C.IsVisibilityNotification
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             Notification_0                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    IsVisibilityNotification_0                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFortReplayNotification_C::IsVisibilityNotification(const class FText& Notification_0, bool* IsVisibilityNotification_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortReplayNotification_C", "IsVisibilityNotification");

	Params::FortReplayNotification_C_IsVisibilityNotification Parms{};

	Parms.Notification_0 = std::move(Notification_0);

	UObject::ProcessEvent(Func, &Parms);

	if (IsVisibilityNotification_0 != nullptr)
		*IsVisibilityNotification_0 = Parms.IsVisibilityNotification_0;
}


// Function FortReplayNotification.FortReplayNotification_C.GetVisibilityText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EHudVisibilityState                     Visibility_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Text                                                   (Parm, OutParm)

void UFortReplayNotification_C::GetVisibilityText(EHudVisibilityState Visibility_0, class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortReplayNotification_C", "GetVisibilityText");

	Params::FortReplayNotification_C_GetVisibilityText Parms{};

	Parms.Visibility_0 = Visibility_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}

}


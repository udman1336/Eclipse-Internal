#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerPawn_Athena

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "PlayerPawn_Athena_Generic_classes.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PlayerPawn_Athena.PlayerPawn_Athena_C
// 0x0250 (0x2620 - 0x23D0)
class APlayerPawn_Athena_C final : public APlayerPawn_Athena_Generic_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_PlayerPawn_Athena_C;                // 0x23D0(0x0008)(Transient, DuplicateTransient)
	float                                         Timeline_0_BlendWeight_A4943458400C3662DB243099F9EAC7E8; // 0x23D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_A4943458400C3662DB243099F9EAC7E8; // 0x23DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23DD[0x3];                                     // 0x23DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x23E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Storm_Audio_Fader_Volume_8F54E8DB44CB132992E4EBA6F5FAF86B; // 0x23E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Storm_Audio_Fader__Direction_8F54E8DB44CB132992E4EBA6F5FAF86B; // 0x23EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23ED[0x3];                                     // 0x23ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Storm_Audio_Fader;                                 // 0x23F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningFlashTL_LERP_C86EEA494C7B742DC045759B630397B7; // 0x23F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            LightningFlashTL__Direction_C86EEA494C7B742DC045759B630397B7; // 0x23FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23FD[0x3];                                     // 0x23FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     LightningFlashTL;                                  // 0x2400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 TargetHead;                                        // 0x2408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 TargetBody;                                        // 0x2410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             PawnHeadMaterials_0;                               // 0x2418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInterface*>             PawnBodyMaterials_0;                               // 0x2428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_FlakVest;                                       // 0x2438(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayEventData                     Event_Data;                                        // 0x2458(0x00A8)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EventSpawnEffect;                                  // 0x2500(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMale;                                            // 0x2508(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2509[0x7];                                     // 0x2509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWeapon*                            MenuGoingCommandowWeapon;                          // 0x2510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SafeZonePassThroughSound;                          // 0x2518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasBeenOutsideSafeZone;                           // 0x2520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2521[0x3];                                     // 0x2521(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ThreatColor;                                       // 0x2524(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2534[0x4];                                     // 0x2534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             PlayerKilledSound;                                 // 0x2538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Contrail_A;                                        // 0x2540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bContrailReady;                                    // 0x2548(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2549[0x7];                                     // 0x2549(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        ActiveContrail;                                    // 0x2550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLiveContrail;                                     // 0x2558(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2559[0x7];                                     // 0x2559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               Vapor_Effect;                                      // 0x2560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               WindDebrisParticles;                               // 0x2568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               FallingRainParticles;                              // 0x2570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LightningSpawnLocation;                            // 0x2578(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningIntensityMin;                             // 0x2584(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningIntensityMax;                             // 0x2588(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_258C[0x4];                                     // 0x258C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 SafeZoneActor;                                     // 0x2590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningIntensity;                                // 0x2598(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259C[0x4];                                     // 0x259C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPointLightComponent*                   RandomLightningLight;                              // 0x25A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningTimelinePlaySpeedMin;                     // 0x25A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningTimelinePlaySpeedMax;                     // 0x25AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningFlashDiameter;                            // 0x25B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningFlashHeight;                              // 0x25B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningFlashRepeatDelayMin;                      // 0x25B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningFlashRepeatDelayMax;                      // 0x25BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEmitterCameraLensEffectBase*           RainCameraLensParticles;                           // 0x25C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _ChanceOfLightningMesh;                            // 0x25C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowInvulnerableVisuals;                           // 0x25CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25CD[0x3];                                     // 0x25CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        StormAudioLoop_Inst;                               // 0x25D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StormAudioVolume;                                  // 0x25D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkydiveAudioGroundVolumeScale;                     // 0x25DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkydiveMovementVolumeScale;                        // 0x25E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25E4[0x4];                                     // 0x25E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        FallingAudioLoop_Inst;                             // 0x25E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPlayingFallingSound;                            // 0x25F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25F1[0x3];                                     // 0x25F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayerAttributes_Speed_Walk;                       // 0x25F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerAttributes_Speed_Run;                        // 0x25F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerAttributes_Speed_Sprint;                     // 0x25FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxTrailsLOD;                                      // 0x2600(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2604[0x4];                                     // 0x2604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  MobilePostProcess;                                 // 0x2608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsOutsideSafeZoneCached;                          // 0x2610(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_PlayerPawn_Athena(int32 EntryPoint);
	void OnEnteredReplayRelevancy();
	void OnLeftReplayRelevancy();
	void OnSignificantTick(float Significance);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void NotifyTeammateSkydivedFromBus();
	void OnExitedWaterVolume();
	void OnEnteredWaterVolume();
	void Update_Parachute_and_Falling_Audio();
	void Start_Storm_Audio_Fader();
	void Play_Lightning_Flash_Audio(const struct FVector& Location);
	void Remove_Storm_Audio();
	void Add_Storm_Audio();
	void UpdateInvulnerableVisuals();
	void GameplayCue_Abilities_Activation_DBNOResurrect(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void ZapFX(int32 ZapCount);
	void RandomLightningFlashesRepeat();
	void StartRandomLightningFlashes();
	void RemoveStormFX();
	void AddStormFX();
	void GameplayCue_Athena_Player_BeingRevivedFromDBNO(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void ContrailCheck();
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void GameplayCue_Athena_Equipping(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void SafeZoneStatusChanged();
	void GameplayCue_Athena_OutsideSafeZone(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void ReceiveDestroyed();
	void ReceivePossessed(class AController* NewController);
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void Storm_Audio_Fader__UpdateFunc();
	void Storm_Audio_Fader__FinishedFunc();
	void LightningFlashTL__UpdateFunc();
	void LightningFlashTL__FinishedFunc();
	void InitAthenaFoleyAudio();
	void GetLocationInCircle_XY(struct FVector* LocationLocalSpace);
	void GetParachuteMovementVolumeScale(float* Scale);
	void ApplyParachuteMovementVolumeScale();
	void HandleWaterFX();
	void EnableWaterAudio(bool Is_Entering_Water);
	void StopLoopingAudio();
	void InWarmUp(bool* InWarmUp_0);
	void OnStartLongInteract(class AActor* ReceivingActor, bool* Out_bConsumeEvent, bool* Out_bSkipSetInteractDuration, bool* Out_bSkipStartAnimation);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerPawn_Athena_C">();
	}
	static class APlayerPawn_Athena_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerPawn_Athena_C>();
	}
};
static_assert(alignof(APlayerPawn_Athena_C) == 0x000010, "Wrong alignment on APlayerPawn_Athena_C");
static_assert(sizeof(APlayerPawn_Athena_C) == 0x002620, "Wrong size on APlayerPawn_Athena_C");
static_assert(offsetof(APlayerPawn_Athena_C, UberGraphFrame_PlayerPawn_Athena_C) == 0x0023D0, "Member 'APlayerPawn_Athena_C::UberGraphFrame_PlayerPawn_Athena_C' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Timeline_0_BlendWeight_A4943458400C3662DB243099F9EAC7E8) == 0x0023D8, "Member 'APlayerPawn_Athena_C::Timeline_0_BlendWeight_A4943458400C3662DB243099F9EAC7E8' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Timeline_0__Direction_A4943458400C3662DB243099F9EAC7E8) == 0x0023DC, "Member 'APlayerPawn_Athena_C::Timeline_0__Direction_A4943458400C3662DB243099F9EAC7E8' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Timeline_0) == 0x0023E0, "Member 'APlayerPawn_Athena_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Storm_Audio_Fader_Volume_8F54E8DB44CB132992E4EBA6F5FAF86B) == 0x0023E8, "Member 'APlayerPawn_Athena_C::Storm_Audio_Fader_Volume_8F54E8DB44CB132992E4EBA6F5FAF86B' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Storm_Audio_Fader__Direction_8F54E8DB44CB132992E4EBA6F5FAF86B) == 0x0023EC, "Member 'APlayerPawn_Athena_C::Storm_Audio_Fader__Direction_8F54E8DB44CB132992E4EBA6F5FAF86B' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Storm_Audio_Fader) == 0x0023F0, "Member 'APlayerPawn_Athena_C::Storm_Audio_Fader' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningFlashTL_LERP_C86EEA494C7B742DC045759B630397B7) == 0x0023F8, "Member 'APlayerPawn_Athena_C::LightningFlashTL_LERP_C86EEA494C7B742DC045759B630397B7' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningFlashTL__Direction_C86EEA494C7B742DC045759B630397B7) == 0x0023FC, "Member 'APlayerPawn_Athena_C::LightningFlashTL__Direction_C86EEA494C7B742DC045759B630397B7' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningFlashTL) == 0x002400, "Member 'APlayerPawn_Athena_C::LightningFlashTL' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TargetHead) == 0x002408, "Member 'APlayerPawn_Athena_C::TargetHead' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TargetBody) == 0x002410, "Member 'APlayerPawn_Athena_C::TargetBody' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PawnHeadMaterials_0) == 0x002418, "Member 'APlayerPawn_Athena_C::PawnHeadMaterials_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PawnBodyMaterials_0) == 0x002428, "Member 'APlayerPawn_Athena_C::PawnBodyMaterials_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TC_FlakVest) == 0x002438, "Member 'APlayerPawn_Athena_C::TC_FlakVest' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Event_Data) == 0x002458, "Member 'APlayerPawn_Athena_C::Event_Data' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, EventSpawnEffect) == 0x002500, "Member 'APlayerPawn_Athena_C::EventSpawnEffect' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, IsMale) == 0x002508, "Member 'APlayerPawn_Athena_C::IsMale' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MenuGoingCommandowWeapon) == 0x002510, "Member 'APlayerPawn_Athena_C::MenuGoingCommandowWeapon' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SafeZonePassThroughSound) == 0x002518, "Member 'APlayerPawn_Athena_C::SafeZonePassThroughSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bHasBeenOutsideSafeZone) == 0x002520, "Member 'APlayerPawn_Athena_C::bHasBeenOutsideSafeZone' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ThreatColor) == 0x002524, "Member 'APlayerPawn_Athena_C::ThreatColor' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerKilledSound) == 0x002538, "Member 'APlayerPawn_Athena_C::PlayerKilledSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Contrail_A) == 0x002540, "Member 'APlayerPawn_Athena_C::Contrail_A' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bContrailReady) == 0x002548, "Member 'APlayerPawn_Athena_C::bContrailReady' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ActiveContrail) == 0x002550, "Member 'APlayerPawn_Athena_C::ActiveContrail' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bLiveContrail) == 0x002558, "Member 'APlayerPawn_Athena_C::bLiveContrail' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Vapor_Effect) == 0x002560, "Member 'APlayerPawn_Athena_C::Vapor_Effect' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WindDebrisParticles) == 0x002568, "Member 'APlayerPawn_Athena_C::WindDebrisParticles' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, FallingRainParticles) == 0x002570, "Member 'APlayerPawn_Athena_C::FallingRainParticles' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningSpawnLocation) == 0x002578, "Member 'APlayerPawn_Athena_C::LightningSpawnLocation' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningIntensityMin) == 0x002584, "Member 'APlayerPawn_Athena_C::LightningIntensityMin' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningIntensityMax) == 0x002588, "Member 'APlayerPawn_Athena_C::LightningIntensityMax' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SafeZoneActor) == 0x002590, "Member 'APlayerPawn_Athena_C::SafeZoneActor' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningIntensity) == 0x002598, "Member 'APlayerPawn_Athena_C::LightningIntensity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RandomLightningLight) == 0x0025A0, "Member 'APlayerPawn_Athena_C::RandomLightningLight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningTimelinePlaySpeedMin) == 0x0025A8, "Member 'APlayerPawn_Athena_C::LightningTimelinePlaySpeedMin' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningTimelinePlaySpeedMax) == 0x0025AC, "Member 'APlayerPawn_Athena_C::LightningTimelinePlaySpeedMax' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningFlashDiameter) == 0x0025B0, "Member 'APlayerPawn_Athena_C::LightningFlashDiameter' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningFlashHeight) == 0x0025B4, "Member 'APlayerPawn_Athena_C::LightningFlashHeight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningFlashRepeatDelayMin) == 0x0025B8, "Member 'APlayerPawn_Athena_C::LightningFlashRepeatDelayMin' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningFlashRepeatDelayMax) == 0x0025BC, "Member 'APlayerPawn_Athena_C::LightningFlashRepeatDelayMax' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RainCameraLensParticles) == 0x0025C0, "Member 'APlayerPawn_Athena_C::RainCameraLensParticles' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, _ChanceOfLightningMesh) == 0x0025C8, "Member 'APlayerPawn_Athena_C::_ChanceOfLightningMesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ShowInvulnerableVisuals) == 0x0025CC, "Member 'APlayerPawn_Athena_C::ShowInvulnerableVisuals' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, StormAudioLoop_Inst) == 0x0025D0, "Member 'APlayerPawn_Athena_C::StormAudioLoop_Inst' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, StormAudioVolume) == 0x0025D8, "Member 'APlayerPawn_Athena_C::StormAudioVolume' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SkydiveAudioGroundVolumeScale) == 0x0025DC, "Member 'APlayerPawn_Athena_C::SkydiveAudioGroundVolumeScale' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SkydiveMovementVolumeScale) == 0x0025E0, "Member 'APlayerPawn_Athena_C::SkydiveMovementVolumeScale' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, FallingAudioLoop_Inst) == 0x0025E8, "Member 'APlayerPawn_Athena_C::FallingAudioLoop_Inst' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bIsPlayingFallingSound) == 0x0025F0, "Member 'APlayerPawn_Athena_C::bIsPlayingFallingSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerAttributes_Speed_Walk) == 0x0025F4, "Member 'APlayerPawn_Athena_C::PlayerAttributes_Speed_Walk' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerAttributes_Speed_Run) == 0x0025F8, "Member 'APlayerPawn_Athena_C::PlayerAttributes_Speed_Run' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerAttributes_Speed_Sprint) == 0x0025FC, "Member 'APlayerPawn_Athena_C::PlayerAttributes_Speed_Sprint' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MaxTrailsLOD) == 0x002600, "Member 'APlayerPawn_Athena_C::MaxTrailsLOD' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MobilePostProcess) == 0x002608, "Member 'APlayerPawn_Athena_C::MobilePostProcess' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bIsOutsideSafeZoneCached) == 0x002610, "Member 'APlayerPawn_Athena_C::bIsOutsideSafeZoneCached' has a wrong offset!");

}


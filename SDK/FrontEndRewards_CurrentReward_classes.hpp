#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FrontEndRewards_CurrentReward

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "UMG_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteUI_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C
// 0x00B8 (0x02C8 - 0x0210)
class UFrontEndRewards_CurrentReward_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0210(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimIdleBounce;                                    // 0x0218(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimOpenReward;                                    // 0x0220(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimDropReward;                                    // 0x0228(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimPopReward;                                     // 0x0230(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           RewardCanvasPanel;                                 // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URewardsIcon_C*                         RewardsIcon;                                       // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBoxIcon;                                      // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   OnDropAnimationFinished;                           // 0x0250(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnPopAnimationFinished;                            // 0x0260(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnOpenAnimationStarted;                            // 0x0270(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnOpenAnimationFinished;                           // 0x0280(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         countTimeStart;                                    // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         countTime;                                         // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           countTimer;                                        // 0x0298(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         FadeDuration;                                      // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFadingOut;                                       // 0x02A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FinalScale;                                        // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              FinalAlignment;                                    // 0x02AC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               FinalAnchors;                                      // 0x02B4(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void ExecuteUbergraph_FrontEndRewards_CurrentReward(int32 EntryPoint);
	void fadeIconToWhite();
	void Construct();
	void PlayDropAnimation();
	void PlayPopAnimation();
	void PlayOpenAnimation();
	void HandlePopAnimationFinished();
	void HandleDropAnimationFinished();
	void HandleOpenAnimationFinished();
	void updateFade();
	void SkipOpenAnimation();
	void PlayFadeOutAnimation();
	void StopBounceAnimation();
	void SkipPopAnimation();
	void Play_Drop_Animation_Sound();
	void Play_Pop_Animation_Sound();
	void Play_Open_Animation_Sound();
	void Reset_Reward_Icon_Translation_and_Scale();
	void Reset_Canvas_Panel_Slot_Alignment_and_Anchors();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FrontEndRewards_CurrentReward_C">();
	}
	static class UFrontEndRewards_CurrentReward_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFrontEndRewards_CurrentReward_C>();
	}
};
static_assert(alignof(UFrontEndRewards_CurrentReward_C) == 0x000008, "Wrong alignment on UFrontEndRewards_CurrentReward_C");
static_assert(sizeof(UFrontEndRewards_CurrentReward_C) == 0x0002C8, "Wrong size on UFrontEndRewards_CurrentReward_C");
static_assert(offsetof(UFrontEndRewards_CurrentReward_C, UberGraphFrame) == 0x000210, "Member 'UFrontEndRewards_CurrentReward_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_CurrentReward_C, AnimIdleBounce) == 0x000218, "Member 'UFrontEndRewards_CurrentReward_C::AnimIdleBounce' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_CurrentReward_C, AnimOpenReward) == 0x000220, "Member 'UFrontEndRewards_CurrentReward_C::AnimOpenReward' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_CurrentReward_C, AnimDropReward) == 0x000228, "Member 'UFrontEndRewards_CurrentReward_C::AnimDropReward' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_CurrentReward_C, AnimPopReward) == 0x000230, "Member 'UFrontEndRewards_CurrentReward_C::AnimPopReward' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_CurrentReward_C, RewardCanvasPanel) == 0x000238, "Member 'UFrontEndRewards_CurrentReward_C::RewardCanvasPanel' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_CurrentReward_C, RewardsIcon) == 0x000240, "Member 'UFrontEndRewards_CurrentReward_C::RewardsIcon' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_CurrentReward_C, ScaleBoxIcon) == 0x000248, "Member 'UFrontEndRewards_CurrentReward_C::ScaleBoxIcon' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_CurrentReward_C, OnDropAnimationFinished) == 0x000250, "Member 'UFrontEndRewards_CurrentReward_C::OnDropAnimationFinished' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_CurrentReward_C, OnPopAnimationFinished) == 0x000260, "Member 'UFrontEndRewards_CurrentReward_C::OnPopAnimationFinished' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_CurrentReward_C, OnOpenAnimationStarted) == 0x000270, "Member 'UFrontEndRewards_CurrentReward_C::OnOpenAnimationStarted' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_CurrentReward_C, OnOpenAnimationFinished) == 0x000280, "Member 'UFrontEndRewards_CurrentReward_C::OnOpenAnimationFinished' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_CurrentReward_C, countTimeStart) == 0x000290, "Member 'UFrontEndRewards_CurrentReward_C::countTimeStart' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_CurrentReward_C, countTime) == 0x000294, "Member 'UFrontEndRewards_CurrentReward_C::countTime' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_CurrentReward_C, countTimer) == 0x000298, "Member 'UFrontEndRewards_CurrentReward_C::countTimer' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_CurrentReward_C, FadeDuration) == 0x0002A0, "Member 'UFrontEndRewards_CurrentReward_C::FadeDuration' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_CurrentReward_C, IsFadingOut) == 0x0002A4, "Member 'UFrontEndRewards_CurrentReward_C::IsFadingOut' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_CurrentReward_C, FinalScale) == 0x0002A8, "Member 'UFrontEndRewards_CurrentReward_C::FinalScale' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_CurrentReward_C, FinalAlignment) == 0x0002AC, "Member 'UFrontEndRewards_CurrentReward_C::FinalAlignment' has a wrong offset!");
static_assert(offsetof(UFrontEndRewards_CurrentReward_C, FinalAnchors) == 0x0002B4, "Member 'UFrontEndRewards_CurrentReward_C::FinalAnchors' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SplineVolumeTrail_v1b

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.ExecuteUbergraph_BP_SplineVolumeTrail_v1b
// 0x0268 (0x0268 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue1;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue12;       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue123;      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue;        // 0x0038(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocationWS_LocationWS;           // 0x0044(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSocketLocationWS_Skeletal_Mesh_InValid; // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSocketLocationWS_Socket_Invalid;       // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult;       // 0x0058(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x00E8(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00F8(0x0008)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue1;         // 0x0110(0x0008)(NoDestructor)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue1234;     // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue12;        // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate12;            // 0x0128(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue12;        // 0x0138(0x0008)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_146[0x2];                                      // 0x0146(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable1;                                // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue12;            // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveLinearColor*                      CallFunc_Array_Get_Item;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_BakeLinearColor_LinearColorOut;           // 0x0174(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue123;       // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0188(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor1;                    // 0x0198(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x01A8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue123;           // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue12;               // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue1;             // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue12;                    // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D2[0x2];                                      // 0x01D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue123;              // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue12;            // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x01E4(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue1;                // 0x01F0(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue123;                   // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1234;          // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue12345;         // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue12;               // 0x0208(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X1;                         // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y1;                         // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Vector2DVector2D_ReturnValue;  // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue1;                      // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue123;           // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue12;                     // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X12;                        // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y12;                        // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0240(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0248(0x0010)(NoDestructor)
	int32                                         CallFunc_FTrunc_ReturnValue123;                    // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue1;            // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b) == 0x000008, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b) == 0x000268, "Wrong size on BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, EntryPoint) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000020, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_GetGameTimeInSeconds_ReturnValue1) == 0x000028, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_GetGameTimeInSeconds_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_GetGameTimeInSeconds_ReturnValue12) == 0x00002C, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_GetGameTimeInSeconds_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_GetGameTimeInSeconds_ReturnValue123) == 0x000034, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_GetGameTimeInSeconds_ReturnValue123' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Multiply_RotatorFloat_ReturnValue) == 0x000038, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Multiply_RotatorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_GetSocketLocationWS_LocationWS) == 0x000044, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_GetSocketLocationWS_LocationWS' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_GetSocketLocationWS_Skeletal_Mesh_InValid) == 0x000050, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_GetSocketLocationWS_Skeletal_Mesh_InValid' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_GetSocketLocationWS_Socket_Invalid) == 0x000051, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_GetSocketLocationWS_Socket_Invalid' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_K2_AddLocalRotation_SweepHitResult) == 0x000058, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_K2_AddLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0000E0, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, K2Node_CreateDelegate_OutputDelegate1) == 0x0000E8, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000F8, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_IsValid_ReturnValue1) == 0x000100, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_DoesSocketExist_ReturnValue) == 0x000101, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, Temp_int_Variable) == 0x000104, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000108, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Add_IntInt_ReturnValue) == 0x00010C, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_K2_SetTimerDelegate_ReturnValue1) == 0x000110, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_K2_SetTimerDelegate_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_GetGameTimeInSeconds_ReturnValue1234) == 0x000118, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_GetGameTimeInSeconds_ReturnValue1234' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x00011C, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Subtract_FloatFloat_ReturnValue12) == 0x000120, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Subtract_FloatFloat_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000124, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, K2Node_CreateDelegate_OutputDelegate12) == 0x000128, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_K2_SetTimerDelegate_ReturnValue12) == 0x000138, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_K2_SetTimerDelegate_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Array_Length_ReturnValue) == 0x000140, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Greater_IntInt_ReturnValue) == 0x000144, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, Temp_bool_Variable) == 0x000145, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, Temp_int_Variable1) == 0x000148, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x00014C, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Percent_IntInt_ReturnValue) == 0x000150, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Conv_IntToFloat_ReturnValue12) == 0x000154, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Conv_IntToFloat_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Greater_IntInt_ReturnValue1) == 0x000158, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00015C, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_FTrunc_ReturnValue) == 0x000160, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Array_Get_Item) == 0x000168, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Add_IntInt_ReturnValue1) == 0x000170, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_BakeLinearColor_LinearColorOut) == 0x000174, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_BakeLinearColor_LinearColorOut' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Subtract_FloatFloat_ReturnValue123) == 0x000184, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Subtract_FloatFloat_ReturnValue123' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, K2Node_MakeStruct_LinearColor) == 0x000188, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, K2Node_MakeStruct_LinearColor1) == 0x000198, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::K2Node_MakeStruct_LinearColor1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, K2Node_Select_Default) == 0x0001A8, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Array_Length_ReturnValue1) == 0x0001B8, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Multiply_IntInt_ReturnValue) == 0x0001BC, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Conv_IntToFloat_ReturnValue123) == 0x0001C0, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Conv_IntToFloat_ReturnValue123' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_IsDedicatedServer_ReturnValue) == 0x0001C4, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Array_Length_ReturnValue12) == 0x0001C8, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Array_Length_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Multiply_IntInt_ReturnValue1) == 0x0001CC, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Multiply_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001D0, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_IsValid_ReturnValue12) == 0x0001D1, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_IsValid_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Array_Length_ReturnValue123) == 0x0001D4, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Array_Length_ReturnValue123' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_BreakVector2D_X) == 0x0001D8, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_BreakVector2D_Y) == 0x0001DC, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Multiply_IntInt_ReturnValue12) == 0x0001E0, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Multiply_IntInt_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_MakeVector2D_ReturnValue) == 0x0001E4, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001EC, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_MakeVector2D_ReturnValue1) == 0x0001F0, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_MakeVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_IsValid_ReturnValue123) == 0x0001F8, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_IsValid_ReturnValue123' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Conv_IntToFloat_ReturnValue1234) == 0x0001FC, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Conv_IntToFloat_ReturnValue1234' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x000200, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Conv_IntToFloat_ReturnValue12345) == 0x000204, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Conv_IntToFloat_ReturnValue12345' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_MakeVector2D_ReturnValue12) == 0x000208, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_MakeVector2D_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_BreakVector2D_X1) == 0x000210, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_BreakVector2D_X1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_BreakVector2D_Y1) == 0x000214, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_BreakVector2D_Y1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_EqualEqual_Vector2DVector2D_ReturnValue) == 0x000218, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_EqualEqual_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_FTrunc_ReturnValue1) == 0x00021C, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_FTrunc_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Multiply_IntInt_ReturnValue123) == 0x000220, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Multiply_IntInt_ReturnValue123' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_FTrunc_ReturnValue12) == 0x000224, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_FTrunc_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000228, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_BreakVector2D_X12) == 0x000230, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_BreakVector2D_X12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_BreakVector2D_Y12) == 0x000234, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_BreakVector2D_Y12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000238, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000240, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000248, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_FTrunc_ReturnValue123) == 0x000258, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_FTrunc_ReturnValue123' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_Subtract_IntInt_ReturnValue) == 0x00025C, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b, CallFunc_LessEqual_IntInt_ReturnValue1) == 0x000260, "Member 'BP_SplineVolumeTrail_v1b_C_ExecuteUbergraph_BP_SplineVolumeTrail_v1b::CallFunc_LessEqual_IntInt_ReturnValue1' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_ReceiveTick");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_ReceiveTick) == 0x000004, "Wrong size on BP_SplineVolumeTrail_v1b_C_ReceiveTick");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.UserConstructionScript
// 0x0150 (0x0150 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_UserConstructionScript final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class USplineComponent*                       CallFunc_AddComponent_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineCoordinateSpace                        Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESplineCoordinateSpace                        Temp_byte_Variable1;                               // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable1;                             // 0x0040(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                 CallFunc_AddComponent_ReturnValue1;                // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineCoordinateSpace                        K2Node_Select_Default;                             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue12;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue1;        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue123;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddLocalOffset_SweepHitResult;         // 0x00B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetSocketLocationWS_LocationWS;           // 0x0140(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSocketLocationWS_Skeletal_Mesh_InValid; // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSocketLocationWS_Socket_Invalid;       // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_UserConstructionScript");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript) == 0x000150, "Wrong size on BP_SplineVolumeTrail_v1b_C_UserConstructionScript");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, Temp_struct_Variable) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000030, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, Temp_byte_Variable) == 0x000038, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, CallFunc_IsDedicatedServer_ReturnValue) == 0x000039, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, Temp_byte_Variable1) == 0x00003A, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, Temp_bool_Variable) == 0x00003B, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, Temp_struct_Variable1) == 0x000040, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue1) == 0x000070, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue) == 0x00007C, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000080, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, CallFunc_IsValid_ReturnValue1) == 0x000088, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue1) == 0x00008C, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, K2Node_Select_Default) == 0x000090, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue1) == 0x000098, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00009C, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue) == 0x00009D, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0000A0, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue12) == 0x0000A4, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, CallFunc_GetGameTimeInSeconds_ReturnValue1) == 0x0000A8, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::CallFunc_GetGameTimeInSeconds_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue123) == 0x0000AC, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue123' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000B0, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, CallFunc_K2_AddLocalOffset_SweepHitResult) == 0x0000B8, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::CallFunc_K2_AddLocalOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, CallFunc_GetSocketLocationWS_LocationWS) == 0x000140, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::CallFunc_GetSocketLocationWS_LocationWS' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, CallFunc_GetSocketLocationWS_Skeletal_Mesh_InValid) == 0x00014C, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::CallFunc_GetSocketLocationWS_Skeletal_Mesh_InValid' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UserConstructionScript, CallFunc_GetSocketLocationWS_Socket_Invalid) == 0x00014D, "Member 'BP_SplineVolumeTrail_v1b_C_UserConstructionScript::CallFunc_GetSocketLocationWS_Socket_Invalid' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.AddSplineMesh
// 0x0130 (0x0130 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_AddSplineMesh final
{
public:
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue12;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue1;    // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0034(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue1;    // 0x0044(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue12;   // 0x0054(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0xB];                                       // 0x0065(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0070(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue1;             // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue123;           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item1;                          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item12;                         // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue12;                    // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DF[0x1];                                       // 0x00DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue1;     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item123;                        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1234;          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue123;                   // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_106[0x2];                                      // 0x0106(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1234;                  // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10E[0x2];                                      // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select1_Default;                            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue12;                  // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh) == 0x000010, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_AddSplineMesh");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh) == 0x000130, "Wrong size on BP_SplineVolumeTrail_v1b_C_AddSplineMesh");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_Array_LastIndex_ReturnValue) == 0x000004, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000010, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_Subtract_IntInt_ReturnValue1) == 0x000014, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_Subtract_IntInt_ReturnValue12) == 0x000018, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_Subtract_IntInt_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x00001C, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_GetLocationAtSplinePoint_ReturnValue1) == 0x000028, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_GetLocationAtSplinePoint_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000034, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_Conv_VectorToLinearColor_ReturnValue1) == 0x000044, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_Conv_VectorToLinearColor_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_Conv_VectorToLinearColor_ReturnValue12) == 0x000054, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_Conv_VectorToLinearColor_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, Temp_struct_Variable) == 0x000070, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_AddComponent_ReturnValue) == 0x0000A0, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, Temp_bool_Variable) == 0x0000A8, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, Temp_int_Variable) == 0x0000AC, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_Array_LastIndex_ReturnValue1) == 0x0000B0, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_Array_LastIndex_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_Array_Get_Item) == 0x0000B4, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_Subtract_IntInt_ReturnValue123) == 0x0000B8, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_Subtract_IntInt_ReturnValue123' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_Array_Get_Item1) == 0x0000BC, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_GetMaterial_ReturnValue) == 0x0000C0, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_Array_Add_ReturnValue) == 0x0000C8, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_Array_Get_Item12) == 0x0000D0, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_Array_Get_Item12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_IsValid_ReturnValue1) == 0x0000DC, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_Less_IntInt_ReturnValue) == 0x0000DD, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_IsValid_ReturnValue12) == 0x0000DE, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_IsValid_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_Add_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_SetStaticMesh_ReturnValue) == 0x0000E4, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, Temp_bool_Variable1) == 0x0000E5, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000E8, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, K2Node_Select_Default) == 0x0000EC, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_GetNumberOfSplinePoints_ReturnValue1) == 0x0000F0, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_GetNumberOfSplinePoints_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_Array_Get_Item123) == 0x0000F8, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_Array_Get_Item123' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_Subtract_IntInt_ReturnValue1234) == 0x000100, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_Subtract_IntInt_ReturnValue1234' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_IsValid_ReturnValue123) == 0x000104, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_IsValid_ReturnValue123' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000105, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_Array_Length_ReturnValue1) == 0x000108, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_Less_IntInt_ReturnValue1) == 0x00010C, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_IsValid_ReturnValue1234) == 0x00010D, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_IsValid_ReturnValue1234' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, K2Node_Select1_Default) == 0x000110, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000118, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_Array_Add_ReturnValue1) == 0x000120, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineMesh, CallFunc_Array_Add_ReturnValue12) == 0x000124, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineMesh::CallFunc_Array_Add_ReturnValue12' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.SetStartAndEndSplineMesh
// 0x0038 (0x0038 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_SetStartAndEndSplineMesh final
{
public:
	bool                                          Update_Spline_Mesh;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Location; // 0x0008(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Tangent; // 0x0014(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Location1; // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Tangent1; // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_SetStartAndEndSplineMesh) == 0x000004, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_SetStartAndEndSplineMesh");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_SetStartAndEndSplineMesh) == 0x000038, "Wrong size on BP_SplineVolumeTrail_v1b_C_SetStartAndEndSplineMesh");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SetStartAndEndSplineMesh, Update_Spline_Mesh) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_SetStartAndEndSplineMesh::Update_Spline_Mesh' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SetStartAndEndSplineMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_SplineVolumeTrail_v1b_C_SetStartAndEndSplineMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SetStartAndEndSplineMesh, CallFunc_GetLocationAndTangentAtSplinePoint_Location) == 0x000008, "Member 'BP_SplineVolumeTrail_v1b_C_SetStartAndEndSplineMesh::CallFunc_GetLocationAndTangentAtSplinePoint_Location' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SetStartAndEndSplineMesh, CallFunc_GetLocationAndTangentAtSplinePoint_Tangent) == 0x000014, "Member 'BP_SplineVolumeTrail_v1b_C_SetStartAndEndSplineMesh::CallFunc_GetLocationAndTangentAtSplinePoint_Tangent' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SetStartAndEndSplineMesh, CallFunc_GetLocationAndTangentAtSplinePoint_Location1) == 0x000020, "Member 'BP_SplineVolumeTrail_v1b_C_SetStartAndEndSplineMesh::CallFunc_GetLocationAndTangentAtSplinePoint_Location1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SetStartAndEndSplineMesh, CallFunc_GetLocationAndTangentAtSplinePoint_Tangent1) == 0x00002C, "Member 'BP_SplineVolumeTrail_v1b_C_SetStartAndEndSplineMesh::CallFunc_GetLocationAndTangentAtSplinePoint_Tangent1' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.AddSplinePoint
// 0x0024 (0x0024 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_AddSplinePoint final
{
public:
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocationWS_LocationWS;           // 0x0014(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSocketLocationWS_Skeletal_Mesh_InValid; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSocketLocationWS_Socket_Invalid;       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_AddSplinePoint) == 0x000004, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_AddSplinePoint");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_AddSplinePoint) == 0x000024, "Wrong size on BP_SplineVolumeTrail_v1b_C_AddSplinePoint");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplinePoint, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplinePoint::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplinePoint, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000004, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplinePoint::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplinePoint, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplinePoint::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplinePoint, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplinePoint::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplinePoint, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplinePoint::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplinePoint, CallFunc_GetSocketLocationWS_LocationWS) == 0x000014, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplinePoint::CallFunc_GetSocketLocationWS_LocationWS' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplinePoint, CallFunc_GetSocketLocationWS_Skeletal_Mesh_InValid) == 0x000020, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplinePoint::CallFunc_GetSocketLocationWS_Skeletal_Mesh_InValid' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplinePoint, CallFunc_GetSocketLocationWS_Socket_Invalid) == 0x000021, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplinePoint::CallFunc_GetSocketLocationWS_Socket_Invalid' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.UpdateSplinePointPosition
// 0x0018 (0x0018 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_UpdateSplinePointPosition final
{
public:
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocationWS_LocationWS;           // 0x0008(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSocketLocationWS_Skeletal_Mesh_InValid; // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSocketLocationWS_Socket_Invalid;       // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_UpdateSplinePointPosition) == 0x000004, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_UpdateSplinePointPosition");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_UpdateSplinePointPosition) == 0x000018, "Wrong size on BP_SplineVolumeTrail_v1b_C_UpdateSplinePointPosition");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateSplinePointPosition, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateSplinePointPosition::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateSplinePointPosition, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateSplinePointPosition::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateSplinePointPosition, CallFunc_GetSocketLocationWS_LocationWS) == 0x000008, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateSplinePointPosition::CallFunc_GetSocketLocationWS_LocationWS' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateSplinePointPosition, CallFunc_GetSocketLocationWS_Skeletal_Mesh_InValid) == 0x000014, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateSplinePointPosition::CallFunc_GetSocketLocationWS_Skeletal_Mesh_InValid' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateSplinePointPosition, CallFunc_GetSocketLocationWS_Socket_Invalid) == 0x000015, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateSplinePointPosition::CallFunc_GetSocketLocationWS_Socket_Invalid' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.SplineTimestampManagement
// 0x0078 (0x0078 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue1;        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item1;                          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Array_Get_Item12;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue12;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue12;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement) == 0x000008, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement) == 0x000078, "Wrong size on BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, Temp_int_Array_Index_Variable1) == 0x00000C, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_Array_Length_ReturnValue1) == 0x00001C, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_Array_Add_ReturnValue) == 0x000024, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, Temp_int_Loop_Counter_Variable1) == 0x000028, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_Add_IntInt_ReturnValue1) == 0x000030, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000034, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_FClamp_ReturnValue) == 0x000040, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_GetGameTimeInSeconds_ReturnValue1) == 0x000044, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_GetGameTimeInSeconds_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_Lerp_ReturnValue) == 0x000048, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x00004C, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_Greater_IntInt_ReturnValue1) == 0x000050, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_Array_Get_Item1) == 0x000058, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_Array_Get_Item12) == 0x000064, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_Array_Get_Item12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000068, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_Array_Length_ReturnValue12) == 0x00006C, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_Array_Length_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_Subtract_FloatFloat_ReturnValue12) == 0x000070, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_Subtract_FloatFloat_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_Less_IntInt_ReturnValue1) == 0x000074, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000075, "Member 'BP_SplineVolumeTrail_v1b_C_SplineTimestampManagement::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.ScaleSplineMesh
// 0x0068 (0x0068 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorFromCurveAtTime_LinearColorOut; // 0x0008(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorFromCurveAtTime_LinearColorOut1; // 0x0018(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R1;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G1;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B1;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A1;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0048(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue1;                // 0x0050(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0058(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue1;      // 0x0060(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh) == 0x000004, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh) == 0x000068, "Wrong size on BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh, CallFunc_GetLinearColorFromCurveAtTime_LinearColorOut) == 0x000008, "Member 'BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh::CallFunc_GetLinearColorFromCurveAtTime_LinearColorOut' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh, CallFunc_GetLinearColorFromCurveAtTime_LinearColorOut1) == 0x000018, "Member 'BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh::CallFunc_GetLinearColorFromCurveAtTime_LinearColorOut1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh, CallFunc_BreakColor_R) == 0x000028, "Member 'BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh, CallFunc_BreakColor_G) == 0x00002C, "Member 'BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh, CallFunc_BreakColor_B) == 0x000030, "Member 'BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh, CallFunc_BreakColor_A) == 0x000034, "Member 'BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh, CallFunc_BreakColor_R1) == 0x000038, "Member 'BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh::CallFunc_BreakColor_R1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh, CallFunc_BreakColor_G1) == 0x00003C, "Member 'BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh::CallFunc_BreakColor_G1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh, CallFunc_BreakColor_B1) == 0x000040, "Member 'BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh::CallFunc_BreakColor_B1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh, CallFunc_BreakColor_A1) == 0x000044, "Member 'BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh::CallFunc_BreakColor_A1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh, CallFunc_MakeVector2D_ReturnValue) == 0x000048, "Member 'BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh, CallFunc_MakeVector2D_ReturnValue1) == 0x000050, "Member 'BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh::CallFunc_MakeVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000058, "Member 'BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh, CallFunc_Multiply_Vector2DFloat_ReturnValue1) == 0x000060, "Member 'BP_SplineVolumeTrail_v1b_C_ScaleSplineMesh::CallFunc_Multiply_Vector2DFloat_ReturnValue1' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.UpdateMID
// 0x0030 (0x0030 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_UpdateMID final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorFromCurveAtTime_LinearColorOut; // 0x0008(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorFromCurveAtTime_LinearColorOut1; // 0x0018(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_UpdateMID) == 0x000008, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_UpdateMID");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_UpdateMID) == 0x000030, "Wrong size on BP_SplineVolumeTrail_v1b_C_UpdateMID");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateMID, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateMID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateMID, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateMID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateMID, CallFunc_GetLinearColorFromCurveAtTime_LinearColorOut) == 0x000008, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateMID::CallFunc_GetLinearColorFromCurveAtTime_LinearColorOut' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateMID, CallFunc_GetLinearColorFromCurveAtTime_LinearColorOut1) == 0x000018, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateMID::CallFunc_GetLinearColorFromCurveAtTime_LinearColorOut1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateMID, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateMID::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.UpdateParticleSystemPosition
// 0x00A0 (0x00A0 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_UpdateParticleSystemPosition final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocationWS_LocationWS;           // 0x0004(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSocketLocationWS_Skeletal_Mesh_InValid; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSocketLocationWS_Socket_Invalid;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0018(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_UpdateParticleSystemPosition) == 0x000008, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_UpdateParticleSystemPosition");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_UpdateParticleSystemPosition) == 0x0000A0, "Wrong size on BP_SplineVolumeTrail_v1b_C_UpdateParticleSystemPosition");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateParticleSystemPosition, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateParticleSystemPosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateParticleSystemPosition, CallFunc_GetSocketLocationWS_LocationWS) == 0x000004, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateParticleSystemPosition::CallFunc_GetSocketLocationWS_LocationWS' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateParticleSystemPosition, CallFunc_GetSocketLocationWS_Skeletal_Mesh_InValid) == 0x000010, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateParticleSystemPosition::CallFunc_GetSocketLocationWS_Skeletal_Mesh_InValid' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateParticleSystemPosition, CallFunc_GetSocketLocationWS_Socket_Invalid) == 0x000011, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateParticleSystemPosition::CallFunc_GetSocketLocationWS_Socket_Invalid' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateParticleSystemPosition, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000018, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateParticleSystemPosition::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.RollSplineMesh
// 0x0054 (0x0054 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_RollSplineMesh final
{
public:
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue1;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item1;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue1;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select1_Default;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue1;                      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_RollSplineMesh) == 0x000004, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_RollSplineMesh");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_RollSplineMesh) == 0x000054, "Wrong size on BP_SplineVolumeTrail_v1b_C_RollSplineMesh");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RollSplineMesh, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_RollSplineMesh::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RollSplineMesh, Temp_bool_Variable) == 0x000004, "Member 'BP_SplineVolumeTrail_v1b_C_RollSplineMesh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RollSplineMesh, CallFunc_GetGameTimeInSeconds_ReturnValue1) == 0x000008, "Member 'BP_SplineVolumeTrail_v1b_C_RollSplineMesh::CallFunc_GetGameTimeInSeconds_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RollSplineMesh, Temp_bool_Variable1) == 0x00000C, "Member 'BP_SplineVolumeTrail_v1b_C_RollSplineMesh::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RollSplineMesh, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'BP_SplineVolumeTrail_v1b_C_RollSplineMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RollSplineMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_SplineVolumeTrail_v1b_C_RollSplineMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RollSplineMesh, CallFunc_Array_Get_Item) == 0x000014, "Member 'BP_SplineVolumeTrail_v1b_C_RollSplineMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RollSplineMesh, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000018, "Member 'BP_SplineVolumeTrail_v1b_C_RollSplineMesh::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RollSplineMesh, K2Node_Select_Default) == 0x00001C, "Member 'BP_SplineVolumeTrail_v1b_C_RollSplineMesh::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RollSplineMesh, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_SplineVolumeTrail_v1b_C_RollSplineMesh::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RollSplineMesh, CallFunc_Array_Get_Item1) == 0x000024, "Member 'BP_SplineVolumeTrail_v1b_C_RollSplineMesh::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RollSplineMesh, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_SplineVolumeTrail_v1b_C_RollSplineMesh::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RollSplineMesh, CallFunc_Array_IsValidIndex_ReturnValue1) == 0x00002C, "Member 'BP_SplineVolumeTrail_v1b_C_RollSplineMesh::CallFunc_Array_IsValidIndex_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RollSplineMesh, CallFunc_FClamp_ReturnValue) == 0x000030, "Member 'BP_SplineVolumeTrail_v1b_C_RollSplineMesh::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RollSplineMesh, CallFunc_GetFloatValue_ReturnValue) == 0x000034, "Member 'BP_SplineVolumeTrail_v1b_C_RollSplineMesh::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RollSplineMesh, K2Node_Select1_Default) == 0x000038, "Member 'BP_SplineVolumeTrail_v1b_C_RollSplineMesh::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RollSplineMesh, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_SplineVolumeTrail_v1b_C_RollSplineMesh::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RollSplineMesh, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000040, "Member 'BP_SplineVolumeTrail_v1b_C_RollSplineMesh::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RollSplineMesh, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x000044, "Member 'BP_SplineVolumeTrail_v1b_C_RollSplineMesh::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RollSplineMesh, CallFunc_FClamp_ReturnValue1) == 0x000048, "Member 'BP_SplineVolumeTrail_v1b_C_RollSplineMesh::CallFunc_FClamp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RollSplineMesh, CallFunc_GetFloatValue_ReturnValue1) == 0x00004C, "Member 'BP_SplineVolumeTrail_v1b_C_RollSplineMesh::CallFunc_GetFloatValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RollSplineMesh, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000050, "Member 'BP_SplineVolumeTrail_v1b_C_RollSplineMesh::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.SetForwardAxisOnSplineMesh
// 0x0010 (0x0010 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_SetForwardAxisOnSplineMesh final
{
public:
	class USplineMeshComponent*                   SplineMesh;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_SetForwardAxisOnSplineMesh) == 0x000008, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_SetForwardAxisOnSplineMesh");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_SetForwardAxisOnSplineMesh) == 0x000010, "Wrong size on BP_SplineVolumeTrail_v1b_C_SetForwardAxisOnSplineMesh");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SetForwardAxisOnSplineMesh, SplineMesh) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_SetForwardAxisOnSplineMesh::SplineMesh' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SetForwardAxisOnSplineMesh, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'BP_SplineVolumeTrail_v1b_C_SetForwardAxisOnSplineMesh::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.SetNewSplinePointsBool
// 0x0001 (0x0001 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_SetNewSplinePointsBool final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_SetNewSplinePointsBool) == 0x000001, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_SetNewSplinePointsBool");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_SetNewSplinePointsBool) == 0x000001, "Wrong size on BP_SplineVolumeTrail_v1b_C_SetNewSplinePointsBool");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SetNewSplinePointsBool, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_SetNewSplinePointsBool::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.AddSplineDistanceCheck
// 0x0048 (0x0048 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue1;    // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck) == 0x000004, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck) == 0x000048, "Wrong size on BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck, ReturnValue) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck, Temp_bool_Variable) == 0x000001, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck, K2Node_Select_Default) == 0x00000C, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000010, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck, CallFunc_Subtract_IntInt_ReturnValue1) == 0x000018, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x00001C, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck, CallFunc_GetLocationAtSplinePoint_ReturnValue1) == 0x000028, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck::CallFunc_GetLocationAtSplinePoint_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000034, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck, CallFunc_VSize_ReturnValue) == 0x000040, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck, CallFunc_BooleanAND_ReturnValue) == 0x000045, "Member 'BP_SplineVolumeTrail_v1b_C_AddSplineDistanceCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.SetWasRecentlyRendered
// 0x0004 (0x0004 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_SetWasRecentlyRendered final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_WasRecentlyRendered_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_SetWasRecentlyRendered) == 0x000001, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_SetWasRecentlyRendered");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_SetWasRecentlyRendered) == 0x000004, "Wrong size on BP_SplineVolumeTrail_v1b_C_SetWasRecentlyRendered");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SetWasRecentlyRendered, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_SetWasRecentlyRendered::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SetWasRecentlyRendered, CallFunc_WasRecentlyRendered_ReturnValue) == 0x000001, "Member 'BP_SplineVolumeTrail_v1b_C_SetWasRecentlyRendered::CallFunc_WasRecentlyRendered_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SetWasRecentlyRendered, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'BP_SplineVolumeTrail_v1b_C_SetWasRecentlyRendered::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SetWasRecentlyRendered, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_SplineVolumeTrail_v1b_C_SetWasRecentlyRendered::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.TickIntervalLODCheck
// 0x0088 (0x0088 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocationWS_LocationWS;           // 0x0004(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSocketLocationWS_Skeletal_Mesh_InValid; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSocketLocationWS_Socket_Invalid;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Array_Get_Item1;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item12;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue1;             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue1;            // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_Select_Default;                             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item123;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue12;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue12;                 // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck) == 0x000008, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck) == 0x000088, "Wrong size on BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, Temp_bool_Variable) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, Temp_bool_Variable1) == 0x000001, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_GetSocketLocationWS_LocationWS) == 0x000004, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_GetSocketLocationWS_LocationWS' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_GetSocketLocationWS_Skeletal_Mesh_InValid) == 0x000010, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_GetSocketLocationWS_Skeletal_Mesh_InValid' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_GetSocketLocationWS_Socket_Invalid) == 0x000011, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_GetSocketLocationWS_Socket_Invalid' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000018, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, Temp_int_Variable) == 0x000020, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_VSize_ReturnValue) == 0x00003C, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_Array_LastIndex_ReturnValue) == 0x000044, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004C, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000050, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_Add_IntInt_ReturnValue1) == 0x000058, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_BooleanAND_ReturnValue) == 0x00005C, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_Array_Get_Item1) == 0x000060, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_Array_Get_Item12) == 0x000064, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_Array_Get_Item12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x000068, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_Array_LastIndex_ReturnValue1) == 0x00006C, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_Array_LastIndex_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000070, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000071, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_LessEqual_IntInt_ReturnValue1) == 0x000072, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_LessEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_BooleanAND_ReturnValue1) == 0x000073, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, K2Node_Select_Default) == 0x000074, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_Array_Get_Item123) == 0x000078, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_Array_Get_Item123' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_Conv_IntToFloat_ReturnValue12) == 0x00007C, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_Conv_IntToFloat_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000080, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_BooleanAND_ReturnValue12) == 0x000081, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_BooleanAND_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck, CallFunc_BooleanOR_ReturnValue) == 0x000082, "Member 'BP_SplineVolumeTrail_v1b_C_TickIntervalLODCheck::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.GetLinearColorFromCurveAtTime
// 0x0058 (0x0058 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime final
{
public:
	class UCurveLinearColor*                      Curve_Linear_Color;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LinearColorOut;                                    // 0x000C(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue;          // 0x0048(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime) == 0x000008, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime) == 0x000058, "Wrong size on BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime, Curve_Linear_Color) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime::Curve_Linear_Color' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime, Index_0) == 0x000008, "Member 'BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime::Index_0' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime, LinearColorOut) == 0x00000C, "Member 'BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime::LinearColorOut' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime, Temp_bool_Variable) == 0x00001C, "Member 'BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000020, "Member 'BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000024, "Member 'BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x000030, "Member 'BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000034, "Member 'BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x000040, "Member 'BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime, K2Node_Select_Default) == 0x000044, "Member 'BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime, CallFunc_GetLinearColorValue_ReturnValue) == 0x000048, "Member 'BP_SplineVolumeTrail_v1b_C_GetLinearColorFromCurveAtTime::CallFunc_GetLinearColorValue_ReturnValue' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.RedistributePointsAlongSpline
// 0x0048 (0x0048 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtTime_ReturnValue;            // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline) == 0x000004, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline) == 0x000048, "Wrong size on BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline, Temp_int_Variable) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000008, "Member 'BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x00000C, "Member 'BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x000020, "Member 'BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline, CallFunc_GetLocationAtTime_ReturnValue) == 0x000030, "Member 'BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline::CallFunc_GetLocationAtTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline, CallFunc_VLerp_ReturnValue) == 0x00003C, "Member 'BP_SplineVolumeTrail_v1b_C_RedistributePointsAlongSpline::CallFunc_VLerp_ReturnValue' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.SplineUpdateOnTick
// 0x0080 (0x0080 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0034(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue1;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddSplineDistanceCheck_ReturnValue;       // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable1;                                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_Array_Get_Item1;                          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_Array_Get_Item12;                         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick) == 0x000008, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick) == 0x000080, "Wrong size on BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, CallFunc_IsDedicatedServer_ReturnValue) == 0x00000C, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, CallFunc_Array_LastIndex_ReturnValue) == 0x000010, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000014, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000028, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000034, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, Temp_int_Variable) == 0x000044, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, CallFunc_Add_IntInt_ReturnValue1) == 0x000048, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, CallFunc_Array_LastIndex_ReturnValue1) == 0x00004C, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::CallFunc_Array_LastIndex_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, CallFunc_Subtract_IntInt_ReturnValue1) == 0x000054, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000058, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, CallFunc_AddSplineDistanceCheck_ReturnValue) == 0x000059, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::CallFunc_AddSplineDistanceCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, Temp_int_Variable1) == 0x00005C, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, CallFunc_Array_Get_Item1) == 0x000060, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, CallFunc_Array_Get_Item12) == 0x000068, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::CallFunc_Array_Get_Item12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, Temp_bool_Variable) == 0x000075, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick, K2Node_Select_Default) == 0x000078, "Member 'BP_SplineVolumeTrail_v1b_C_SplineUpdateOnTick::K2Node_Select_Default' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.ReturnSplineMeshToPool
// 0x0010 (0x0010 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_ReturnSplineMeshToPool final
{
public:
	class USplineMeshComponent*                   SplineMesh;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IndexToRemove;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_ReturnSplineMeshToPool) == 0x000008, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_ReturnSplineMeshToPool");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_ReturnSplineMeshToPool) == 0x000010, "Wrong size on BP_SplineVolumeTrail_v1b_C_ReturnSplineMeshToPool");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ReturnSplineMeshToPool, SplineMesh) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_ReturnSplineMeshToPool::SplineMesh' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ReturnSplineMeshToPool, IndexToRemove) == 0x000008, "Member 'BP_SplineVolumeTrail_v1b_C_ReturnSplineMeshToPool::IndexToRemove' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_ReturnSplineMeshToPool, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'BP_SplineVolumeTrail_v1b_C_ReturnSplineMeshToPool::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.BakeLinearColor
// 0x0058 (0x0058 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_BakeLinearColor final
{
public:
	class UCurveLinearColor*                      Curve_Linear_Color;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Pixel__X_;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LinearColorOut;                                    // 0x000C(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue;          // 0x0034(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0048(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_BakeLinearColor) == 0x000008, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_BakeLinearColor");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_BakeLinearColor) == 0x000058, "Wrong size on BP_SplineVolumeTrail_v1b_C_BakeLinearColor");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_BakeLinearColor, Curve_Linear_Color) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_BakeLinearColor::Curve_Linear_Color' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_BakeLinearColor, Pixel__X_) == 0x000008, "Member 'BP_SplineVolumeTrail_v1b_C_BakeLinearColor::Pixel__X_' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_BakeLinearColor, LinearColorOut) == 0x00000C, "Member 'BP_SplineVolumeTrail_v1b_C_BakeLinearColor::LinearColorOut' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_BakeLinearColor, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00001C, "Member 'BP_SplineVolumeTrail_v1b_C_BakeLinearColor::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_BakeLinearColor, CallFunc_BreakVector2D_X) == 0x000020, "Member 'BP_SplineVolumeTrail_v1b_C_BakeLinearColor::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_BakeLinearColor, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'BP_SplineVolumeTrail_v1b_C_BakeLinearColor::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_BakeLinearColor, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_SplineVolumeTrail_v1b_C_BakeLinearColor::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_BakeLinearColor, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x00002C, "Member 'BP_SplineVolumeTrail_v1b_C_BakeLinearColor::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_BakeLinearColor, CallFunc_Add_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_SplineVolumeTrail_v1b_C_BakeLinearColor::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_BakeLinearColor, CallFunc_GetLinearColorValue_ReturnValue) == 0x000034, "Member 'BP_SplineVolumeTrail_v1b_C_BakeLinearColor::CallFunc_GetLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_BakeLinearColor, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_SplineVolumeTrail_v1b_C_BakeLinearColor::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_BakeLinearColor, K2Node_MakeStruct_LinearColor) == 0x000048, "Member 'BP_SplineVolumeTrail_v1b_C_BakeLinearColor::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.DestroyAllSplineMeshes
// 0x0040 (0x0040 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item1;                          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes) == 0x000008, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes) == 0x000040, "Wrong size on BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes, Temp_int_Loop_Counter_Variable1) == 0x00000C, "Member 'BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes, CallFunc_Add_IntInt_ReturnValue1) == 0x000010, "Member 'BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes, Temp_int_Array_Index_Variable1) == 0x000014, "Member 'BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes, CallFunc_IsValid_ReturnValue) == 0x000025, "Member 'BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes, CallFunc_Array_Length_ReturnValue1) == 0x000028, "Member 'BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes, CallFunc_Array_Get_Item1) == 0x000030, "Member 'BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes, CallFunc_Less_IntInt_ReturnValue1) == 0x000038, "Member 'BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes, CallFunc_IsValid_ReturnValue1) == 0x000039, "Member 'BP_SplineVolumeTrail_v1b_C_DestroyAllSplineMeshes::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.SetStartAndEndAllSplineMeshes
// 0x0028 (0x0028 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_SetStartAndEndAllSplineMeshes final
{
public:
	bool                                          Update_All_Spline_Meshes;                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_SetStartAndEndAllSplineMeshes) == 0x000008, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_SetStartAndEndAllSplineMeshes");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_SetStartAndEndAllSplineMeshes) == 0x000028, "Wrong size on BP_SplineVolumeTrail_v1b_C_SetStartAndEndAllSplineMeshes");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SetStartAndEndAllSplineMeshes, Update_All_Spline_Meshes) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_SetStartAndEndAllSplineMeshes::Update_All_Spline_Meshes' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SetStartAndEndAllSplineMeshes, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SplineVolumeTrail_v1b_C_SetStartAndEndAllSplineMeshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SetStartAndEndAllSplineMeshes, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_SplineVolumeTrail_v1b_C_SetStartAndEndAllSplineMeshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SetStartAndEndAllSplineMeshes, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SplineVolumeTrail_v1b_C_SetStartAndEndAllSplineMeshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SetStartAndEndAllSplineMeshes, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_SplineVolumeTrail_v1b_C_SetStartAndEndAllSplineMeshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SetStartAndEndAllSplineMeshes, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_SplineVolumeTrail_v1b_C_SetStartAndEndAllSplineMeshes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_SetStartAndEndAllSplineMeshes, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_SplineVolumeTrail_v1b_C_SetStartAndEndAllSplineMeshes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.GetSocketLocationWS
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) BP_SplineVolumeTrail_v1b_C_GetSocketLocationWS final
{
public:
	class FName                                   Socket_Name;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocationWS;                                        // 0x0008(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Skeletal_Mesh_InValid;                             // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Socket_Invalid;                                    // 0x0015(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_GetSocketLocationWS) == 0x000008, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_GetSocketLocationWS");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_GetSocketLocationWS) == 0x000028, "Wrong size on BP_SplineVolumeTrail_v1b_C_GetSocketLocationWS");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_GetSocketLocationWS, Socket_Name) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_GetSocketLocationWS::Socket_Name' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_GetSocketLocationWS, LocationWS) == 0x000008, "Member 'BP_SplineVolumeTrail_v1b_C_GetSocketLocationWS::LocationWS' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_GetSocketLocationWS, Skeletal_Mesh_InValid) == 0x000014, "Member 'BP_SplineVolumeTrail_v1b_C_GetSocketLocationWS::Skeletal_Mesh_InValid' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_GetSocketLocationWS, Socket_Invalid) == 0x000015, "Member 'BP_SplineVolumeTrail_v1b_C_GetSocketLocationWS::Socket_Invalid' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_GetSocketLocationWS, CallFunc_GetSocketLocation_ReturnValue) == 0x000018, "Member 'BP_SplineVolumeTrail_v1b_C_GetSocketLocationWS::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_GetSocketLocationWS, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_SplineVolumeTrail_v1b_C_GetSocketLocationWS::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_GetSocketLocationWS, CallFunc_DoesSocketExist_ReturnValue) == 0x000025, "Member 'BP_SplineVolumeTrail_v1b_C_GetSocketLocationWS::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");

// Function BP_SplineVolumeTrail_v1b.BP_SplineVolumeTrail_v1b_C.UpdateCheapSplinesWPOVectors
// 0x0080 (0x0080 - 0x0000)
struct BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue12;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue12;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue1;    // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0048(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue1;    // 0x0058(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors) == 0x000008, "Wrong alignment on BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors");
static_assert(sizeof(BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors) == 0x000080, "Wrong size on BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors, CallFunc_Add_IntInt_ReturnValue1) == 0x00000C, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x000014, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors, CallFunc_Add_IntInt_ReturnValue12) == 0x000018, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors::CallFunc_Add_IntInt_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x00001C, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors, CallFunc_Conv_IntToFloat_ReturnValue12) == 0x000024, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors::CallFunc_Conv_IntToFloat_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x00002C, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000030, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors, CallFunc_GetLocationAtSplinePoint_ReturnValue1) == 0x00003C, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors::CallFunc_GetLocationAtSplinePoint_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000048, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors, CallFunc_Conv_VectorToLinearColor_ReturnValue1) == 0x000058, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors::CallFunc_Conv_VectorToLinearColor_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_SplineVolumeTrail_v1b_C_UpdateCheapSplinesWPOVectors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}


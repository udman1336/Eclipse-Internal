#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAB_SurvivorLockInPlace

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GAB_SurvivorLockInPlace.GAB_SurvivorLockInPlace_C
// 0x0050 (0x0B38 - 0x0AE8)
class UGAB_SurvivorLockInPlace_C final : public UFortGameplayAbility
{
public:
	uint8                                         Pad_AE8[0x8];                                      // 0x0AE8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AF0(0x0008)(Transient, DuplicateTransient)
	struct FGameplayTag                           TC_NPCAbilityNonAttackLockInPlaceTrue;             // 0x0AF8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TC_NPCAbilityNonAttackLockInPlaceFalse;            // 0x0B00(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TC_NPCAbilityNonAttackLockInPlaceIndefiniteTrue;   // 0x0B08(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TC_NPCAbilityNonAttackLockInPlaceIndefiniteFalse;  // 0x0B10(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          LockIndefinitely;                                  // 0x0B18(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B19[0x7];                                      // 0x0B19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GE_SurvivorLockInPlace;                            // 0x0B20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            GE_SurvivorLockInPlaceHandel;                      // 0x0B28(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 FocalPoint;                                        // 0x0B30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GAB_SurvivorLockInPlace(int32 EntryPoint);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GAB_SurvivorLockInPlace_C">();
	}
	static class UGAB_SurvivorLockInPlace_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGAB_SurvivorLockInPlace_C>();
	}
};
static_assert(alignof(UGAB_SurvivorLockInPlace_C) == 0x000008, "Wrong alignment on UGAB_SurvivorLockInPlace_C");
static_assert(sizeof(UGAB_SurvivorLockInPlace_C) == 0x000B38, "Wrong size on UGAB_SurvivorLockInPlace_C");
static_assert(offsetof(UGAB_SurvivorLockInPlace_C, UberGraphFrame) == 0x000AF0, "Member 'UGAB_SurvivorLockInPlace_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorLockInPlace_C, TC_NPCAbilityNonAttackLockInPlaceTrue) == 0x000AF8, "Member 'UGAB_SurvivorLockInPlace_C::TC_NPCAbilityNonAttackLockInPlaceTrue' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorLockInPlace_C, TC_NPCAbilityNonAttackLockInPlaceFalse) == 0x000B00, "Member 'UGAB_SurvivorLockInPlace_C::TC_NPCAbilityNonAttackLockInPlaceFalse' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorLockInPlace_C, TC_NPCAbilityNonAttackLockInPlaceIndefiniteTrue) == 0x000B08, "Member 'UGAB_SurvivorLockInPlace_C::TC_NPCAbilityNonAttackLockInPlaceIndefiniteTrue' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorLockInPlace_C, TC_NPCAbilityNonAttackLockInPlaceIndefiniteFalse) == 0x000B10, "Member 'UGAB_SurvivorLockInPlace_C::TC_NPCAbilityNonAttackLockInPlaceIndefiniteFalse' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorLockInPlace_C, LockIndefinitely) == 0x000B18, "Member 'UGAB_SurvivorLockInPlace_C::LockIndefinitely' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorLockInPlace_C, GE_SurvivorLockInPlace) == 0x000B20, "Member 'UGAB_SurvivorLockInPlace_C::GE_SurvivorLockInPlace' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorLockInPlace_C, GE_SurvivorLockInPlaceHandel) == 0x000B28, "Member 'UGAB_SurvivorLockInPlace_C::GE_SurvivorLockInPlaceHandel' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorLockInPlace_C, FocalPoint) == 0x000B30, "Member 'UGAB_SurvivorLockInPlace_C::FocalPoint' has a wrong offset!");

}


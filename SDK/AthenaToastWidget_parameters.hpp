#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaToastWidget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AthenaToastWidget.AthenaToastWidget_C.ExecuteUbergraph_AthenaToastWidget
// 0x0158 (0x0158 - 0x0000)
struct AthenaToastWidget_C_ExecuteUbergraph_AthenaToastWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate12;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0038(0x0008)(NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0040(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent1;                          // 0x0078(0x0070)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00E8(0x0070)(ConstParm)
};
static_assert(alignof(AthenaToastWidget_C_ExecuteUbergraph_AthenaToastWidget) == 0x000008, "Wrong alignment on AthenaToastWidget_C_ExecuteUbergraph_AthenaToastWidget");
static_assert(sizeof(AthenaToastWidget_C_ExecuteUbergraph_AthenaToastWidget) == 0x000158, "Wrong size on AthenaToastWidget_C_ExecuteUbergraph_AthenaToastWidget");
static_assert(offsetof(AthenaToastWidget_C_ExecuteUbergraph_AthenaToastWidget, EntryPoint) == 0x000000, "Member 'AthenaToastWidget_C_ExecuteUbergraph_AthenaToastWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaToastWidget_C_ExecuteUbergraph_AthenaToastWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'AthenaToastWidget_C_ExecuteUbergraph_AthenaToastWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AthenaToastWidget_C_ExecuteUbergraph_AthenaToastWidget, K2Node_CreateDelegate_OutputDelegate1) == 0x000018, "Member 'AthenaToastWidget_C_ExecuteUbergraph_AthenaToastWidget::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(AthenaToastWidget_C_ExecuteUbergraph_AthenaToastWidget, K2Node_CreateDelegate_OutputDelegate12) == 0x000028, "Member 'AthenaToastWidget_C_ExecuteUbergraph_AthenaToastWidget::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(AthenaToastWidget_C_ExecuteUbergraph_AthenaToastWidget, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000038, "Member 'AthenaToastWidget_C_ExecuteUbergraph_AthenaToastWidget::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaToastWidget_C_ExecuteUbergraph_AthenaToastWidget, K2Node_Event_MyGeometry) == 0x000040, "Member 'AthenaToastWidget_C_ExecuteUbergraph_AthenaToastWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaToastWidget_C_ExecuteUbergraph_AthenaToastWidget, K2Node_Event_MouseEvent1) == 0x000078, "Member 'AthenaToastWidget_C_ExecuteUbergraph_AthenaToastWidget::K2Node_Event_MouseEvent1' has a wrong offset!");
static_assert(offsetof(AthenaToastWidget_C_ExecuteUbergraph_AthenaToastWidget, K2Node_Event_MouseEvent) == 0x0000E8, "Member 'AthenaToastWidget_C_ExecuteUbergraph_AthenaToastWidget::K2Node_Event_MouseEvent' has a wrong offset!");

// Function AthenaToastWidget.AthenaToastWidget_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct AthenaToastWidget_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AthenaToastWidget_C_OnMouseLeave) == 0x000008, "Wrong alignment on AthenaToastWidget_C_OnMouseLeave");
static_assert(sizeof(AthenaToastWidget_C_OnMouseLeave) == 0x000070, "Wrong size on AthenaToastWidget_C_OnMouseLeave");
static_assert(offsetof(AthenaToastWidget_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'AthenaToastWidget_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function AthenaToastWidget.AthenaToastWidget_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct AthenaToastWidget_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AthenaToastWidget_C_OnMouseEnter) == 0x000008, "Wrong alignment on AthenaToastWidget_C_OnMouseEnter");
static_assert(sizeof(AthenaToastWidget_C_OnMouseEnter) == 0x0000A8, "Wrong size on AthenaToastWidget_C_OnMouseEnter");
static_assert(offsetof(AthenaToastWidget_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'AthenaToastWidget_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaToastWidget_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'AthenaToastWidget_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function AthenaToastWidget.AthenaToastWidget_C.SetToast
// 0x0030 (0x0030 - 0x0000)
struct AthenaToastWidget_C_SetToast final
{
public:
	class FText                                   Title_0;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Description_0;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(AthenaToastWidget_C_SetToast) == 0x000008, "Wrong alignment on AthenaToastWidget_C_SetToast");
static_assert(sizeof(AthenaToastWidget_C_SetToast) == 0x000030, "Wrong size on AthenaToastWidget_C_SetToast");
static_assert(offsetof(AthenaToastWidget_C_SetToast, Title_0) == 0x000000, "Member 'AthenaToastWidget_C_SetToast::Title_0' has a wrong offset!");
static_assert(offsetof(AthenaToastWidget_C_SetToast, Description_0) == 0x000018, "Member 'AthenaToastWidget_C_SetToast::Description_0' has a wrong offset!");

// Function AthenaToastWidget.AthenaToastWidget_C.ShowText
// 0x0048 (0x0048 - 0x0000)
struct AthenaToastWidget_C_ShowText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UCommonTextBlock*                       TextBlock;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       LocalTextBlock;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   LocalText;                                         // 0x0028(0x0018)(Edit, BlueprintVisible)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaToastWidget_C_ShowText) == 0x000008, "Wrong alignment on AthenaToastWidget_C_ShowText");
static_assert(sizeof(AthenaToastWidget_C_ShowText) == 0x000048, "Wrong size on AthenaToastWidget_C_ShowText");
static_assert(offsetof(AthenaToastWidget_C_ShowText, Text) == 0x000000, "Member 'AthenaToastWidget_C_ShowText::Text' has a wrong offset!");
static_assert(offsetof(AthenaToastWidget_C_ShowText, TextBlock) == 0x000018, "Member 'AthenaToastWidget_C_ShowText::TextBlock' has a wrong offset!");
static_assert(offsetof(AthenaToastWidget_C_ShowText, LocalTextBlock) == 0x000020, "Member 'AthenaToastWidget_C_ShowText::LocalTextBlock' has a wrong offset!");
static_assert(offsetof(AthenaToastWidget_C_ShowText, LocalText) == 0x000028, "Member 'AthenaToastWidget_C_ShowText::LocalText' has a wrong offset!");
static_assert(offsetof(AthenaToastWidget_C_ShowText, CallFunc_TextIsEmpty_ReturnValue) == 0x000040, "Member 'AthenaToastWidget_C_ShowText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

}


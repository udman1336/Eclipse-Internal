#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemReceived_Base

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ItemReceived_Base.ItemReceived_Base_C
// 0x0090 (0x0530 - 0x04A0)
class UItemReceived_Base_C final : public UFortItemReceivedWidgetBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04A0(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Intro;                                             // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_BattlePassUnlockAnim_C*             BP_BattlePassUnlockAnim;                           // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      CloseButton;                                       // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      EquipButton;                                       // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortItemTileView*                      FortItemTileView_0;                                // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBoxActions;                              // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageRarityFlare;                                  // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UItemInfoWidget_C*                      ItemInfoWidget;                                    // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           LeftContainer;                                     // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         ItemSelectionIndex;                                // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x04F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RolloutTime;                                       // 0x04F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndexCached;                              // 0x04FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          B;                                                 // 0x0500(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   FinalOnGiftingComplete;                            // 0x0508(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          NewVar_0;                                          // 0x0518(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_519[0x3];                                      // 0x0519(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentUserSelectedIndex;                          // 0x051C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsBattlePassUpgrade;                              // 0x0520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             SoundOnItemReceived;                               // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ItemReceived_Base(int32 EntryPoint);
	void OnBattlepassAnimFinished();
	void Play_BattlePass_Upgrade_Anim();
	void Rollout_Items_Received();
	void Check_if_Battlepass_upgrade();
	void OnInputModeChanged(bool bUsingGamepad);
	void BndEvt__EquipButton_K2Node_ComponentBoundEvent_193_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void Construct();
	void CustomEvent_0();
	void BndEvt__PurchaseButton_K2Node_ComponentBoundEvent_66_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void OnActivated();
	void OnGiftBoxItemSet();
	void SelectItem(int32 Index_0, bool CenterWidget);
	void UpdateRarityFlare();
	void Left();
	void Right();
	void AnimateRollout();
	void PreConstruct(bool IsDesignTime);
	void HandleBack(bool* Passthrough);
	void UpdateFromItemReceivedInfo(const struct FFortReceivedItemLootInfo& Loot, bool Select);
	class UItemCardWidget_C* AddItemCard(const struct FFortReceivedItemLootInfo& NewParam);
	void UpdateFromHoverState(const struct FFortReceivedItemLootInfo& Loot);
	void HandleLeft(EUINavigation Navigation_Enum, class UWidget** NewParam);
	void HandleRight(EUINavigation Nav_Enum, class UWidget** NewParam);
	void HandleSelectionIncrement(bool Increment, int32* Index_0);
	void Clicked(class UCommonButton* NewParam);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ItemReceived_Base_C">();
	}
	static class UItemReceived_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemReceived_Base_C>();
	}
};
static_assert(alignof(UItemReceived_Base_C) == 0x000008, "Wrong alignment on UItemReceived_Base_C");
static_assert(sizeof(UItemReceived_Base_C) == 0x000530, "Wrong size on UItemReceived_Base_C");
static_assert(offsetof(UItemReceived_Base_C, UberGraphFrame) == 0x0004A0, "Member 'UItemReceived_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UItemReceived_Base_C, Intro) == 0x0004A8, "Member 'UItemReceived_Base_C::Intro' has a wrong offset!");
static_assert(offsetof(UItemReceived_Base_C, BP_BattlePassUnlockAnim) == 0x0004B0, "Member 'UItemReceived_Base_C::BP_BattlePassUnlockAnim' has a wrong offset!");
static_assert(offsetof(UItemReceived_Base_C, CloseButton) == 0x0004B8, "Member 'UItemReceived_Base_C::CloseButton' has a wrong offset!");
static_assert(offsetof(UItemReceived_Base_C, EquipButton) == 0x0004C0, "Member 'UItemReceived_Base_C::EquipButton' has a wrong offset!");
static_assert(offsetof(UItemReceived_Base_C, FortItemTileView_0) == 0x0004C8, "Member 'UItemReceived_Base_C::FortItemTileView_0' has a wrong offset!");
static_assert(offsetof(UItemReceived_Base_C, HorizontalBoxActions) == 0x0004D0, "Member 'UItemReceived_Base_C::HorizontalBoxActions' has a wrong offset!");
static_assert(offsetof(UItemReceived_Base_C, ImageRarityFlare) == 0x0004D8, "Member 'UItemReceived_Base_C::ImageRarityFlare' has a wrong offset!");
static_assert(offsetof(UItemReceived_Base_C, ItemInfoWidget) == 0x0004E0, "Member 'UItemReceived_Base_C::ItemInfoWidget' has a wrong offset!");
static_assert(offsetof(UItemReceived_Base_C, LeftContainer) == 0x0004E8, "Member 'UItemReceived_Base_C::LeftContainer' has a wrong offset!");
static_assert(offsetof(UItemReceived_Base_C, ItemSelectionIndex) == 0x0004F0, "Member 'UItemReceived_Base_C::ItemSelectionIndex' has a wrong offset!");
static_assert(offsetof(UItemReceived_Base_C, AnimationIndex) == 0x0004F4, "Member 'UItemReceived_Base_C::AnimationIndex' has a wrong offset!");
static_assert(offsetof(UItemReceived_Base_C, RolloutTime) == 0x0004F8, "Member 'UItemReceived_Base_C::RolloutTime' has a wrong offset!");
static_assert(offsetof(UItemReceived_Base_C, AnimationIndexCached) == 0x0004FC, "Member 'UItemReceived_Base_C::AnimationIndexCached' has a wrong offset!");
static_assert(offsetof(UItemReceived_Base_C, B) == 0x000500, "Member 'UItemReceived_Base_C::B' has a wrong offset!");
static_assert(offsetof(UItemReceived_Base_C, FinalOnGiftingComplete) == 0x000508, "Member 'UItemReceived_Base_C::FinalOnGiftingComplete' has a wrong offset!");
static_assert(offsetof(UItemReceived_Base_C, NewVar_0) == 0x000518, "Member 'UItemReceived_Base_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UItemReceived_Base_C, CurrentUserSelectedIndex) == 0x00051C, "Member 'UItemReceived_Base_C::CurrentUserSelectedIndex' has a wrong offset!");
static_assert(offsetof(UItemReceived_Base_C, bIsBattlePassUpgrade) == 0x000520, "Member 'UItemReceived_Base_C::bIsBattlePassUpgrade' has a wrong offset!");
static_assert(offsetof(UItemReceived_Base_C, SoundOnItemReceived) == 0x000528, "Member 'UItemReceived_Base_C::SoundOnItemReceived' has a wrong offset!");

}


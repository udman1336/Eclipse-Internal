#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SK_AssassinGlider_Parts_Skeleton_AnimBP

#include "Basic.hpp"


namespace SDK::Params
{

// Function SK_AssassinGlider_Parts_Skeleton_AnimBP.SK_AssassinGlider_Parts_Skeleton_AnimBP_C.ExecuteUbergraph_SK_AssassinGlider_Parts_Skeleton_AnimBP
// 0x0020 (0x0020 - 0x0000)
struct SK_AssassinGlider_Parts_Skeleton_AnimBP_C_ExecuteUbergraph_SK_AssassinGlider_Parts_Skeleton_AnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Glider_Assassin_C*                   K2Node_DynamicCast_AsB_Glider_Assassin;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SK_AssassinGlider_Parts_Skeleton_AnimBP_C_ExecuteUbergraph_SK_AssassinGlider_Parts_Skeleton_AnimBP) == 0x000008, "Wrong alignment on SK_AssassinGlider_Parts_Skeleton_AnimBP_C_ExecuteUbergraph_SK_AssassinGlider_Parts_Skeleton_AnimBP");
static_assert(sizeof(SK_AssassinGlider_Parts_Skeleton_AnimBP_C_ExecuteUbergraph_SK_AssassinGlider_Parts_Skeleton_AnimBP) == 0x000020, "Wrong size on SK_AssassinGlider_Parts_Skeleton_AnimBP_C_ExecuteUbergraph_SK_AssassinGlider_Parts_Skeleton_AnimBP");
static_assert(offsetof(SK_AssassinGlider_Parts_Skeleton_AnimBP_C_ExecuteUbergraph_SK_AssassinGlider_Parts_Skeleton_AnimBP, EntryPoint) == 0x000000, "Member 'SK_AssassinGlider_Parts_Skeleton_AnimBP_C_ExecuteUbergraph_SK_AssassinGlider_Parts_Skeleton_AnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(SK_AssassinGlider_Parts_Skeleton_AnimBP_C_ExecuteUbergraph_SK_AssassinGlider_Parts_Skeleton_AnimBP, CallFunc_GetOwningActor_ReturnValue) == 0x000008, "Member 'SK_AssassinGlider_Parts_Skeleton_AnimBP_C_ExecuteUbergraph_SK_AssassinGlider_Parts_Skeleton_AnimBP::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(SK_AssassinGlider_Parts_Skeleton_AnimBP_C_ExecuteUbergraph_SK_AssassinGlider_Parts_Skeleton_AnimBP, K2Node_DynamicCast_AsB_Glider_Assassin) == 0x000010, "Member 'SK_AssassinGlider_Parts_Skeleton_AnimBP_C_ExecuteUbergraph_SK_AssassinGlider_Parts_Skeleton_AnimBP::K2Node_DynamicCast_AsB_Glider_Assassin' has a wrong offset!");
static_assert(offsetof(SK_AssassinGlider_Parts_Skeleton_AnimBP_C_ExecuteUbergraph_SK_AssassinGlider_Parts_Skeleton_AnimBP, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'SK_AssassinGlider_Parts_Skeleton_AnimBP_C_ExecuteUbergraph_SK_AssassinGlider_Parts_Skeleton_AnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


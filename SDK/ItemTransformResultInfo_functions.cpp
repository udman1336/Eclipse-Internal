#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemTransformResultInfo

#include "Basic.hpp"

#include "ItemTransformResultInfo_classes.hpp"
#include "ItemTransformResultInfo_parameters.hpp"


namespace SDK
{

// Function ItemTransformResultInfo.ItemTransformResultInfo_C.ExecuteUbergraph_ItemTransformResultInfo
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemTransformResultInfo_C::ExecuteUbergraph_ItemTransformResultInfo(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTransformResultInfo_C", "ExecuteUbergraph_ItemTransformResultInfo");

	Params::ItemTransformResultInfo_C_ExecuteUbergraph_ItemTransformResultInfo Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemTransformResultInfo.ItemTransformResultInfo_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UItemTransformResultInfo_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTransformResultInfo_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTransformResultInfo.ItemTransformResultInfo_C.BndEvt__TransformButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButton*                    Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemTransformResultInfo_C::BndEvt__TransformButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature(class UCommonButton* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTransformResultInfo_C", "BndEvt__TransformButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature");

	Params::ItemTransformResultInfo_C_BndEvt__TransformButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemTransformResultInfo.ItemTransformResultInfo_C.SetKeyToRepresent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortItem*                        Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemTransformResultInfo_C::SetKeyToRepresent(class UFortItem* Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTransformResultInfo_C", "SetKeyToRepresent");

	Params::ItemTransformResultInfo_C_SetKeyToRepresent Parms{};

	Parms.Key = Key;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemTransformResultInfo.ItemTransformResultInfo_C.UpdateSacrificePointsBar
// (Public, BlueprintCallable, BlueprintEvent)

void UItemTransformResultInfo_C::UpdateSacrificePointsBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTransformResultInfo_C", "UpdateSacrificePointsBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTransformResultInfo.ItemTransformResultInfo_C.UpdateSacrificeInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UFortItem*>                SacrificeItems                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UItemTransformResultInfo_C::UpdateSacrificeInfo(TArray<class UFortItem*>& SacrificeItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTransformResultInfo_C", "UpdateSacrificeInfo");

	Params::ItemTransformResultInfo_C_UpdateSacrificeInfo Parms{};

	Parms.SacrificeItems = std::move(SacrificeItems);

	UObject::ProcessEvent(Func, &Parms);

	SacrificeItems = std::move(Parms.SacrificeItems);
}


// Function ItemTransformResultInfo.ItemTransformResultInfo_C.CalculateCurrentSacrificePoints
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TotalSacrificePoints                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemTransformResultInfo_C::CalculateCurrentSacrificePoints(int32* TotalSacrificePoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTransformResultInfo_C", "CalculateCurrentSacrificePoints");

	Params::ItemTransformResultInfo_C_CalculateCurrentSacrificePoints Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TotalSacrificePoints != nullptr)
		*TotalSacrificePoints = Parms.TotalSacrificePoints;
}


// Function ItemTransformResultInfo.ItemTransformResultInfo_C.UpdateTierProgressPercentage
// (Public, BlueprintCallable, BlueprintEvent)

void UItemTransformResultInfo_C::UpdateTierProgressPercentage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTransformResultInfo_C", "UpdateTierProgressPercentage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemTransformResultInfo.ItemTransformResultInfo_C.GetPointsForTier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Tier                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Points                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemTransformResultInfo_C::GetPointsForTier(int32 Tier, int32* Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTransformResultInfo_C", "GetPointsForTier");

	Params::ItemTransformResultInfo_C_GetPointsForTier Parms{};

	Parms.Tier = Tier;

	UObject::ProcessEvent(Func, &Parms);

	if (Points != nullptr)
		*Points = Parms.Points;
}


// Function ItemTransformResultInfo.ItemTransformResultInfo_C.CalculateNextTier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UItemTransformResultInfo_C::CalculateNextTier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTransformResultInfo_C", "CalculateNextTier");

	Params::ItemTransformResultInfo_C_CalculateNextTier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ItemTransformResultInfo.ItemTransformResultInfo_C.Get Transform Data
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrentSacrificePoints_0                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CurrentTier_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemTransformResultInfo_C::Get_Transform_Data(int32* CurrentSacrificePoints_0, int32* CurrentTier_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTransformResultInfo_C", "Get Transform Data");

	Params::ItemTransformResultInfo_C_Get_Transform_Data Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentSacrificePoints_0 != nullptr)
		*CurrentSacrificePoints_0 = Parms.CurrentSacrificePoints_0;

	if (CurrentTier_0 != nullptr)
		*CurrentTier_0 = Parms.CurrentTier_0;
}


// Function ItemTransformResultInfo.ItemTransformResultInfo_C.Is Tranfsorm Button Enabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UItemTransformResultInfo_C::Is_Tranfsorm_Button_Enabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTransformResultInfo_C", "Is Tranfsorm Button Enabled");

	Params::ItemTransformResultInfo_C_Is_Tranfsorm_Button_Enabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


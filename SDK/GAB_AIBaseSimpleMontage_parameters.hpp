#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAB_AIBaseSimpleMontage

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GAB_AIBaseSimpleMontage.GAB_AIBaseSimpleMontage_C.ExecuteUbergraph_GAB_AIBaseSimpleMontage
// 0x00F0 (0x00F0 - 0x0000)
struct GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilityTask_PlayMontageWaitTarget* CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData12;                   // 0x0028(0x0020)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag12;               // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData1;                    // 0x0050(0x0020)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag1;                // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate12;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x0098(0x0020)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag;                 // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable1;                             // 0x00C8(0x0020)()
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage) == 0x000008, "Wrong alignment on GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage");
static_assert(sizeof(GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage) == 0x0000F0, "Wrong size on GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage");
static_assert(offsetof(GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage, EntryPoint) == 0x000000, "Member 'GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage::EntryPoint' has a wrong offset!");
static_assert(offsetof(GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage, CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue) == 0x000008, "Member 'GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage::CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage, K2Node_CustomEvent_TargetData12) == 0x000028, "Member 'GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage::K2Node_CustomEvent_TargetData12' has a wrong offset!");
static_assert(offsetof(GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage, K2Node_CustomEvent_ApplicationTag12) == 0x000048, "Member 'GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage::K2Node_CustomEvent_ApplicationTag12' has a wrong offset!");
static_assert(offsetof(GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage, K2Node_CustomEvent_TargetData1) == 0x000050, "Member 'GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage::K2Node_CustomEvent_TargetData1' has a wrong offset!");
static_assert(offsetof(GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage, K2Node_CustomEvent_ApplicationTag1) == 0x000070, "Member 'GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage::K2Node_CustomEvent_ApplicationTag1' has a wrong offset!");
static_assert(offsetof(GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage, K2Node_CreateDelegate_OutputDelegate1) == 0x000078, "Member 'GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage, K2Node_CreateDelegate_OutputDelegate12) == 0x000088, "Member 'GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage, K2Node_CustomEvent_TargetData) == 0x000098, "Member 'GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage, K2Node_CustomEvent_ApplicationTag) == 0x0000B8, "Member 'GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage::K2Node_CustomEvent_ApplicationTag' has a wrong offset!");
static_assert(offsetof(GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage, Temp_struct_Variable) == 0x0000C0, "Member 'GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage, Temp_struct_Variable1) == 0x0000C8, "Member 'GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage, CallFunc_K2_CommitAbility_ReturnValue) == 0x0000E8, "Member 'GAB_AIBaseSimpleMontage_C_ExecuteUbergraph_GAB_AIBaseSimpleMontage::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");

// Function GAB_AIBaseSimpleMontage.GAB_AIBaseSimpleMontage_C.Cancelled_19E6A1264ED43B37D77327A113073715
// 0x0028 (0x0028 - 0x0000)
struct GAB_AIBaseSimpleMontage_C_Cancelled_19E6A1264ED43B37D77327A113073715 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_AIBaseSimpleMontage_C_Cancelled_19E6A1264ED43B37D77327A113073715) == 0x000008, "Wrong alignment on GAB_AIBaseSimpleMontage_C_Cancelled_19E6A1264ED43B37D77327A113073715");
static_assert(sizeof(GAB_AIBaseSimpleMontage_C_Cancelled_19E6A1264ED43B37D77327A113073715) == 0x000028, "Wrong size on GAB_AIBaseSimpleMontage_C_Cancelled_19E6A1264ED43B37D77327A113073715");
static_assert(offsetof(GAB_AIBaseSimpleMontage_C_Cancelled_19E6A1264ED43B37D77327A113073715, TargetData) == 0x000000, "Member 'GAB_AIBaseSimpleMontage_C_Cancelled_19E6A1264ED43B37D77327A113073715::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_AIBaseSimpleMontage_C_Cancelled_19E6A1264ED43B37D77327A113073715, ApplicationTag) == 0x000020, "Member 'GAB_AIBaseSimpleMontage_C_Cancelled_19E6A1264ED43B37D77327A113073715::ApplicationTag' has a wrong offset!");

// Function GAB_AIBaseSimpleMontage.GAB_AIBaseSimpleMontage_C.Completed_19E6A1264ED43B37D77327A113073715
// 0x0028 (0x0028 - 0x0000)
struct GAB_AIBaseSimpleMontage_C_Completed_19E6A1264ED43B37D77327A113073715 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_AIBaseSimpleMontage_C_Completed_19E6A1264ED43B37D77327A113073715) == 0x000008, "Wrong alignment on GAB_AIBaseSimpleMontage_C_Completed_19E6A1264ED43B37D77327A113073715");
static_assert(sizeof(GAB_AIBaseSimpleMontage_C_Completed_19E6A1264ED43B37D77327A113073715) == 0x000028, "Wrong size on GAB_AIBaseSimpleMontage_C_Completed_19E6A1264ED43B37D77327A113073715");
static_assert(offsetof(GAB_AIBaseSimpleMontage_C_Completed_19E6A1264ED43B37D77327A113073715, TargetData) == 0x000000, "Member 'GAB_AIBaseSimpleMontage_C_Completed_19E6A1264ED43B37D77327A113073715::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_AIBaseSimpleMontage_C_Completed_19E6A1264ED43B37D77327A113073715, ApplicationTag) == 0x000020, "Member 'GAB_AIBaseSimpleMontage_C_Completed_19E6A1264ED43B37D77327A113073715::ApplicationTag' has a wrong offset!");

// Function GAB_AIBaseSimpleMontage.GAB_AIBaseSimpleMontage_C.Triggered_19E6A1264ED43B37D77327A113073715
// 0x0028 (0x0028 - 0x0000)
struct GAB_AIBaseSimpleMontage_C_Triggered_19E6A1264ED43B37D77327A113073715 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_AIBaseSimpleMontage_C_Triggered_19E6A1264ED43B37D77327A113073715) == 0x000008, "Wrong alignment on GAB_AIBaseSimpleMontage_C_Triggered_19E6A1264ED43B37D77327A113073715");
static_assert(sizeof(GAB_AIBaseSimpleMontage_C_Triggered_19E6A1264ED43B37D77327A113073715) == 0x000028, "Wrong size on GAB_AIBaseSimpleMontage_C_Triggered_19E6A1264ED43B37D77327A113073715");
static_assert(offsetof(GAB_AIBaseSimpleMontage_C_Triggered_19E6A1264ED43B37D77327A113073715, TargetData) == 0x000000, "Member 'GAB_AIBaseSimpleMontage_C_Triggered_19E6A1264ED43B37D77327A113073715::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_AIBaseSimpleMontage_C_Triggered_19E6A1264ED43B37D77327A113073715, ApplicationTag) == 0x000020, "Member 'GAB_AIBaseSimpleMontage_C_Triggered_19E6A1264ED43B37D77327A113073715::ApplicationTag' has a wrong offset!");

}


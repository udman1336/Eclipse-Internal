#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RadialPicker

#include "Basic.hpp"

#include "RadialPicker_classes.hpp"
#include "RadialPicker_parameters.hpp"


namespace SDK
{

// Function RadialPicker.RadialPicker_C.ExecuteUbergraph_RadialPicker
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialPicker_C::ExecuteUbergraph_RadialPicker(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "ExecuteUbergraph_RadialPicker");

	Params::RadialPicker_C_ExecuteUbergraph_RadialPicker Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialPicker.RadialPicker_C.BndEvt__PickerOption7_K2Node_ComponentBoundEvent_34_On Item Touched__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class URadialPickerItem_C*              Picked_Option                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialPicker_C::BndEvt__PickerOption7_K2Node_ComponentBoundEvent_34_On_Item_Touched__DelegateSignature(class URadialPickerItem_C* Picked_Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "BndEvt__PickerOption7_K2Node_ComponentBoundEvent_34_On Item Touched__DelegateSignature");

	Params::RadialPicker_C_BndEvt__PickerOption7_K2Node_ComponentBoundEvent_34_On_Item_Touched__DelegateSignature Parms{};

	Parms.Picked_Option = Picked_Option;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialPicker.RadialPicker_C.BndEvt__PickerOption6_K2Node_ComponentBoundEvent_27_On Item Touched__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class URadialPickerItem_C*              Picked_Option                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialPicker_C::BndEvt__PickerOption6_K2Node_ComponentBoundEvent_27_On_Item_Touched__DelegateSignature(class URadialPickerItem_C* Picked_Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "BndEvt__PickerOption6_K2Node_ComponentBoundEvent_27_On Item Touched__DelegateSignature");

	Params::RadialPicker_C_BndEvt__PickerOption6_K2Node_ComponentBoundEvent_27_On_Item_Touched__DelegateSignature Parms{};

	Parms.Picked_Option = Picked_Option;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialPicker.RadialPicker_C.BndEvt__PickerOption5_K2Node_ComponentBoundEvent_21_On Item Touched__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class URadialPickerItem_C*              Picked_Option                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialPicker_C::BndEvt__PickerOption5_K2Node_ComponentBoundEvent_21_On_Item_Touched__DelegateSignature(class URadialPickerItem_C* Picked_Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "BndEvt__PickerOption5_K2Node_ComponentBoundEvent_21_On Item Touched__DelegateSignature");

	Params::RadialPicker_C_BndEvt__PickerOption5_K2Node_ComponentBoundEvent_21_On_Item_Touched__DelegateSignature Parms{};

	Parms.Picked_Option = Picked_Option;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialPicker.RadialPicker_C.BndEvt__PickerOption4_K2Node_ComponentBoundEvent_16_On Item Touched__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class URadialPickerItem_C*              Picked_Option                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialPicker_C::BndEvt__PickerOption4_K2Node_ComponentBoundEvent_16_On_Item_Touched__DelegateSignature(class URadialPickerItem_C* Picked_Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "BndEvt__PickerOption4_K2Node_ComponentBoundEvent_16_On Item Touched__DelegateSignature");

	Params::RadialPicker_C_BndEvt__PickerOption4_K2Node_ComponentBoundEvent_16_On_Item_Touched__DelegateSignature Parms{};

	Parms.Picked_Option = Picked_Option;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialPicker.RadialPicker_C.BndEvt__PickerOption3_K2Node_ComponentBoundEvent_12_On Item Touched__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class URadialPickerItem_C*              Picked_Option                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialPicker_C::BndEvt__PickerOption3_K2Node_ComponentBoundEvent_12_On_Item_Touched__DelegateSignature(class URadialPickerItem_C* Picked_Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "BndEvt__PickerOption3_K2Node_ComponentBoundEvent_12_On Item Touched__DelegateSignature");

	Params::RadialPicker_C_BndEvt__PickerOption3_K2Node_ComponentBoundEvent_12_On_Item_Touched__DelegateSignature Parms{};

	Parms.Picked_Option = Picked_Option;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialPicker.RadialPicker_C.BndEvt__PickerOption2_K2Node_ComponentBoundEvent_9_On Item Touched__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class URadialPickerItem_C*              Picked_Option                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialPicker_C::BndEvt__PickerOption2_K2Node_ComponentBoundEvent_9_On_Item_Touched__DelegateSignature(class URadialPickerItem_C* Picked_Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "BndEvt__PickerOption2_K2Node_ComponentBoundEvent_9_On Item Touched__DelegateSignature");

	Params::RadialPicker_C_BndEvt__PickerOption2_K2Node_ComponentBoundEvent_9_On_Item_Touched__DelegateSignature Parms{};

	Parms.Picked_Option = Picked_Option;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialPicker.RadialPicker_C.BndEvt__PickerOption1_K2Node_ComponentBoundEvent_8_On Item Touched__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class URadialPickerItem_C*              Picked_Option                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialPicker_C::BndEvt__PickerOption1_K2Node_ComponentBoundEvent_8_On_Item_Touched__DelegateSignature(class URadialPickerItem_C* Picked_Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "BndEvt__PickerOption1_K2Node_ComponentBoundEvent_8_On Item Touched__DelegateSignature");

	Params::RadialPicker_C_BndEvt__PickerOption1_K2Node_ComponentBoundEvent_8_On_Item_Touched__DelegateSignature Parms{};

	Parms.Picked_Option = Picked_Option;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialPicker.RadialPicker_C.BndEvt__PickerOption0_K2Node_ComponentBoundEvent_2_On Item Touched__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class URadialPickerItem_C*              Picked_Option                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialPicker_C::BndEvt__PickerOption0_K2Node_ComponentBoundEvent_2_On_Item_Touched__DelegateSignature(class URadialPickerItem_C* Picked_Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "BndEvt__PickerOption0_K2Node_ComponentBoundEvent_2_On Item Touched__DelegateSignature");

	Params::RadialPicker_C_BndEvt__PickerOption0_K2Node_ComponentBoundEvent_2_On_Item_Touched__DelegateSignature Parms{};

	Parms.Picked_Option = Picked_Option;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialPicker.RadialPicker_C.OnPickerRefreshItems
// (BlueprintCallable, BlueprintEvent)

void URadialPicker_C::OnPickerRefreshItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "OnPickerRefreshItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RadialPicker.RadialPicker_C.AcceptChosenOption
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PickerOption                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialPicker_C::AcceptChosenOption(int32 PickerOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "AcceptChosenOption");

	Params::RadialPicker_C_AcceptChosenOption Parms{};

	Parms.PickerOption = PickerOption;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialPicker.RadialPicker_C.ClosePicker
// (BlueprintCallable, BlueprintEvent)

void URadialPicker_C::ClosePicker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "ClosePicker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RadialPicker.RadialPicker_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void URadialPicker_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RadialPicker.RadialPicker_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialPicker_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "Tick");

	Params::RadialPicker_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialPicker.RadialPicker_C.Event CancelPicker
// (BlueprintCallable, BlueprintEvent)

void URadialPicker_C::Event_CancelPicker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "Event CancelPicker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RadialPicker.RadialPicker_C.Event AcceptOption
// (BlueprintCallable, BlueprintEvent)

void URadialPicker_C::Event_AcceptOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "Event AcceptOption");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RadialPicker.RadialPicker_C.InitializePicker
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortPickerMode                         PickerMode_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InitialOption                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialPicker_C::InitializePicker(EFortPickerMode PickerMode_0, int32 InitialOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "InitializePicker");

	Params::RadialPicker_C_InitializePicker Parms{};

	Parms.PickerMode_0 = PickerMode_0;
	Parms.InitialOption = InitialOption;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialPicker.RadialPicker_C.GetOptionPosition
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Option                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Position                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialPicker_C::GetOptionPosition(int32 Option, struct FVector2D* Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "GetOptionPosition");

	Params::RadialPicker_C_GetOptionPosition Parms{};

	Parms.Option = Option;

	UObject::ProcessEvent(Func, &Parms);

	if (Position != nullptr)
		*Position = std::move(Parms.Position);
}


// Function RadialPicker.RadialPicker_C.GetAngleDifference
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AngleA                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AngleB                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Difference                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialPicker_C::GetAngleDifference(float AngleA, float AngleB, float* Difference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "GetAngleDifference");

	Params::RadialPicker_C_GetAngleDifference Parms{};

	Parms.AngleA = AngleA;
	Parms.AngleB = AngleB;

	UObject::ProcessEvent(Func, &Parms);

	if (Difference != nullptr)
		*Difference = Parms.Difference;
}


// Function RadialPicker.RadialPicker_C.GetOptionAngle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Option                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Angle                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialPicker_C::GetOptionAngle(int32 Option, float* Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "GetOptionAngle");

	Params::RadialPicker_C_GetOptionAngle Parms{};

	Parms.Option = Option;

	UObject::ProcessEvent(Func, &Parms);

	if (Angle != nullptr)
		*Angle = Parms.Angle;
}


// Function RadialPicker.RadialPicker_C.ClearActiveOption
// (Public, BlueprintCallable, BlueprintEvent)

void URadialPicker_C::ClearActiveOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "ClearActiveOption");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RadialPicker.RadialPicker_C.SetActiveOption
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Option                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialPicker_C::SetActiveOption(int32 Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "SetActiveOption");

	Params::RadialPicker_C_SetActiveOption Parms{};

	Parms.Option = Option;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialPicker.RadialPicker_C.SetInputMode
// (Public, BlueprintCallable, BlueprintEvent)

void URadialPicker_C::SetInputMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "SetInputMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RadialPicker.RadialPicker_C.CanConfirm
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    CanAccept                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void URadialPicker_C::CanConfirm(bool* CanAccept)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "CanConfirm");

	Params::RadialPicker_C_CanConfirm Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanAccept != nullptr)
		*CanAccept = Parms.CanAccept;
}


// Function RadialPicker.RadialPicker_C.ResetInput
// (Public, BlueprintCallable, BlueprintEvent)

void URadialPicker_C::ResetInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "ResetInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RadialPicker.RadialPicker_C.MoveActiveOption
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MoveOptionDirection                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialPicker_C::MoveActiveOption(int32 MoveOptionDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "MoveActiveOption");

	Params::RadialPicker_C_MoveActiveOption Parms{};

	Parms.MoveOptionDirection = MoveOptionDirection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialPicker.RadialPicker_C.SetPointerDirection
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void URadialPicker_C::SetPointerDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "SetPointerDirection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RadialPicker.RadialPicker_C.SetShowMouseCursor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InShowMouseCursor                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void URadialPicker_C::SetShowMouseCursor(bool InShowMouseCursor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "SetShowMouseCursor");

	Params::RadialPicker_C_SetShowMouseCursor Parms{};

	Parms.InShowMouseCursor = InShowMouseCursor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialPicker.RadialPicker_C.On Item Touched
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URadialPickerItem_C*              Touched_Item                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialPicker_C::On_Item_Touched(class URadialPickerItem_C* Touched_Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "On Item Touched");

	Params::RadialPicker_C_On_Item_Touched Parms{};

	Parms.Touched_Item = Touched_Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialPicker.RadialPicker_C.IsGamepadInPickerDeadZone
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bIsInDeadZone                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void URadialPicker_C::IsGamepadInPickerDeadZone(bool* bIsInDeadZone) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialPicker_C", "IsGamepadInPickerDeadZone");

	Params::RadialPicker_C_IsGamepadInPickerDeadZone Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsInDeadZone != nullptr)
		*bIsInDeadZone = Parms.bIsInDeadZone;
}

}


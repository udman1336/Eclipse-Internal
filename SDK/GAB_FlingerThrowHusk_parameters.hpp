#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAB_FlingerThrowHusk

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GAB_FlingerThrowHusk.GAB_FlingerThrowHusk_C.ExecuteUbergraph_GAB_FlingerThrowHusk
// 0x0258 (0x0258 - 0x0000)
struct GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData1;                    // 0x0008(0x0020)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag1;                // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x0040(0x0020)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag;                 // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0078(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable1;                             // 0x0080(0x0020)()
	TDelegate<void(class AActor* Actor, EEndPlayReason EndPlayReason)> K2Node_CreateDelegate_OutputDelegate12;            // 0x00A0(0x0010)(ZeroConstructor, NoDestructor)
	class AFortPawn*                              CallFunc_GetActivatingPawn_ReturnValue;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetFireLocation_ReturnValue;              // 0x00B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00C4(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetProjectileInitialValues_outProjectileSpeed; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetProjectileInitialValues_outSpawnDirection; // 0x00D4(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetProjectileInitialValues_outProjectileGravity; // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetProjectileInitialValues_HomingTarget;  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAbilityTask_PlayMontageWaitTarget* CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x00F8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0104(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              CallFunc_GetActivatingPawn_ReturnValue1;           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFlingerPawn_C*                         K2Node_DynamicCast_AsFlinger_Pawn;                 // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue12;                    // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetFireLocation_ReturnValue1;             // 0x012C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0138(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x01C8(0x0008)(NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue1;                 // 0x01D0(0x0008)(NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData12;                   // 0x01D8(0x0020)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag12;               // 0x01F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UFortAIEncounterInfo*                   CallFunc_GetEncounterInfo_ReturnValue;             // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EncounterHasReservedSpawnRequestForEnemySpawner_ReturnValue; // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAIPawn*                            CallFunc_SpawnAIPawnReservedForEnemySpawner_ReturnValue; // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHuskPawn_C*                            K2Node_DynamicCast_AsHusk_Pawn;                    // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_CustomEvent_EndPlayReason;                  // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHuskPawn_C*                            K2Node_CustomEvent_Pawn1;                          // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate123;           // 0x0240(0x0010)(ZeroConstructor, NoDestructor)
	class AHuskPawn_C*                            K2Node_CustomEvent_Pawn;                           // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk) == 0x000008, "Wrong alignment on GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk");
static_assert(sizeof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk) == 0x000258, "Wrong size on GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, EntryPoint) == 0x000000, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::EntryPoint' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, K2Node_CustomEvent_TargetData1) == 0x000008, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::K2Node_CustomEvent_TargetData1' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, K2Node_CustomEvent_ApplicationTag1) == 0x000028, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::K2Node_CustomEvent_ApplicationTag1' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, K2Node_CustomEvent_TargetData) == 0x000040, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, K2Node_CustomEvent_ApplicationTag) == 0x000060, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::K2Node_CustomEvent_ApplicationTag' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, K2Node_CreateDelegate_OutputDelegate1) == 0x000068, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, Temp_struct_Variable) == 0x000078, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, Temp_struct_Variable1) == 0x000080, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, K2Node_CreateDelegate_OutputDelegate12) == 0x0000A0, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, CallFunc_GetActivatingPawn_ReturnValue) == 0x0000B0, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::CallFunc_GetActivatingPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, CallFunc_GetFireLocation_ReturnValue) == 0x0000B8, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::CallFunc_GetFireLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000C4, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, CallFunc_GetProjectileInitialValues_outProjectileSpeed) == 0x0000D0, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::CallFunc_GetProjectileInitialValues_outProjectileSpeed' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, CallFunc_GetProjectileInitialValues_outSpawnDirection) == 0x0000D4, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::CallFunc_GetProjectileInitialValues_outSpawnDirection' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, CallFunc_GetProjectileInitialValues_outProjectileGravity) == 0x0000E0, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::CallFunc_GetProjectileInitialValues_outProjectileGravity' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, CallFunc_GetProjectileInitialValues_HomingTarget) == 0x0000E8, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::CallFunc_GetProjectileInitialValues_HomingTarget' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue) == 0x0000F0, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0000F8, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000104, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, CallFunc_IsValid_ReturnValue) == 0x000110, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, K2Node_Event_bWasCancelled) == 0x000111, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, CallFunc_GetActivatingPawn_ReturnValue1) == 0x000118, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::CallFunc_GetActivatingPawn_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, K2Node_DynamicCast_AsFlinger_Pawn) == 0x000120, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::K2Node_DynamicCast_AsFlinger_Pawn' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, CallFunc_K2_CommitAbility_ReturnValue) == 0x000129, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, CallFunc_IsValid_ReturnValue1) == 0x00012A, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, CallFunc_IsValid_ReturnValue12) == 0x00012B, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::CallFunc_IsValid_ReturnValue12' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, CallFunc_GetFireLocation_ReturnValue1) == 0x00012C, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::CallFunc_GetFireLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000138, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0001C0, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, CallFunc_K2_SetTimer_ReturnValue) == 0x0001C8, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, CallFunc_K2_SetTimer_ReturnValue1) == 0x0001D0, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::CallFunc_K2_SetTimer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, K2Node_CustomEvent_TargetData12) == 0x0001D8, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::K2Node_CustomEvent_TargetData12' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, K2Node_CustomEvent_ApplicationTag12) == 0x0001F8, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::K2Node_CustomEvent_ApplicationTag12' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, CallFunc_GetEncounterInfo_ReturnValue) == 0x000200, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::CallFunc_GetEncounterInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, CallFunc_EncounterHasReservedSpawnRequestForEnemySpawner_ReturnValue) == 0x000208, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::CallFunc_EncounterHasReservedSpawnRequestForEnemySpawner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, CallFunc_SpawnAIPawnReservedForEnemySpawner_ReturnValue) == 0x000210, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::CallFunc_SpawnAIPawnReservedForEnemySpawner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, K2Node_DynamicCast_AsHusk_Pawn) == 0x000218, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::K2Node_DynamicCast_AsHusk_Pawn' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, K2Node_DynamicCast_bSuccess1) == 0x000220, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, K2Node_CustomEvent_Actor) == 0x000228, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, K2Node_CustomEvent_EndPlayReason) == 0x000230, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::K2Node_CustomEvent_EndPlayReason' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, K2Node_CustomEvent_Pawn1) == 0x000238, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::K2Node_CustomEvent_Pawn1' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, K2Node_CreateDelegate_OutputDelegate123) == 0x000240, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::K2Node_CreateDelegate_OutputDelegate123' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk, K2Node_CustomEvent_Pawn) == 0x000250, "Member 'GAB_FlingerThrowHusk_C_ExecuteUbergraph_GAB_FlingerThrowHusk::K2Node_CustomEvent_Pawn' has a wrong offset!");

// Function GAB_FlingerThrowHusk.GAB_FlingerThrowHusk_C.UnbindOnEndPlay
// 0x0008 (0x0008 - 0x0000)
struct GAB_FlingerThrowHusk_C_UnbindOnEndPlay final
{
public:
	class AHuskPawn_C*                            Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_FlingerThrowHusk_C_UnbindOnEndPlay) == 0x000008, "Wrong alignment on GAB_FlingerThrowHusk_C_UnbindOnEndPlay");
static_assert(sizeof(GAB_FlingerThrowHusk_C_UnbindOnEndPlay) == 0x000008, "Wrong size on GAB_FlingerThrowHusk_C_UnbindOnEndPlay");
static_assert(offsetof(GAB_FlingerThrowHusk_C_UnbindOnEndPlay, Pawn) == 0x000000, "Member 'GAB_FlingerThrowHusk_C_UnbindOnEndPlay::Pawn' has a wrong offset!");

// Function GAB_FlingerThrowHusk.GAB_FlingerThrowHusk_C.BindOnEndPlay
// 0x0008 (0x0008 - 0x0000)
struct GAB_FlingerThrowHusk_C_BindOnEndPlay final
{
public:
	class AHuskPawn_C*                            Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_FlingerThrowHusk_C_BindOnEndPlay) == 0x000008, "Wrong alignment on GAB_FlingerThrowHusk_C_BindOnEndPlay");
static_assert(sizeof(GAB_FlingerThrowHusk_C_BindOnEndPlay) == 0x000008, "Wrong size on GAB_FlingerThrowHusk_C_BindOnEndPlay");
static_assert(offsetof(GAB_FlingerThrowHusk_C_BindOnEndPlay, Pawn) == 0x000000, "Member 'GAB_FlingerThrowHusk_C_BindOnEndPlay::Pawn' has a wrong offset!");

// Function GAB_FlingerThrowHusk.GAB_FlingerThrowHusk_C.OnEndPlay
// 0x0010 (0x0010 - 0x0000)
struct GAB_FlingerThrowHusk_C_OnEndPlay final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                EndPlayReason;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_FlingerThrowHusk_C_OnEndPlay) == 0x000008, "Wrong alignment on GAB_FlingerThrowHusk_C_OnEndPlay");
static_assert(sizeof(GAB_FlingerThrowHusk_C_OnEndPlay) == 0x000010, "Wrong size on GAB_FlingerThrowHusk_C_OnEndPlay");
static_assert(offsetof(GAB_FlingerThrowHusk_C_OnEndPlay, Actor) == 0x000000, "Member 'GAB_FlingerThrowHusk_C_OnEndPlay::Actor' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_OnEndPlay, EndPlayReason) == 0x000008, "Member 'GAB_FlingerThrowHusk_C_OnEndPlay::EndPlayReason' has a wrong offset!");

// Function GAB_FlingerThrowHusk.GAB_FlingerThrowHusk_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GAB_FlingerThrowHusk_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GAB_FlingerThrowHusk_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GAB_FlingerThrowHusk_C_K2_OnEndAbility");
static_assert(sizeof(GAB_FlingerThrowHusk_C_K2_OnEndAbility) == 0x000001, "Wrong size on GAB_FlingerThrowHusk_C_K2_OnEndAbility");
static_assert(offsetof(GAB_FlingerThrowHusk_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GAB_FlingerThrowHusk_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GAB_FlingerThrowHusk.GAB_FlingerThrowHusk_C.Triggered_B56594C44CE933A96A3E13BDCFC1097D
// 0x0028 (0x0028 - 0x0000)
struct GAB_FlingerThrowHusk_C_Triggered_B56594C44CE933A96A3E13BDCFC1097D final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_FlingerThrowHusk_C_Triggered_B56594C44CE933A96A3E13BDCFC1097D) == 0x000008, "Wrong alignment on GAB_FlingerThrowHusk_C_Triggered_B56594C44CE933A96A3E13BDCFC1097D");
static_assert(sizeof(GAB_FlingerThrowHusk_C_Triggered_B56594C44CE933A96A3E13BDCFC1097D) == 0x000028, "Wrong size on GAB_FlingerThrowHusk_C_Triggered_B56594C44CE933A96A3E13BDCFC1097D");
static_assert(offsetof(GAB_FlingerThrowHusk_C_Triggered_B56594C44CE933A96A3E13BDCFC1097D, TargetData) == 0x000000, "Member 'GAB_FlingerThrowHusk_C_Triggered_B56594C44CE933A96A3E13BDCFC1097D::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_Triggered_B56594C44CE933A96A3E13BDCFC1097D, ApplicationTag) == 0x000020, "Member 'GAB_FlingerThrowHusk_C_Triggered_B56594C44CE933A96A3E13BDCFC1097D::ApplicationTag' has a wrong offset!");

// Function GAB_FlingerThrowHusk.GAB_FlingerThrowHusk_C.Cancelled_B56594C44CE933A96A3E13BDCFC1097D
// 0x0028 (0x0028 - 0x0000)
struct GAB_FlingerThrowHusk_C_Cancelled_B56594C44CE933A96A3E13BDCFC1097D final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_FlingerThrowHusk_C_Cancelled_B56594C44CE933A96A3E13BDCFC1097D) == 0x000008, "Wrong alignment on GAB_FlingerThrowHusk_C_Cancelled_B56594C44CE933A96A3E13BDCFC1097D");
static_assert(sizeof(GAB_FlingerThrowHusk_C_Cancelled_B56594C44CE933A96A3E13BDCFC1097D) == 0x000028, "Wrong size on GAB_FlingerThrowHusk_C_Cancelled_B56594C44CE933A96A3E13BDCFC1097D");
static_assert(offsetof(GAB_FlingerThrowHusk_C_Cancelled_B56594C44CE933A96A3E13BDCFC1097D, TargetData) == 0x000000, "Member 'GAB_FlingerThrowHusk_C_Cancelled_B56594C44CE933A96A3E13BDCFC1097D::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_Cancelled_B56594C44CE933A96A3E13BDCFC1097D, ApplicationTag) == 0x000020, "Member 'GAB_FlingerThrowHusk_C_Cancelled_B56594C44CE933A96A3E13BDCFC1097D::ApplicationTag' has a wrong offset!");

// Function GAB_FlingerThrowHusk.GAB_FlingerThrowHusk_C.Completed_B56594C44CE933A96A3E13BDCFC1097D
// 0x0028 (0x0028 - 0x0000)
struct GAB_FlingerThrowHusk_C_Completed_B56594C44CE933A96A3E13BDCFC1097D final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_FlingerThrowHusk_C_Completed_B56594C44CE933A96A3E13BDCFC1097D) == 0x000008, "Wrong alignment on GAB_FlingerThrowHusk_C_Completed_B56594C44CE933A96A3E13BDCFC1097D");
static_assert(sizeof(GAB_FlingerThrowHusk_C_Completed_B56594C44CE933A96A3E13BDCFC1097D) == 0x000028, "Wrong size on GAB_FlingerThrowHusk_C_Completed_B56594C44CE933A96A3E13BDCFC1097D");
static_assert(offsetof(GAB_FlingerThrowHusk_C_Completed_B56594C44CE933A96A3E13BDCFC1097D, TargetData) == 0x000000, "Member 'GAB_FlingerThrowHusk_C_Completed_B56594C44CE933A96A3E13BDCFC1097D::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_Completed_B56594C44CE933A96A3E13BDCFC1097D, ApplicationTag) == 0x000020, "Member 'GAB_FlingerThrowHusk_C_Completed_B56594C44CE933A96A3E13BDCFC1097D::ApplicationTag' has a wrong offset!");

// Function GAB_FlingerThrowHusk.GAB_FlingerThrowHusk_C.K2_CanActivateAbility
// 0x0090 (0x0090 - 0x0000)
struct GAB_FlingerThrowHusk_C_K2_CanActivateAbility final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0040(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CanActivate;                                       // 0x0061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              CallFunc_GetActivatingPawn_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortAIPawn*                            K2Node_DynamicCast_AsFort_AIPawn;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAIEncounterInfo*                   CallFunc_GetEncounterInfo_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EncounterHasReservedSpawnRequestForEnemySpawner_ReturnValue; // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GAB_FlingerThrowHusk_C_K2_CanActivateAbility) == 0x000008, "Wrong alignment on GAB_FlingerThrowHusk_C_K2_CanActivateAbility");
static_assert(sizeof(GAB_FlingerThrowHusk_C_K2_CanActivateAbility) == 0x000090, "Wrong size on GAB_FlingerThrowHusk_C_K2_CanActivateAbility");
static_assert(offsetof(GAB_FlingerThrowHusk_C_K2_CanActivateAbility, ActorInfo) == 0x000000, "Member 'GAB_FlingerThrowHusk_C_K2_CanActivateAbility::ActorInfo' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_K2_CanActivateAbility, RelevantTags) == 0x000040, "Member 'GAB_FlingerThrowHusk_C_K2_CanActivateAbility::RelevantTags' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_K2_CanActivateAbility, ReturnValue) == 0x000060, "Member 'GAB_FlingerThrowHusk_C_K2_CanActivateAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_K2_CanActivateAbility, CanActivate) == 0x000061, "Member 'GAB_FlingerThrowHusk_C_K2_CanActivateAbility::CanActivate' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_K2_CanActivateAbility, CallFunc_GetActivatingPawn_ReturnValue) == 0x000068, "Member 'GAB_FlingerThrowHusk_C_K2_CanActivateAbility::CallFunc_GetActivatingPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_K2_CanActivateAbility, K2Node_DynamicCast_AsFort_AIPawn) == 0x000070, "Member 'GAB_FlingerThrowHusk_C_K2_CanActivateAbility::K2Node_DynamicCast_AsFort_AIPawn' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_K2_CanActivateAbility, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'GAB_FlingerThrowHusk_C_K2_CanActivateAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_K2_CanActivateAbility, CallFunc_GetEncounterInfo_ReturnValue) == 0x000080, "Member 'GAB_FlingerThrowHusk_C_K2_CanActivateAbility::CallFunc_GetEncounterInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_K2_CanActivateAbility, CallFunc_EncounterHasReservedSpawnRequestForEnemySpawner_ReturnValue) == 0x000088, "Member 'GAB_FlingerThrowHusk_C_K2_CanActivateAbility::CallFunc_EncounterHasReservedSpawnRequestForEnemySpawner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_K2_CanActivateAbility, CallFunc_IsValid_ReturnValue) == 0x000089, "Member 'GAB_FlingerThrowHusk_C_K2_CanActivateAbility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_FlingerThrowHusk_C_K2_CanActivateAbility, CallFunc_BooleanAND_ReturnValue) == 0x00008A, "Member 'GAB_FlingerThrowHusk_C_K2_CanActivateAbility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}


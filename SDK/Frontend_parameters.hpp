#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FrontEnd

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function FrontEnd.FrontEnd_C.ExecuteUbergraph_FrontEnd
// 0x0278 (0x0278 - 0x0000)
struct FrontEnd_C_ExecuteUbergraph_FrontEnd final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPTTState                                     Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPTTState                                     Temp_byte_Variable1;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPTTState                                     Temp_byte_Variable12;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPTTState                                     Temp_byte_Variable123;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAthenaHUDContext*                      CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAthenaHUDContext*                      CallFunc_GetContext_ReturnValue1;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAthenaHUDContext*                      CallFunc_GetContext_ReturnValue12;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	EPTTState                                     CallFunc_GetPTTState_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaHUDContext*                      CallFunc_GetContext_ReturnValue123;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UFortQuestItem*>                 K2Node_CustomEvent_Quests1;                        // 0x0040(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	EPTTState                                     CallFunc_GetPTTState_ReturnValue1;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Event_Widget;                               // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContentPushState                      K2Node_Event_State;                                // 0x0060(0x0003)(NoDestructor)
	EFortUIState                                  K2Node_Event_NextUIState;                          // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaHUDContext*                      CallFunc_GetContext_ReturnValue1234;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPTTState                                     CallFunc_GetPTTState_ReturnValue12;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_HandleClientEvent_EventSource12;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_HandleClientEvent_EventFocus12;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortClientEvent                       K2Node_HandleClientEvent_ClientEvent12;            // 0x0088(0x0020)(ConstParm, NoDestructor)
	EPTTState                                     K2Node_Select_Default;                             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHideHeader;                          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bHideFooter;                          // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bHideChatWidget;                      // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB[0x5];                                       // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_HandleClientEvent_EventSource1;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_HandleClientEvent_EventFocus1;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortClientEvent                       K2Node_HandleClientEvent_ClientEvent1;             // 0x00D0(0x0020)(ConstParm, NoDestructor)
	class UObject*                                K2Node_HandleClientEvent_EventSource;              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_HandleClientEvent_EventFocus;               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortClientEvent                       K2Node_HandleClientEvent_ClientEvent;              // 0x0100(0x0020)(ConstParm, NoDestructor)
	class UClass*                                 Temp_class_Variable1;                              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable1234;                            // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue12345;              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue1;          // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESubGame                                      CallFunc_GetSubGame_ReturnValue;                   // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable12345;                           // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_153[0x5];                                      // 0x0153(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue1;             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemReceived_Base_C*                   CallFunc_Create_ReturnValue;                       // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSuccess;                             // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue123456;             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsVisible)>               K2Node_CreateDelegate_OutputDelegate1;             // 0x0178(0x0010)(ZeroConstructor, NoDestructor)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue1234567;            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentlyShowingLoadingScreen_ReturnValue; // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_193[0x5];                                      // 0x0193(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue12345678;           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue123456789;          // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsVisible;                      // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetItemReceivedFlowActive_ReturnValue;    // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button12;               // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGiftBoxItemDefinition*             CallFunc_GetGiftBoxDefinition_ReturnValue;         // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Create_ReturnValue1;                      // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemReceived_PrePrompt_C*              K2Node_DynamicCast_AsItem_Received_Pre_Prompt;     // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortQuestItem*>                 K2Node_CustomEvent_Quests;                         // 0x01E8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue12345678910;        // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button1;                // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Selected;               // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IsDailyRewardAvailable_OutMinutesUntilNextReward; // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDailyRewardAvailable_ReturnValue;       // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select1_Default;                            // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_212[0x6];                                      // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select12_Default;                           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue1234567891011;      // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue123456789101112;    // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue12345678910111213;  // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button;                 // 0x0238(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate12;            // 0x0240(0x0010)(ZeroConstructor, NoDestructor)
	EFortUIState                                  K2Node_Event_PreviousUIState;                      // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPTTState NewPushToTalkState)> K2Node_CreateDelegate_OutputDelegate123;           // 0x0258(0x0010)(ZeroConstructor, NoDestructor)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue1234567891011121314; // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGiftBoxItem*                       CallFunc_GetNextGiftBox_ReturnValue;               // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEnd_C_ExecuteUbergraph_FrontEnd) == 0x000008, "Wrong alignment on FrontEnd_C_ExecuteUbergraph_FrontEnd");
static_assert(sizeof(FrontEnd_C_ExecuteUbergraph_FrontEnd) == 0x000278, "Wrong size on FrontEnd_C_ExecuteUbergraph_FrontEnd");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, EntryPoint) == 0x000000, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::EntryPoint' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, Temp_byte_Variable) == 0x000004, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, Temp_byte_Variable1) == 0x000005, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, Temp_byte_Variable12) == 0x000006, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::Temp_byte_Variable12' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, Temp_byte_Variable123) == 0x000007, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::Temp_byte_Variable123' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetContext_ReturnValue1) == 0x000010, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetContext_ReturnValue12) == 0x000018, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetContext_ReturnValue12' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetPTTState_ReturnValue) == 0x000030, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetPTTState_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetContext_ReturnValue123) == 0x000038, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetContext_ReturnValue123' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_CustomEvent_Quests1) == 0x000040, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_CustomEvent_Quests1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetPTTState_ReturnValue1) == 0x000050, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetPTTState_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_Event_Widget) == 0x000058, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_Event_Widget' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_Event_State) == 0x000060, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_Event_State' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_Event_NextUIState) == 0x000063, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_Event_NextUIState' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetContext_ReturnValue1234) == 0x000068, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetContext_ReturnValue1234' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetPTTState_ReturnValue12) == 0x000070, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetPTTState_ReturnValue12' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_HandleClientEvent_EventSource12) == 0x000078, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_HandleClientEvent_EventSource12' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_HandleClientEvent_EventFocus12) == 0x000080, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_HandleClientEvent_EventFocus12' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_HandleClientEvent_ClientEvent12) == 0x000088, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_HandleClientEvent_ClientEvent12' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_Select_Default) == 0x0000A8, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, Temp_class_Variable) == 0x0000B0, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_Event_bHideHeader) == 0x0000B8, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_Event_bHideHeader' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_Event_bHideFooter) == 0x0000B9, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_Event_bHideFooter' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_Event_bHideChatWidget) == 0x0000BA, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_Event_bHideChatWidget' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_HandleClientEvent_EventSource1) == 0x0000C0, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_HandleClientEvent_EventSource1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_HandleClientEvent_EventFocus1) == 0x0000C8, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_HandleClientEvent_EventFocus1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_HandleClientEvent_ClientEvent1) == 0x0000D0, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_HandleClientEvent_ClientEvent1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_HandleClientEvent_EventSource) == 0x0000F0, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_HandleClientEvent_EventSource' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_HandleClientEvent_EventFocus) == 0x0000F8, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_HandleClientEvent_EventFocus' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_HandleClientEvent_ClientEvent) == 0x000100, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_HandleClientEvent_ClientEvent' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, Temp_class_Variable1) == 0x000120, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::Temp_class_Variable1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000128, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, Temp_bool_Variable) == 0x000130, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, Temp_byte_Variable1234) == 0x000131, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::Temp_byte_Variable1234' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetOwningPlayer_ReturnValue) == 0x000138, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetContext_ReturnValue12345) == 0x000140, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetContext_ReturnValue12345' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetUIManagerWidget_ReturnValue1) == 0x000148, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetUIManagerWidget_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetSubGame_ReturnValue) == 0x000150, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetSubGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, Temp_byte_Variable12345) == 0x000151, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::Temp_byte_Variable12345' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_SwitchEnum_CmpSuccess) == 0x000152, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetOwningPlayer_ReturnValue1) == 0x000158, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetOwningPlayer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_Create_ReturnValue) == 0x000160, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_Event_bSuccess) == 0x000168, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_Event_bSuccess' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, Temp_bool_Variable1) == 0x000169, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetContext_ReturnValue123456) == 0x000170, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetContext_ReturnValue123456' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_CreateDelegate_OutputDelegate1) == 0x000178, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetContext_ReturnValue1234567) == 0x000188, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetContext_ReturnValue1234567' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_IsCurrentlyShowingLoadingScreen_ReturnValue) == 0x000190, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_IsCurrentlyShowingLoadingScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000191, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000192, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetContext_ReturnValue12345678) == 0x000198, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetContext_ReturnValue12345678' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetContext_ReturnValue123456789) == 0x0001A0, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetContext_ReturnValue123456789' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_CustomEvent_IsVisible) == 0x0001A8, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_CustomEvent_IsVisible' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetItemReceivedFlowActive_ReturnValue) == 0x0001A9, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetItemReceivedFlowActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_ComponentBoundEvent_Button12) == 0x0001B0, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_ComponentBoundEvent_Button12' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetGiftBoxDefinition_ReturnValue) == 0x0001B8, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetGiftBoxDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_IsValid_ReturnValue) == 0x0001C0, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_Create_ReturnValue1) == 0x0001C8, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_Create_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_IsValidClass_ReturnValue) == 0x0001D0, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_DynamicCast_AsItem_Received_Pre_Prompt) == 0x0001D8, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_DynamicCast_AsItem_Received_Pre_Prompt' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_DynamicCast_bSuccess) == 0x0001E0, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_CustomEvent_Quests) == 0x0001E8, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_CustomEvent_Quests' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetContext_ReturnValue12345678910) == 0x0001F8, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetContext_ReturnValue12345678910' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_ComponentBoundEvent_Button1) == 0x000200, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_ComponentBoundEvent_Button1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_ComponentBoundEvent_Selected) == 0x000208, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_ComponentBoundEvent_Selected' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_IsDailyRewardAvailable_OutMinutesUntilNextReward) == 0x00020C, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_IsDailyRewardAvailable_OutMinutesUntilNextReward' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_IsDailyRewardAvailable_ReturnValue) == 0x000210, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_IsDailyRewardAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_Select1_Default) == 0x000211, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_Select12_Default) == 0x000218, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_Select12_Default' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetContext_ReturnValue1234567891011) == 0x000220, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetContext_ReturnValue1234567891011' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetContext_ReturnValue123456789101112) == 0x000228, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetContext_ReturnValue123456789101112' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetContext_ReturnValue12345678910111213) == 0x000230, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetContext_ReturnValue12345678910111213' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_ComponentBoundEvent_Button) == 0x000238, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_CreateDelegate_OutputDelegate12) == 0x000240, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_Event_PreviousUIState) == 0x000250, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_Event_PreviousUIState' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, K2Node_CreateDelegate_OutputDelegate123) == 0x000258, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::K2Node_CreateDelegate_OutputDelegate123' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetContext_ReturnValue1234567891011121314) == 0x000268, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetContext_ReturnValue1234567891011121314' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_ExecuteUbergraph_FrontEnd, CallFunc_GetNextGiftBox_ReturnValue) == 0x000270, "Member 'FrontEnd_C_ExecuteUbergraph_FrontEnd::CallFunc_GetNextGiftBox_ReturnValue' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.OnEnterState
// 0x0001 (0x0001 - 0x0000)
struct FrontEnd_C_OnEnterState final
{
public:
	EFortUIState                                  PreviousUIState_0;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEnd_C_OnEnterState) == 0x000001, "Wrong alignment on FrontEnd_C_OnEnterState");
static_assert(sizeof(FrontEnd_C_OnEnterState) == 0x000001, "Wrong size on FrontEnd_C_OnEnterState");
static_assert(offsetof(FrontEnd_C_OnEnterState, PreviousUIState_0) == 0x000000, "Member 'FrontEnd_C_OnEnterState::PreviousUIState_0' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.BndEvt__ButtonPTT_K2Node_ComponentBoundEvent_138_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FrontEnd_C_BndEvt__ButtonPTT_K2Node_ComponentBoundEvent_138_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEnd_C_BndEvt__ButtonPTT_K2Node_ComponentBoundEvent_138_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on FrontEnd_C_BndEvt__ButtonPTT_K2Node_ComponentBoundEvent_138_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(FrontEnd_C_BndEvt__ButtonPTT_K2Node_ComponentBoundEvent_138_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on FrontEnd_C_BndEvt__ButtonPTT_K2Node_ComponentBoundEvent_138_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(FrontEnd_C_BndEvt__ButtonPTT_K2Node_ComponentBoundEvent_138_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'FrontEnd_C_BndEvt__ButtonPTT_K2Node_ComponentBoundEvent_138_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.BndEvt__ButtonToggleChat_K2Node_ComponentBoundEvent_39_CommonSelectedStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct FrontEnd_C_BndEvt__ButtonToggleChat_K2Node_ComponentBoundEvent_39_CommonSelectedStateChanged__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Selected;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEnd_C_BndEvt__ButtonToggleChat_K2Node_ComponentBoundEvent_39_CommonSelectedStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on FrontEnd_C_BndEvt__ButtonToggleChat_K2Node_ComponentBoundEvent_39_CommonSelectedStateChanged__DelegateSignature");
static_assert(sizeof(FrontEnd_C_BndEvt__ButtonToggleChat_K2Node_ComponentBoundEvent_39_CommonSelectedStateChanged__DelegateSignature) == 0x000010, "Wrong size on FrontEnd_C_BndEvt__ButtonToggleChat_K2Node_ComponentBoundEvent_39_CommonSelectedStateChanged__DelegateSignature");
static_assert(offsetof(FrontEnd_C_BndEvt__ButtonToggleChat_K2Node_ComponentBoundEvent_39_CommonSelectedStateChanged__DelegateSignature, Button) == 0x000000, "Member 'FrontEnd_C_BndEvt__ButtonToggleChat_K2Node_ComponentBoundEvent_39_CommonSelectedStateChanged__DelegateSignature::Button' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_BndEvt__ButtonToggleChat_K2Node_ComponentBoundEvent_39_CommonSelectedStateChanged__DelegateSignature, Selected) == 0x000008, "Member 'FrontEnd_C_BndEvt__ButtonToggleChat_K2Node_ComponentBoundEvent_39_CommonSelectedStateChanged__DelegateSignature::Selected' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.HandleQuestsGranted
// 0x0010 (0x0010 - 0x0000)
struct FrontEnd_C_HandleQuestsGranted final
{
public:
	TArray<class UFortQuestItem*>                 Quests;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(FrontEnd_C_HandleQuestsGranted) == 0x000008, "Wrong alignment on FrontEnd_C_HandleQuestsGranted");
static_assert(sizeof(FrontEnd_C_HandleQuestsGranted) == 0x000010, "Wrong size on FrontEnd_C_HandleQuestsGranted");
static_assert(offsetof(FrontEnd_C_HandleQuestsGranted, Quests) == 0x000000, "Member 'FrontEnd_C_HandleQuestsGranted::Quests' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.BndEvt__ButtonToggleChat_K2Node_ComponentBoundEvent_6_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FrontEnd_C_BndEvt__ButtonToggleChat_K2Node_ComponentBoundEvent_6_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEnd_C_BndEvt__ButtonToggleChat_K2Node_ComponentBoundEvent_6_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on FrontEnd_C_BndEvt__ButtonToggleChat_K2Node_ComponentBoundEvent_6_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(FrontEnd_C_BndEvt__ButtonToggleChat_K2Node_ComponentBoundEvent_6_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on FrontEnd_C_BndEvt__ButtonToggleChat_K2Node_ComponentBoundEvent_6_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(FrontEnd_C_BndEvt__ButtonToggleChat_K2Node_ComponentBoundEvent_6_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'FrontEnd_C_BndEvt__ButtonToggleChat_K2Node_ComponentBoundEvent_6_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.Loading Screen Changed
// 0x0001 (0x0001 - 0x0000)
struct FrontEnd_C_Loading_Screen_Changed final
{
public:
	bool                                          IsVisible_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEnd_C_Loading_Screen_Changed) == 0x000001, "Wrong alignment on FrontEnd_C_Loading_Screen_Changed");
static_assert(sizeof(FrontEnd_C_Loading_Screen_Changed) == 0x000001, "Wrong size on FrontEnd_C_Loading_Screen_Changed");
static_assert(offsetof(FrontEnd_C_Loading_Screen_Changed, IsVisible_0) == 0x000000, "Member 'FrontEnd_C_Loading_Screen_Changed::IsVisible_0' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.OnGiftBoxRemoved
// 0x0001 (0x0001 - 0x0000)
struct FrontEnd_C_OnGiftBoxRemoved final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEnd_C_OnGiftBoxRemoved) == 0x000001, "Wrong alignment on FrontEnd_C_OnGiftBoxRemoved");
static_assert(sizeof(FrontEnd_C_OnGiftBoxRemoved) == 0x000001, "Wrong size on FrontEnd_C_OnGiftBoxRemoved");
static_assert(offsetof(FrontEnd_C_OnGiftBoxRemoved, bSuccess) == 0x000000, "Member 'FrontEnd_C_OnGiftBoxRemoved::bSuccess' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.HandleClientEvent_NotPlayingEventMovie
// 0x0030 (0x0030 - 0x0000)
struct FrontEnd_C_HandleClientEvent_NotPlayingEventMovie final
{
public:
	class UObject*                                EventSource;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                EventFocus;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortClientEvent                       ClientEvent;                                       // 0x0010(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(FrontEnd_C_HandleClientEvent_NotPlayingEventMovie) == 0x000008, "Wrong alignment on FrontEnd_C_HandleClientEvent_NotPlayingEventMovie");
static_assert(sizeof(FrontEnd_C_HandleClientEvent_NotPlayingEventMovie) == 0x000030, "Wrong size on FrontEnd_C_HandleClientEvent_NotPlayingEventMovie");
static_assert(offsetof(FrontEnd_C_HandleClientEvent_NotPlayingEventMovie, EventSource) == 0x000000, "Member 'FrontEnd_C_HandleClientEvent_NotPlayingEventMovie::EventSource' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleClientEvent_NotPlayingEventMovie, EventFocus) == 0x000008, "Member 'FrontEnd_C_HandleClientEvent_NotPlayingEventMovie::EventFocus' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleClientEvent_NotPlayingEventMovie, ClientEvent) == 0x000010, "Member 'FrontEnd_C_HandleClientEvent_NotPlayingEventMovie::ClientEvent' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.HandleClientEvent_EventMovieFinishedPlaying
// 0x0030 (0x0030 - 0x0000)
struct FrontEnd_C_HandleClientEvent_EventMovieFinishedPlaying final
{
public:
	class UObject*                                EventSource;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                EventFocus;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortClientEvent                       ClientEvent;                                       // 0x0010(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(FrontEnd_C_HandleClientEvent_EventMovieFinishedPlaying) == 0x000008, "Wrong alignment on FrontEnd_C_HandleClientEvent_EventMovieFinishedPlaying");
static_assert(sizeof(FrontEnd_C_HandleClientEvent_EventMovieFinishedPlaying) == 0x000030, "Wrong size on FrontEnd_C_HandleClientEvent_EventMovieFinishedPlaying");
static_assert(offsetof(FrontEnd_C_HandleClientEvent_EventMovieFinishedPlaying, EventSource) == 0x000000, "Member 'FrontEnd_C_HandleClientEvent_EventMovieFinishedPlaying::EventSource' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleClientEvent_EventMovieFinishedPlaying, EventFocus) == 0x000008, "Member 'FrontEnd_C_HandleClientEvent_EventMovieFinishedPlaying::EventFocus' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleClientEvent_EventMovieFinishedPlaying, ClientEvent) == 0x000010, "Member 'FrontEnd_C_HandleClientEvent_EventMovieFinishedPlaying::ClientEvent' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.OnFrontEndVisibilityUpdated
// 0x0003 (0x0003 - 0x0000)
struct FrontEnd_C_OnFrontEndVisibilityUpdated final
{
public:
	bool                                          bHideHeader;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHideFooter;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHideChatWidget;                                   // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEnd_C_OnFrontEndVisibilityUpdated) == 0x000001, "Wrong alignment on FrontEnd_C_OnFrontEndVisibilityUpdated");
static_assert(sizeof(FrontEnd_C_OnFrontEndVisibilityUpdated) == 0x000003, "Wrong size on FrontEnd_C_OnFrontEndVisibilityUpdated");
static_assert(offsetof(FrontEnd_C_OnFrontEndVisibilityUpdated, bHideHeader) == 0x000000, "Member 'FrontEnd_C_OnFrontEndVisibilityUpdated::bHideHeader' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_OnFrontEndVisibilityUpdated, bHideFooter) == 0x000001, "Member 'FrontEnd_C_OnFrontEndVisibilityUpdated::bHideFooter' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_OnFrontEndVisibilityUpdated, bHideChatWidget) == 0x000002, "Member 'FrontEnd_C_OnFrontEndVisibilityUpdated::bHideChatWidget' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.HandleClientEvent_FinishedModalWindows
// 0x0030 (0x0030 - 0x0000)
struct FrontEnd_C_HandleClientEvent_FinishedModalWindows final
{
public:
	class UObject*                                EventSource;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                EventFocus;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortClientEvent                       ClientEvent;                                       // 0x0010(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(FrontEnd_C_HandleClientEvent_FinishedModalWindows) == 0x000008, "Wrong alignment on FrontEnd_C_HandleClientEvent_FinishedModalWindows");
static_assert(sizeof(FrontEnd_C_HandleClientEvent_FinishedModalWindows) == 0x000030, "Wrong size on FrontEnd_C_HandleClientEvent_FinishedModalWindows");
static_assert(offsetof(FrontEnd_C_HandleClientEvent_FinishedModalWindows, EventSource) == 0x000000, "Member 'FrontEnd_C_HandleClientEvent_FinishedModalWindows::EventSource' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleClientEvent_FinishedModalWindows, EventFocus) == 0x000008, "Member 'FrontEnd_C_HandleClientEvent_FinishedModalWindows::EventFocus' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleClientEvent_FinishedModalWindows, ClientEvent) == 0x000010, "Member 'FrontEnd_C_HandleClientEvent_FinishedModalWindows::ClientEvent' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.OnExitState
// 0x0001 (0x0001 - 0x0000)
struct FrontEnd_C_OnExitState final
{
public:
	EFortUIState                                  NextUIState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEnd_C_OnExitState) == 0x000001, "Wrong alignment on FrontEnd_C_OnExitState");
static_assert(sizeof(FrontEnd_C_OnExitState) == 0x000001, "Wrong size on FrontEnd_C_OnExitState");
static_assert(offsetof(FrontEnd_C_OnExitState, NextUIState) == 0x000000, "Member 'FrontEnd_C_OnExitState::NextUIState' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.PushContentWidgetInternal
// 0x0010 (0x0010 - 0x0000)
struct FrontEnd_C_PushContentWidgetInternal final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContentPushState                      State;                                             // 0x0008(0x0003)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(FrontEnd_C_PushContentWidgetInternal) == 0x000008, "Wrong alignment on FrontEnd_C_PushContentWidgetInternal");
static_assert(sizeof(FrontEnd_C_PushContentWidgetInternal) == 0x000010, "Wrong size on FrontEnd_C_PushContentWidgetInternal");
static_assert(offsetof(FrontEnd_C_PushContentWidgetInternal, Widget) == 0x000000, "Member 'FrontEnd_C_PushContentWidgetInternal::Widget' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_PushContentWidgetInternal, State) == 0x000008, "Member 'FrontEnd_C_PushContentWidgetInternal::State' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.HandleQuestsCompleted
// 0x0010 (0x0010 - 0x0000)
struct FrontEnd_C_HandleQuestsCompleted final
{
public:
	TArray<class UFortQuestItem*>                 Quests;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(FrontEnd_C_HandleQuestsCompleted) == 0x000008, "Wrong alignment on FrontEnd_C_HandleQuestsCompleted");
static_assert(sizeof(FrontEnd_C_HandleQuestsCompleted) == 0x000010, "Wrong size on FrontEnd_C_HandleQuestsCompleted");
static_assert(offsetof(FrontEnd_C_HandleQuestsCompleted, Quests) == 0x000000, "Member 'FrontEnd_C_HandleQuestsCompleted::Quests' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.On_MainAreaDarken_MouseButtonUp
// 0x0218 (0x0218 - 0x0000)
struct FrontEnd_C_On_MainAreaDarken_MouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(FrontEnd_C_On_MainAreaDarken_MouseButtonUp) == 0x000008, "Wrong alignment on FrontEnd_C_On_MainAreaDarken_MouseButtonUp");
static_assert(sizeof(FrontEnd_C_On_MainAreaDarken_MouseButtonUp) == 0x000218, "Wrong size on FrontEnd_C_On_MainAreaDarken_MouseButtonUp");
static_assert(offsetof(FrontEnd_C_On_MainAreaDarken_MouseButtonUp, MyGeometry) == 0x000000, "Member 'FrontEnd_C_On_MainAreaDarken_MouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_On_MainAreaDarken_MouseButtonUp, MouseEvent) == 0x000038, "Member 'FrontEnd_C_On_MainAreaDarken_MouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_On_MainAreaDarken_MouseButtonUp, ReturnValue) == 0x0000A8, "Member 'FrontEnd_C_On_MainAreaDarken_MouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_On_MainAreaDarken_MouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'FrontEnd_C_On_MainAreaDarken_MouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.HandleMainMenuStateChanged
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FrontEnd_C_HandleMainMenuStateChanged final
{
public:
	bool                                          Index_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetActiveTab_ActiveTab;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select1_Default;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0020(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEnd_C_HandleMainMenuStateChanged) == 0x000008, "Wrong alignment on FrontEnd_C_HandleMainMenuStateChanged");
static_assert(sizeof(FrontEnd_C_HandleMainMenuStateChanged) == 0x000030, "Wrong size on FrontEnd_C_HandleMainMenuStateChanged");
static_assert(offsetof(FrontEnd_C_HandleMainMenuStateChanged, Index_0) == 0x000000, "Member 'FrontEnd_C_HandleMainMenuStateChanged::Index_0' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleMainMenuStateChanged, Temp_bool_Variable) == 0x000001, "Member 'FrontEnd_C_HandleMainMenuStateChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleMainMenuStateChanged, Temp_float_Variable) == 0x000004, "Member 'FrontEnd_C_HandleMainMenuStateChanged::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleMainMenuStateChanged, Temp_float_Variable1) == 0x000008, "Member 'FrontEnd_C_HandleMainMenuStateChanged::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleMainMenuStateChanged, Temp_bool_Variable1) == 0x00000C, "Member 'FrontEnd_C_HandleMainMenuStateChanged::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleMainMenuStateChanged, Temp_byte_Variable) == 0x00000D, "Member 'FrontEnd_C_HandleMainMenuStateChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleMainMenuStateChanged, Temp_byte_Variable1) == 0x00000E, "Member 'FrontEnd_C_HandleMainMenuStateChanged::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleMainMenuStateChanged, CallFunc_GetActiveTab_ActiveTab) == 0x000010, "Member 'FrontEnd_C_HandleMainMenuStateChanged::CallFunc_GetActiveTab_ActiveTab' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleMainMenuStateChanged, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000018, "Member 'FrontEnd_C_HandleMainMenuStateChanged::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleMainMenuStateChanged, K2Node_Select_Default) == 0x000019, "Member 'FrontEnd_C_HandleMainMenuStateChanged::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleMainMenuStateChanged, K2Node_Select1_Default) == 0x00001C, "Member 'FrontEnd_C_HandleMainMenuStateChanged::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleMainMenuStateChanged, K2Node_MakeStruct_LinearColor) == 0x000020, "Member 'FrontEnd_C_HandleMainMenuStateChanged::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.RegisterScriptedActions
// 0x0018 (0x0018 - 0x0000)
struct FrontEnd_C_RegisterScriptedActions final
{
public:
	EFortUIState                                  InPreviousUIState;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESubGame                                      CallFunc_GetSubGame_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue12;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEnd_C_RegisterScriptedActions) == 0x000008, "Wrong alignment on FrontEnd_C_RegisterScriptedActions");
static_assert(sizeof(FrontEnd_C_RegisterScriptedActions) == 0x000018, "Wrong size on FrontEnd_C_RegisterScriptedActions");
static_assert(offsetof(FrontEnd_C_RegisterScriptedActions, InPreviousUIState) == 0x000000, "Member 'FrontEnd_C_RegisterScriptedActions::InPreviousUIState' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_RegisterScriptedActions, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'FrontEnd_C_RegisterScriptedActions::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_RegisterScriptedActions, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000002, "Member 'FrontEnd_C_RegisterScriptedActions::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_RegisterScriptedActions, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'FrontEnd_C_RegisterScriptedActions::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_RegisterScriptedActions, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'FrontEnd_C_RegisterScriptedActions::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_RegisterScriptedActions, CallFunc_GetSubGame_ReturnValue) == 0x000010, "Member 'FrontEnd_C_RegisterScriptedActions::CallFunc_GetSubGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_RegisterScriptedActions, CallFunc_EqualEqual_ByteByte_ReturnValue12) == 0x000011, "Member 'FrontEnd_C_RegisterScriptedActions::CallFunc_EqualEqual_ByteByte_ReturnValue12' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.PushContentWidget_Internal
// 0x0010 (0x0010 - 0x0000)
struct FrontEnd_C_PushContentWidget_Internal final
{
public:
	class UWidget*                                InWidget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideHeader;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideFooter;                                        // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEnd_C_PushContentWidget_Internal) == 0x000008, "Wrong alignment on FrontEnd_C_PushContentWidget_Internal");
static_assert(sizeof(FrontEnd_C_PushContentWidget_Internal) == 0x000010, "Wrong size on FrontEnd_C_PushContentWidget_Internal");
static_assert(offsetof(FrontEnd_C_PushContentWidget_Internal, InWidget) == 0x000000, "Member 'FrontEnd_C_PushContentWidget_Internal::InWidget' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_PushContentWidget_Internal, HideHeader) == 0x000008, "Member 'FrontEnd_C_PushContentWidget_Internal::HideHeader' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_PushContentWidget_Internal, HideFooter) == 0x000009, "Member 'FrontEnd_C_PushContentWidget_Internal::HideFooter' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.SetHeaderVisibility
// 0x0005 (0x0005 - 0x0000)
struct FrontEnd_C_SetHeaderVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEnd_C_SetHeaderVisibility) == 0x000001, "Wrong alignment on FrontEnd_C_SetHeaderVisibility");
static_assert(sizeof(FrontEnd_C_SetHeaderVisibility) == 0x000005, "Wrong size on FrontEnd_C_SetHeaderVisibility");
static_assert(offsetof(FrontEnd_C_SetHeaderVisibility, Visible) == 0x000000, "Member 'FrontEnd_C_SetHeaderVisibility::Visible' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_SetHeaderVisibility, Temp_bool_Variable) == 0x000001, "Member 'FrontEnd_C_SetHeaderVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_SetHeaderVisibility, Temp_byte_Variable) == 0x000002, "Member 'FrontEnd_C_SetHeaderVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_SetHeaderVisibility, Temp_byte_Variable1) == 0x000003, "Member 'FrontEnd_C_SetHeaderVisibility::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_SetHeaderVisibility, K2Node_Select_Default) == 0x000004, "Member 'FrontEnd_C_SetHeaderVisibility::K2Node_Select_Default' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.SetFooterVisibility
// 0x0001 (0x0001 - 0x0000)
struct FrontEnd_C_SetFooterVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEnd_C_SetFooterVisibility) == 0x000001, "Wrong alignment on FrontEnd_C_SetFooterVisibility");
static_assert(sizeof(FrontEnd_C_SetFooterVisibility) == 0x000001, "Wrong size on FrontEnd_C_SetFooterVisibility");
static_assert(offsetof(FrontEnd_C_SetFooterVisibility, Visible) == 0x000000, "Member 'FrontEnd_C_SetFooterVisibility::Visible' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.HandleEnterFrontend
// 0x0038 (0x0038 - 0x0000)
struct FrontEnd_C_HandleEnterFrontend final
{
public:
	EFortUIState                                  UIState;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortUIState                                  LocalUIState;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESubGame                                      CallFunc_GetSubGame_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue1;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue12;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortPartyContext*                      CallFunc_GetContext_ReturnValue123;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue1234;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEnd_C_HandleEnterFrontend) == 0x000008, "Wrong alignment on FrontEnd_C_HandleEnterFrontend");
static_assert(sizeof(FrontEnd_C_HandleEnterFrontend) == 0x000038, "Wrong size on FrontEnd_C_HandleEnterFrontend");
static_assert(offsetof(FrontEnd_C_HandleEnterFrontend, UIState) == 0x000000, "Member 'FrontEnd_C_HandleEnterFrontend::UIState' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleEnterFrontend, LocalUIState) == 0x000001, "Member 'FrontEnd_C_HandleEnterFrontend::LocalUIState' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleEnterFrontend, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'FrontEnd_C_HandleEnterFrontend::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleEnterFrontend, CallFunc_GetSubGame_ReturnValue) == 0x000010, "Member 'FrontEnd_C_HandleEnterFrontend::CallFunc_GetSubGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleEnterFrontend, CallFunc_GetContext_ReturnValue1) == 0x000018, "Member 'FrontEnd_C_HandleEnterFrontend::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleEnterFrontend, CallFunc_GetContext_ReturnValue12) == 0x000020, "Member 'FrontEnd_C_HandleEnterFrontend::CallFunc_GetContext_ReturnValue12' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleEnterFrontend, CallFunc_GetContext_ReturnValue123) == 0x000028, "Member 'FrontEnd_C_HandleEnterFrontend::CallFunc_GetContext_ReturnValue123' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleEnterFrontend, CallFunc_GetContext_ReturnValue1234) == 0x000030, "Member 'FrontEnd_C_HandleEnterFrontend::CallFunc_GetContext_ReturnValue1234' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.BindDelegates
// 0x0098 (0x0098 - 0x0000)
struct FrontEnd_C_BindDelegates final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UFortQuestItem* Quest, TArray<struct FFortItemInstanceQuantityPair>& Rewards)> K2Node_CreateDelegate_OutputDelegate12;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(TArray<class UFortQuestItem*>& Quests)> K2Node_CreateDelegate_OutputDelegate123;           // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(TArray<class UFortQuestItem*>& Quests)> K2Node_CreateDelegate_OutputDelegate1234;          // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate12345;         // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMatchmakingContext*                CallFunc_GetContext_ReturnValue1;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue12;                 // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Open)>                    K2Node_CreateDelegate_OutputDelegate123456;        // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(FrontEnd_C_BindDelegates) == 0x000008, "Wrong alignment on FrontEnd_C_BindDelegates");
static_assert(sizeof(FrontEnd_C_BindDelegates) == 0x000098, "Wrong size on FrontEnd_C_BindDelegates");
static_assert(offsetof(FrontEnd_C_BindDelegates, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'FrontEnd_C_BindDelegates::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_BindDelegates, CallFunc_GetUINavigationManager_ReturnValue) == 0x000010, "Member 'FrontEnd_C_BindDelegates::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_BindDelegates, K2Node_CreateDelegate_OutputDelegate1) == 0x000018, "Member 'FrontEnd_C_BindDelegates::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_BindDelegates, K2Node_CreateDelegate_OutputDelegate12) == 0x000028, "Member 'FrontEnd_C_BindDelegates::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_BindDelegates, K2Node_CreateDelegate_OutputDelegate123) == 0x000038, "Member 'FrontEnd_C_BindDelegates::K2Node_CreateDelegate_OutputDelegate123' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_BindDelegates, K2Node_CreateDelegate_OutputDelegate1234) == 0x000048, "Member 'FrontEnd_C_BindDelegates::K2Node_CreateDelegate_OutputDelegate1234' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_BindDelegates, K2Node_CreateDelegate_OutputDelegate12345) == 0x000058, "Member 'FrontEnd_C_BindDelegates::K2Node_CreateDelegate_OutputDelegate12345' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_BindDelegates, CallFunc_GetContext_ReturnValue) == 0x000068, "Member 'FrontEnd_C_BindDelegates::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_BindDelegates, CallFunc_GetContext_ReturnValue1) == 0x000070, "Member 'FrontEnd_C_BindDelegates::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_BindDelegates, CallFunc_GetQuestManager_ReturnValue) == 0x000078, "Member 'FrontEnd_C_BindDelegates::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_BindDelegates, CallFunc_GetContext_ReturnValue12) == 0x000080, "Member 'FrontEnd_C_BindDelegates::CallFunc_GetContext_ReturnValue12' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_BindDelegates, K2Node_CreateDelegate_OutputDelegate123456) == 0x000088, "Member 'FrontEnd_C_BindDelegates::K2Node_CreateDelegate_OutputDelegate123456' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.HandleQuestRewardClaimed
// 0x0038 (0x0038 - 0x0000)
struct FrontEnd_C_HandleQuestRewardClaimed final
{
public:
	class UFortQuestItem*                         Quest;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFortItemInstanceQuantityPair>  Rewards;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UFortItemDefinition*                    CallFunc_GetItemDefinitionBP_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItemDefinition*               K2Node_DynamicCast_AsFort_Quest_Item_Definition;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortQuestType                                CallFunc_GetQuestType_ReturnValue;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEnd_C_HandleQuestRewardClaimed) == 0x000008, "Wrong alignment on FrontEnd_C_HandleQuestRewardClaimed");
static_assert(sizeof(FrontEnd_C_HandleQuestRewardClaimed) == 0x000038, "Wrong size on FrontEnd_C_HandleQuestRewardClaimed");
static_assert(offsetof(FrontEnd_C_HandleQuestRewardClaimed, Quest) == 0x000000, "Member 'FrontEnd_C_HandleQuestRewardClaimed::Quest' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleQuestRewardClaimed, Rewards) == 0x000008, "Member 'FrontEnd_C_HandleQuestRewardClaimed::Rewards' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleQuestRewardClaimed, CallFunc_GetItemDefinitionBP_ReturnValue) == 0x000018, "Member 'FrontEnd_C_HandleQuestRewardClaimed::CallFunc_GetItemDefinitionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleQuestRewardClaimed, CallFunc_GetContext_ReturnValue) == 0x000020, "Member 'FrontEnd_C_HandleQuestRewardClaimed::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleQuestRewardClaimed, K2Node_DynamicCast_AsFort_Quest_Item_Definition) == 0x000028, "Member 'FrontEnd_C_HandleQuestRewardClaimed::K2Node_DynamicCast_AsFort_Quest_Item_Definition' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleQuestRewardClaimed, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'FrontEnd_C_HandleQuestRewardClaimed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleQuestRewardClaimed, CallFunc_GetQuestType_ReturnValue) == 0x000031, "Member 'FrontEnd_C_HandleQuestRewardClaimed::CallFunc_GetQuestType_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleQuestRewardClaimed, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000032, "Member 'FrontEnd_C_HandleQuestRewardClaimed::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.PopContentWidgetInternal
// 0x0018 (0x0018 - 0x0000)
struct FrontEnd_C_PopContentWidgetInternal final
{
public:
	struct FContentPushState                      State;                                             // 0x0000(0x0003)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_PopWigdet_ReturnValue;                    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEnd_C_PopContentWidgetInternal) == 0x000008, "Wrong alignment on FrontEnd_C_PopContentWidgetInternal");
static_assert(sizeof(FrontEnd_C_PopContentWidgetInternal) == 0x000018, "Wrong size on FrontEnd_C_PopContentWidgetInternal");
static_assert(offsetof(FrontEnd_C_PopContentWidgetInternal, State) == 0x000000, "Member 'FrontEnd_C_PopContentWidgetInternal::State' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_PopContentWidgetInternal, ReturnValue) == 0x000008, "Member 'FrontEnd_C_PopContentWidgetInternal::ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_PopContentWidgetInternal, CallFunc_PopWigdet_ReturnValue) == 0x000010, "Member 'FrontEnd_C_PopContentWidgetInternal::CallFunc_PopWigdet_ReturnValue' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.HandlePopContentStackOp
// 0x0030 (0x0030 - 0x0000)
struct FrontEnd_C_HandlePopContentStackOp final
{
public:
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UWidget* ActiveWidget, int32 ActiveWidgetIndex)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_PopContentWidget_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEnd_C_HandlePopContentStackOp) == 0x000008, "Wrong alignment on FrontEnd_C_HandlePopContentStackOp");
static_assert(sizeof(FrontEnd_C_HandlePopContentStackOp) == 0x000030, "Wrong size on FrontEnd_C_HandlePopContentStackOp");
static_assert(offsetof(FrontEnd_C_HandlePopContentStackOp, CallFunc_GetUINavigationManager_ReturnValue) == 0x000000, "Member 'FrontEnd_C_HandlePopContentStackOp::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandlePopContentStackOp, CallFunc_GetChildrenCount_ReturnValue) == 0x000008, "Member 'FrontEnd_C_HandlePopContentStackOp::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandlePopContentStackOp, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'FrontEnd_C_HandlePopContentStackOp::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandlePopContentStackOp, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'FrontEnd_C_HandlePopContentStackOp::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandlePopContentStackOp, CallFunc_PopContentWidget_ReturnValue) == 0x000028, "Member 'FrontEnd_C_HandlePopContentStackOp::CallFunc_PopContentWidget_ReturnValue' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.UnbindDelegates
// 0x00A0 (0x00A0 - 0x0000)
struct FrontEnd_C_UnbindDelegates final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate12;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UFortQuestItem* Quest, TArray<struct FFortItemInstanceQuantityPair>& Rewards)> K2Node_CreateDelegate_OutputDelegate123;           // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(TArray<class UFortQuestItem*>& Quests)> K2Node_CreateDelegate_OutputDelegate1234;          // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(TArray<class UFortQuestItem*>& Quests)> K2Node_CreateDelegate_OutputDelegate12345;         // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue1;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMatchmakingContext*                CallFunc_GetContext_ReturnValue12;                 // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Open)>                    K2Node_CreateDelegate_OutputDelegate123456;        // 0x0090(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(FrontEnd_C_UnbindDelegates) == 0x000008, "Wrong alignment on FrontEnd_C_UnbindDelegates");
static_assert(sizeof(FrontEnd_C_UnbindDelegates) == 0x0000A0, "Wrong size on FrontEnd_C_UnbindDelegates");
static_assert(offsetof(FrontEnd_C_UnbindDelegates, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'FrontEnd_C_UnbindDelegates::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UnbindDelegates, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'FrontEnd_C_UnbindDelegates::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UnbindDelegates, K2Node_CreateDelegate_OutputDelegate1) == 0x000018, "Member 'FrontEnd_C_UnbindDelegates::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UnbindDelegates, CallFunc_GetUINavigationManager_ReturnValue) == 0x000028, "Member 'FrontEnd_C_UnbindDelegates::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UnbindDelegates, K2Node_CreateDelegate_OutputDelegate12) == 0x000030, "Member 'FrontEnd_C_UnbindDelegates::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UnbindDelegates, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'FrontEnd_C_UnbindDelegates::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UnbindDelegates, K2Node_CreateDelegate_OutputDelegate123) == 0x000048, "Member 'FrontEnd_C_UnbindDelegates::K2Node_CreateDelegate_OutputDelegate123' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UnbindDelegates, K2Node_CreateDelegate_OutputDelegate1234) == 0x000058, "Member 'FrontEnd_C_UnbindDelegates::K2Node_CreateDelegate_OutputDelegate1234' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UnbindDelegates, K2Node_CreateDelegate_OutputDelegate12345) == 0x000068, "Member 'FrontEnd_C_UnbindDelegates::K2Node_CreateDelegate_OutputDelegate12345' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UnbindDelegates, CallFunc_GetContext_ReturnValue1) == 0x000078, "Member 'FrontEnd_C_UnbindDelegates::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UnbindDelegates, CallFunc_GetContext_ReturnValue12) == 0x000080, "Member 'FrontEnd_C_UnbindDelegates::CallFunc_GetContext_ReturnValue12' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UnbindDelegates, CallFunc_GetQuestManager_ReturnValue) == 0x000088, "Member 'FrontEnd_C_UnbindDelegates::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UnbindDelegates, K2Node_CreateDelegate_OutputDelegate123456) == 0x000090, "Member 'FrontEnd_C_UnbindDelegates::K2Node_CreateDelegate_OutputDelegate123456' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.HandleWidgetStackChanged
// 0x0050 (0x0050 - 0x0000)
struct FrontEnd_C_HandleWidgetStackChanged final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ActiveWidgetIndex;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UWidget* ActiveWidget, int32 ActiveWidgetIndex)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_PopContentWidget_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPendingNavigationOp_ReturnValue;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEnd_C_HandleWidgetStackChanged) == 0x000008, "Wrong alignment on FrontEnd_C_HandleWidgetStackChanged");
static_assert(sizeof(FrontEnd_C_HandleWidgetStackChanged) == 0x000050, "Wrong size on FrontEnd_C_HandleWidgetStackChanged");
static_assert(offsetof(FrontEnd_C_HandleWidgetStackChanged, Widget) == 0x000000, "Member 'FrontEnd_C_HandleWidgetStackChanged::Widget' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleWidgetStackChanged, ActiveWidgetIndex) == 0x000008, "Member 'FrontEnd_C_HandleWidgetStackChanged::ActiveWidgetIndex' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleWidgetStackChanged, CallFunc_GetUINavigationManager_ReturnValue) == 0x000010, "Member 'FrontEnd_C_HandleWidgetStackChanged::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleWidgetStackChanged, CallFunc_GetChildrenCount_ReturnValue) == 0x000018, "Member 'FrontEnd_C_HandleWidgetStackChanged::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleWidgetStackChanged, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'FrontEnd_C_HandleWidgetStackChanged::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleWidgetStackChanged, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'FrontEnd_C_HandleWidgetStackChanged::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleWidgetStackChanged, CallFunc_PopContentWidget_ReturnValue) == 0x000038, "Member 'FrontEnd_C_HandleWidgetStackChanged::CallFunc_PopContentWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleWidgetStackChanged, CallFunc_GetUINavigationManager_ReturnValue1) == 0x000040, "Member 'FrontEnd_C_HandleWidgetStackChanged::CallFunc_GetUINavigationManager_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_HandleWidgetStackChanged, CallFunc_HasPendingNavigationOp_ReturnValue) == 0x000048, "Member 'FrontEnd_C_HandleWidgetStackChanged::CallFunc_HasPendingNavigationOp_ReturnValue' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.GetActiveTab
// 0x0028 (0x0028 - 0x0000)
struct FrontEnd_C_GetActiveTab final
{
public:
	class FName                                   ActiveTab;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMainTabsScreen_C*                      K2Node_DynamicCast_AsMain_Tabs_Screen;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetActiveTab_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEnd_C_GetActiveTab) == 0x000008, "Wrong alignment on FrontEnd_C_GetActiveTab");
static_assert(sizeof(FrontEnd_C_GetActiveTab) == 0x000028, "Wrong size on FrontEnd_C_GetActiveTab");
static_assert(offsetof(FrontEnd_C_GetActiveTab, ActiveTab) == 0x000000, "Member 'FrontEnd_C_GetActiveTab::ActiveTab' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_GetActiveTab, CallFunc_GetChildAt_ReturnValue) == 0x000008, "Member 'FrontEnd_C_GetActiveTab::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_GetActiveTab, K2Node_DynamicCast_AsMain_Tabs_Screen) == 0x000010, "Member 'FrontEnd_C_GetActiveTab::K2Node_DynamicCast_AsMain_Tabs_Screen' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_GetActiveTab, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'FrontEnd_C_GetActiveTab::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_GetActiveTab, CallFunc_GetActiveTab_ReturnValue) == 0x000020, "Member 'FrontEnd_C_GetActiveTab::CallFunc_GetActiveTab_ReturnValue' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.InitForSubGame
// 0x0058 (0x0058 - 0x0000)
struct FrontEnd_C_InitForSubGame final
{
public:
	bool                                          CallFunc_PlayEventMovieIfNecessary_PlayingEventMovie; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortPartyContext*                      CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAthenaTabsScreen_C*                    CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldMcpPartyInvitesBeEnabled_ReturnValue; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortPartyContext*                      CallFunc_GetContext_ReturnValue1;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldMcpPartyInvitesBeEnabled_ReturnValue1; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue1;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue12;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMainTabsScreen_C*                      CallFunc_Create_ReturnValue1;                      // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortUIFeatureState                           CallFunc_GetFeatureState_OutFeatureState;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortUIFeatureStateReason                     CallFunc_GetFeatureState_OutReason;                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEnd_C_InitForSubGame) == 0x000008, "Wrong alignment on FrontEnd_C_InitForSubGame");
static_assert(sizeof(FrontEnd_C_InitForSubGame) == 0x000058, "Wrong size on FrontEnd_C_InitForSubGame");
static_assert(offsetof(FrontEnd_C_InitForSubGame, CallFunc_PlayEventMovieIfNecessary_PlayingEventMovie) == 0x000000, "Member 'FrontEnd_C_InitForSubGame::CallFunc_PlayEventMovieIfNecessary_PlayingEventMovie' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_InitForSubGame, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'FrontEnd_C_InitForSubGame::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_InitForSubGame, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'FrontEnd_C_InitForSubGame::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_InitForSubGame, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'FrontEnd_C_InitForSubGame::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_InitForSubGame, CallFunc_Create_ReturnValue) == 0x000018, "Member 'FrontEnd_C_InitForSubGame::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_InitForSubGame, CallFunc_ShouldMcpPartyInvitesBeEnabled_ReturnValue) == 0x000020, "Member 'FrontEnd_C_InitForSubGame::CallFunc_ShouldMcpPartyInvitesBeEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_InitForSubGame, CallFunc_GetContext_ReturnValue1) == 0x000028, "Member 'FrontEnd_C_InitForSubGame::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_InitForSubGame, CallFunc_ShouldMcpPartyInvitesBeEnabled_ReturnValue1) == 0x000030, "Member 'FrontEnd_C_InitForSubGame::CallFunc_ShouldMcpPartyInvitesBeEnabled_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_InitForSubGame, CallFunc_GetOwningPlayer_ReturnValue1) == 0x000038, "Member 'FrontEnd_C_InitForSubGame::CallFunc_GetOwningPlayer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_InitForSubGame, CallFunc_GetContext_ReturnValue12) == 0x000040, "Member 'FrontEnd_C_InitForSubGame::CallFunc_GetContext_ReturnValue12' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_InitForSubGame, CallFunc_Create_ReturnValue1) == 0x000048, "Member 'FrontEnd_C_InitForSubGame::CallFunc_Create_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_InitForSubGame, CallFunc_GetFeatureState_OutFeatureState) == 0x000050, "Member 'FrontEnd_C_InitForSubGame::CallFunc_GetFeatureState_OutFeatureState' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_InitForSubGame, CallFunc_GetFeatureState_OutReason) == 0x000051, "Member 'FrontEnd_C_InitForSubGame::CallFunc_GetFeatureState_OutReason' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_InitForSubGame, K2Node_SwitchEnum1_CmpSuccess) == 0x000052, "Member 'FrontEnd_C_InitForSubGame::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.SetChatWidgetVisibility
// 0x0018 (0x0018 - 0x0000)
struct FrontEnd_C_SetChatWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortUIFeatureState                           CallFunc_GetFeatureState_OutFeatureState;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortUIFeatureStateReason                     CallFunc_GetFeatureState_OutReason;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEnd_C_SetChatWidgetVisibility) == 0x000008, "Wrong alignment on FrontEnd_C_SetChatWidgetVisibility");
static_assert(sizeof(FrontEnd_C_SetChatWidgetVisibility) == 0x000018, "Wrong size on FrontEnd_C_SetChatWidgetVisibility");
static_assert(offsetof(FrontEnd_C_SetChatWidgetVisibility, Visible) == 0x000000, "Member 'FrontEnd_C_SetChatWidgetVisibility::Visible' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_SetChatWidgetVisibility, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'FrontEnd_C_SetChatWidgetVisibility::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_SetChatWidgetVisibility, CallFunc_GetFeatureState_OutFeatureState) == 0x000010, "Member 'FrontEnd_C_SetChatWidgetVisibility::CallFunc_GetFeatureState_OutFeatureState' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_SetChatWidgetVisibility, CallFunc_GetFeatureState_OutReason) == 0x000011, "Member 'FrontEnd_C_SetChatWidgetVisibility::CallFunc_GetFeatureState_OutReason' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_SetChatWidgetVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'FrontEnd_C_SetChatWidgetVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_SetChatWidgetVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'FrontEnd_C_SetChatWidgetVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.UpdateVisibilityState
// 0x0006 (0x0006 - 0x0000)
struct FrontEnd_C_UpdateVisibilityState final
{
public:
	bool                                          HideHeader;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideFooter;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideChat;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue12;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEnd_C_UpdateVisibilityState) == 0x000001, "Wrong alignment on FrontEnd_C_UpdateVisibilityState");
static_assert(sizeof(FrontEnd_C_UpdateVisibilityState) == 0x000006, "Wrong size on FrontEnd_C_UpdateVisibilityState");
static_assert(offsetof(FrontEnd_C_UpdateVisibilityState, HideHeader) == 0x000000, "Member 'FrontEnd_C_UpdateVisibilityState::HideHeader' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UpdateVisibilityState, HideFooter) == 0x000001, "Member 'FrontEnd_C_UpdateVisibilityState::HideFooter' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UpdateVisibilityState, HideChat) == 0x000002, "Member 'FrontEnd_C_UpdateVisibilityState::HideChat' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UpdateVisibilityState, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'FrontEnd_C_UpdateVisibilityState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UpdateVisibilityState, CallFunc_Not_PreBool_ReturnValue1) == 0x000004, "Member 'FrontEnd_C_UpdateVisibilityState::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UpdateVisibilityState, CallFunc_Not_PreBool_ReturnValue12) == 0x000005, "Member 'FrontEnd_C_UpdateVisibilityState::CallFunc_Not_PreBool_ReturnValue12' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.NeedsToPlayEventMovie
// 0x0002 (0x0002 - 0x0000)
struct FrontEnd_C_NeedsToPlayEventMovie final
{
public:
	bool                                          NeedsToPlayEventMovie_0;                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEnd_C_NeedsToPlayEventMovie) == 0x000001, "Wrong alignment on FrontEnd_C_NeedsToPlayEventMovie");
static_assert(sizeof(FrontEnd_C_NeedsToPlayEventMovie) == 0x000002, "Wrong size on FrontEnd_C_NeedsToPlayEventMovie");
static_assert(offsetof(FrontEnd_C_NeedsToPlayEventMovie, NeedsToPlayEventMovie_0) == 0x000000, "Member 'FrontEnd_C_NeedsToPlayEventMovie::NeedsToPlayEventMovie_0' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_NeedsToPlayEventMovie, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'FrontEnd_C_NeedsToPlayEventMovie::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.PlayEventMovieIfNecessary
// 0x0018 (0x0018 - 0x0000)
struct FrontEnd_C_PlayEventMovieIfNecessary final
{
public:
	bool                                          PlayingEventMovie;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESubGame                                      CallFunc_GetSubGame_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NeedsToPlayEventMovie_NeedsToPlayEventMovie; // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEnd_C_PlayEventMovieIfNecessary) == 0x000008, "Wrong alignment on FrontEnd_C_PlayEventMovieIfNecessary");
static_assert(sizeof(FrontEnd_C_PlayEventMovieIfNecessary) == 0x000018, "Wrong size on FrontEnd_C_PlayEventMovieIfNecessary");
static_assert(offsetof(FrontEnd_C_PlayEventMovieIfNecessary, PlayingEventMovie) == 0x000000, "Member 'FrontEnd_C_PlayEventMovieIfNecessary::PlayingEventMovie' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_PlayEventMovieIfNecessary, Temp_bool_Variable) == 0x000001, "Member 'FrontEnd_C_PlayEventMovieIfNecessary::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_PlayEventMovieIfNecessary, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'FrontEnd_C_PlayEventMovieIfNecessary::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_PlayEventMovieIfNecessary, CallFunc_GetSubGame_ReturnValue) == 0x000010, "Member 'FrontEnd_C_PlayEventMovieIfNecessary::CallFunc_GetSubGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_PlayEventMovieIfNecessary, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'FrontEnd_C_PlayEventMovieIfNecessary::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_PlayEventMovieIfNecessary, CallFunc_NeedsToPlayEventMovie_NeedsToPlayEventMovie) == 0x000012, "Member 'FrontEnd_C_PlayEventMovieIfNecessary::CallFunc_NeedsToPlayEventMovie_NeedsToPlayEventMovie' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.SetOverlayTitleBarVisibility
// 0x0001 (0x0001 - 0x0000)
struct FrontEnd_C_SetOverlayTitleBarVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEnd_C_SetOverlayTitleBarVisibility) == 0x000001, "Wrong alignment on FrontEnd_C_SetOverlayTitleBarVisibility");
static_assert(sizeof(FrontEnd_C_SetOverlayTitleBarVisibility) == 0x000001, "Wrong size on FrontEnd_C_SetOverlayTitleBarVisibility");
static_assert(offsetof(FrontEnd_C_SetOverlayTitleBarVisibility, Visible) == 0x000000, "Member 'FrontEnd_C_SetOverlayTitleBarVisibility::Visible' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.UpdatePttVisibility
// 0x0240 (0x0240 - 0x0000)
struct FrontEnd_C_UpdatePttVisibility final
{
public:
	EPTTState                                     PTTState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaHUDContext*                      CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCanPTT_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0018(0x0088)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush1;                     // 0x00A0(0x0088)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush12;                    // 0x0128(0x0088)()
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESubGame                                      CallFunc_GetSubGame_ReturnValue;                   // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPTTState                                     Temp_byte_Variable;                                // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B6[0x2];                                      // 0x01B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_Select_Default;                             // 0x01B8(0x0088)()
};
static_assert(alignof(FrontEnd_C_UpdatePttVisibility) == 0x000008, "Wrong alignment on FrontEnd_C_UpdatePttVisibility");
static_assert(sizeof(FrontEnd_C_UpdatePttVisibility) == 0x000240, "Wrong size on FrontEnd_C_UpdatePttVisibility");
static_assert(offsetof(FrontEnd_C_UpdatePttVisibility, PTTState) == 0x000000, "Member 'FrontEnd_C_UpdatePttVisibility::PTTState' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UpdatePttVisibility, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'FrontEnd_C_UpdatePttVisibility::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UpdatePttVisibility, CallFunc_GetCanPTT_ReturnValue) == 0x000010, "Member 'FrontEnd_C_UpdatePttVisibility::CallFunc_GetCanPTT_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UpdatePttVisibility, K2Node_MakeStruct_SlateBrush) == 0x000018, "Member 'FrontEnd_C_UpdatePttVisibility::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UpdatePttVisibility, K2Node_MakeStruct_SlateBrush1) == 0x0000A0, "Member 'FrontEnd_C_UpdatePttVisibility::K2Node_MakeStruct_SlateBrush1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UpdatePttVisibility, K2Node_MakeStruct_SlateBrush12) == 0x000128, "Member 'FrontEnd_C_UpdatePttVisibility::K2Node_MakeStruct_SlateBrush12' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UpdatePttVisibility, CallFunc_IsMobileGame_ReturnValue) == 0x0001B0, "Member 'FrontEnd_C_UpdatePttVisibility::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UpdatePttVisibility, CallFunc_GetSubGame_ReturnValue) == 0x0001B1, "Member 'FrontEnd_C_UpdatePttVisibility::CallFunc_GetSubGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UpdatePttVisibility, CallFunc_BooleanAND_ReturnValue) == 0x0001B2, "Member 'FrontEnd_C_UpdatePttVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UpdatePttVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001B3, "Member 'FrontEnd_C_UpdatePttVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UpdatePttVisibility, Temp_byte_Variable) == 0x0001B4, "Member 'FrontEnd_C_UpdatePttVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UpdatePttVisibility, CallFunc_BooleanAND_ReturnValue1) == 0x0001B5, "Member 'FrontEnd_C_UpdatePttVisibility::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_UpdatePttVisibility, K2Node_Select_Default) == 0x0001B8, "Member 'FrontEnd_C_UpdatePttVisibility::K2Node_Select_Default' has a wrong offset!");

// Function FrontEnd.FrontEnd_C.InitChatVisibilityButton
// 0x0004 (0x0004 - 0x0000)
struct FrontEnd_C_InitChatVisibilityButton final
{
public:
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESubGame                                      CallFunc_GetSubGame_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEnd_C_InitChatVisibilityButton) == 0x000001, "Wrong alignment on FrontEnd_C_InitChatVisibilityButton");
static_assert(sizeof(FrontEnd_C_InitChatVisibilityButton) == 0x000004, "Wrong size on FrontEnd_C_InitChatVisibilityButton");
static_assert(offsetof(FrontEnd_C_InitChatVisibilityButton, CallFunc_IsMobileGame_ReturnValue) == 0x000000, "Member 'FrontEnd_C_InitChatVisibilityButton::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_InitChatVisibilityButton, CallFunc_GetSubGame_ReturnValue) == 0x000001, "Member 'FrontEnd_C_InitChatVisibilityButton::CallFunc_GetSubGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_InitChatVisibilityButton, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'FrontEnd_C_InitChatVisibilityButton::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEnd_C_InitChatVisibilityButton, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'FrontEnd_C_InitChatVisibilityButton::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}


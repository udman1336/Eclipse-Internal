#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemManagementScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonInput_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function ItemManagementScreen.ItemManagementScreen_C.ExecuteUbergraph_ItemManagementScreen
// 0x0420 (0x0420 - 0x0000)
struct ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue1;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDialogResult                             K2Node_CustomEvent_Result;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_ResultName;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EFortDialogResult Result, class FName ResultName)> K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDialogResult                             Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAsyncAction_ShowConfirmation_NUI*  CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EFortDialogResult Result, class FName ResultName)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate12;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	class FText                                   CallFunc_GetDescriptionText_ItemDescription;       // 0x0078(0x0018)()
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue12;                 // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInZone_ReturnValue;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              K2Node_Event_Item1234;                             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortSchematicItem*                     K2Node_Event_SchematicItem;                        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue123;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue1234;               // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonUIContext*                       CallFunc_GetContext_ReturnValue12345;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputManager*                    CallFunc_GetInputManager_ReturnValue;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemManagementItemTileButton_C*        K2Node_DynamicCast_AsItem_Management_Item_Tile_Button; // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoostsRoot_C*                          CallFunc_Create_ReturnValue;                       // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortPartyContext*                      CallFunc_GetContext_ReturnValue123456;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue1234567;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortTeamMemberInfo                    CallFunc_GetLocalPlayerTeamMemberInfo_LocalPlayerInfo; // 0x0100(0x01F8)(HasGetValueTypeHash)
	EFortCraftFailCause                           CallFunc_CraftSchematic_FailCause;                 // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CraftSchematic_ReturnValue;               // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FA[0x6];                                      // 0x02FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemIconWidget_C*                      CallFunc_Create_ReturnValue1;                      // 0x0300(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDialogResult                             Temp_byte_Variable1;                               // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A[0x6];                                      // 0x030A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortConsumableAccountItem*             K2Node_Event_ConsumableItem;                       // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItem*                              K2Node_Event_Item123;                              // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAsyncAction_MCPContextConsumeItem* CallFunc_ConsumeItem_ReturnValue;                  // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDisplayName_ReturnValue;               // 0x0328(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0340(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0380(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0398(0x0018)()
	class UFortAsyncAction_ShowConfirmation_NUI*  CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue1; // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActivateOnOthers_ReturnValue;          // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue12;                    // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanActivateOnSelf_ReturnValue;            // 0x03BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB[0x5];                                      // 0x03BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              K2Node_Event_Item12;                               // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItem*                              K2Node_Event_Item1;                                // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItem*                              K2Node_Event_Item;                                 // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 ChosenValue, class UFortItem* FortItem)> K2Node_CreateDelegate_OutputDelegate123;           // 0x03D8(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_GetNumInStack_ReturnValue;                // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable1;                               // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemManagementInventoryPanel_C*        K2Node_DynamicCast_AsItem_Management_Inventory_Panel; // 0x03F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortDialogResult                             K2Node_CustomEvent_Result1;                        // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_402[0x6];                                      // 0x0402(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_ResultName1;                    // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedEquipSlot_Slot;                // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0414(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0415(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0416(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Force;                          // 0x0417(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen) == 0x000008, "Wrong alignment on ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen");
static_assert(sizeof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen) == 0x000420, "Wrong size on ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, EntryPoint) == 0x000000, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_GetContext_ReturnValue1) == 0x000010, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, K2Node_CustomEvent_Result) == 0x000018, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, K2Node_CustomEvent_ResultName) == 0x000020, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::K2Node_CustomEvent_ResultName' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, Temp_name_Variable) == 0x000038, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, Temp_byte_Variable) == 0x000040, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue) == 0x000048, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, K2Node_CreateDelegate_OutputDelegate1) == 0x000050, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, K2Node_CreateDelegate_OutputDelegate12) == 0x000068, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_GetDescriptionText_ItemDescription) == 0x000078, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_GetDescriptionText_ItemDescription' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_GetContext_ReturnValue12) == 0x000090, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_GetContext_ReturnValue12' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_IsInZone_ReturnValue) == 0x000098, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_IsInZone_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, K2Node_Event_Item1234) == 0x0000A0, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::K2Node_Event_Item1234' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, K2Node_Event_SchematicItem) == 0x0000A8, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::K2Node_Event_SchematicItem' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_GetContext_ReturnValue123) == 0x0000B0, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_GetContext_ReturnValue123' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_GetContext_ReturnValue1234) == 0x0000B8, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_GetContext_ReturnValue1234' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_GetContext_ReturnValue12345) == 0x0000C0, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_GetContext_ReturnValue12345' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_GetInputManager_ReturnValue) == 0x0000C8, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_GetInputManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000D0, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, K2Node_DynamicCast_AsItem_Management_Item_Tile_Button) == 0x0000D8, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::K2Node_DynamicCast_AsItem_Management_Item_Tile_Button' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_Create_ReturnValue) == 0x0000E8, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_GetContext_ReturnValue123456) == 0x0000F0, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_GetContext_ReturnValue123456' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_GetContext_ReturnValue1234567) == 0x0000F8, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_GetContext_ReturnValue1234567' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_GetLocalPlayerTeamMemberInfo_LocalPlayerInfo) == 0x000100, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_GetLocalPlayerTeamMemberInfo_LocalPlayerInfo' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_CraftSchematic_FailCause) == 0x0002F8, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_CraftSchematic_FailCause' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_CraftSchematic_ReturnValue) == 0x0002F9, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_CraftSchematic_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_Create_ReturnValue1) == 0x000300, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_Create_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, Temp_byte_Variable1) == 0x000308, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000309, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, K2Node_Event_ConsumableItem) == 0x000310, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::K2Node_Event_ConsumableItem' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, K2Node_Event_Item123) == 0x000318, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::K2Node_Event_Item123' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_ConsumeItem_ReturnValue) == 0x000320, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_ConsumeItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_GetDisplayName_ReturnValue) == 0x000328, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, K2Node_MakeStruct_FormatArgumentData) == 0x000340, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, K2Node_MakeArray_Array) == 0x000380, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_IsValid_ReturnValue1) == 0x000390, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_Format_ReturnValue) == 0x000398, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue1) == 0x0003B0, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_CanActivateOnOthers_ReturnValue) == 0x0003B8, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_CanActivateOnOthers_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_IsValid_ReturnValue12) == 0x0003B9, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_IsValid_ReturnValue12' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_CanActivateOnSelf_ReturnValue) == 0x0003BA, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_CanActivateOnSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, K2Node_Event_Item12) == 0x0003C0, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::K2Node_Event_Item12' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, K2Node_Event_Item1) == 0x0003C8, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::K2Node_Event_Item1' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, K2Node_Event_Item) == 0x0003D0, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::K2Node_Event_Item' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, K2Node_CreateDelegate_OutputDelegate123) == 0x0003D8, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::K2Node_CreateDelegate_OutputDelegate123' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_GetNumInStack_ReturnValue) == 0x0003E8, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_GetNumInStack_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, Temp_name_Variable1) == 0x0003F0, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, K2Node_DynamicCast_AsItem_Management_Inventory_Panel) == 0x0003F8, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::K2Node_DynamicCast_AsItem_Management_Inventory_Panel' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, K2Node_DynamicCast_bSuccess1) == 0x000400, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, K2Node_CustomEvent_Result1) == 0x000401, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::K2Node_CustomEvent_Result1' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, K2Node_CustomEvent_ResultName1) == 0x000408, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::K2Node_CustomEvent_ResultName1' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_GetSelectedEquipSlot_Slot) == 0x000410, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_GetSelectedEquipSlot_Slot' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000414, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000415, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_Not_PreBool_ReturnValue) == 0x000416, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, K2Node_CustomEvent_Force) == 0x000417, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::K2Node_CustomEvent_Force' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_Not_PreBool_ReturnValue1) == 0x000418, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen, CallFunc_BooleanOR_ReturnValue) == 0x000419, "Member 'ItemManagementScreen_C_ExecuteUbergraph_ItemManagementScreen::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.ShowWarningReadOnlyWIFE
// 0x0001 (0x0001 - 0x0000)
struct ItemManagementScreen_C_ShowWarningReadOnlyWIFE final
{
public:
	bool                                          Force;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementScreen_C_ShowWarningReadOnlyWIFE) == 0x000001, "Wrong alignment on ItemManagementScreen_C_ShowWarningReadOnlyWIFE");
static_assert(sizeof(ItemManagementScreen_C_ShowWarningReadOnlyWIFE) == 0x000001, "Wrong size on ItemManagementScreen_C_ShowWarningReadOnlyWIFE");
static_assert(offsetof(ItemManagementScreen_C_ShowWarningReadOnlyWIFE, Force) == 0x000000, "Member 'ItemManagementScreen_C_ShowWarningReadOnlyWIFE::Force' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.HandleMulchQuantitySelection
// 0x0008 (0x0008 - 0x0000)
struct ItemManagementScreen_C_HandleMulchQuantitySelection final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemManagementScreen_C_HandleMulchQuantitySelection) == 0x000008, "Wrong alignment on ItemManagementScreen_C_HandleMulchQuantitySelection");
static_assert(sizeof(ItemManagementScreen_C_HandleMulchQuantitySelection) == 0x000008, "Wrong size on ItemManagementScreen_C_HandleMulchQuantitySelection");
static_assert(offsetof(ItemManagementScreen_C_HandleMulchQuantitySelection, Item) == 0x000000, "Member 'ItemManagementScreen_C_HandleMulchQuantitySelection::Item' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.HandleDropItemBP
// 0x0008 (0x0008 - 0x0000)
struct ItemManagementScreen_C_HandleDropItemBP final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemManagementScreen_C_HandleDropItemBP) == 0x000008, "Wrong alignment on ItemManagementScreen_C_HandleDropItemBP");
static_assert(sizeof(ItemManagementScreen_C_HandleDropItemBP) == 0x000008, "Wrong size on ItemManagementScreen_C_HandleDropItemBP");
static_assert(offsetof(ItemManagementScreen_C_HandleDropItemBP, Item) == 0x000000, "Member 'ItemManagementScreen_C_HandleDropItemBP::Item' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.HandleTransferItemBP
// 0x0008 (0x0008 - 0x0000)
struct ItemManagementScreen_C_HandleTransferItemBP final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemManagementScreen_C_HandleTransferItemBP) == 0x000008, "Wrong alignment on ItemManagementScreen_C_HandleTransferItemBP");
static_assert(sizeof(ItemManagementScreen_C_HandleTransferItemBP) == 0x000008, "Wrong size on ItemManagementScreen_C_HandleTransferItemBP");
static_assert(offsetof(ItemManagementScreen_C_HandleTransferItemBP, Item) == 0x000000, "Member 'ItemManagementScreen_C_HandleTransferItemBP::Item' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.HandleInspectItemBP
// 0x0008 (0x0008 - 0x0000)
struct ItemManagementScreen_C_HandleInspectItemBP final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemManagementScreen_C_HandleInspectItemBP) == 0x000008, "Wrong alignment on ItemManagementScreen_C_HandleInspectItemBP");
static_assert(sizeof(ItemManagementScreen_C_HandleInspectItemBP) == 0x000008, "Wrong size on ItemManagementScreen_C_HandleInspectItemBP");
static_assert(offsetof(ItemManagementScreen_C_HandleInspectItemBP, Item) == 0x000000, "Member 'ItemManagementScreen_C_HandleInspectItemBP::Item' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.HandleConsumeItemBP
// 0x0008 (0x0008 - 0x0000)
struct ItemManagementScreen_C_HandleConsumeItemBP final
{
public:
	class UFortConsumableAccountItem*             ConsumableItem;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemManagementScreen_C_HandleConsumeItemBP) == 0x000008, "Wrong alignment on ItemManagementScreen_C_HandleConsumeItemBP");
static_assert(sizeof(ItemManagementScreen_C_HandleConsumeItemBP) == 0x000008, "Wrong size on ItemManagementScreen_C_HandleConsumeItemBP");
static_assert(offsetof(ItemManagementScreen_C_HandleConsumeItemBP, ConsumableItem) == 0x000000, "Member 'ItemManagementScreen_C_HandleConsumeItemBP::ConsumableItem' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.HandleCraftItemBP
// 0x0008 (0x0008 - 0x0000)
struct ItemManagementScreen_C_HandleCraftItemBP final
{
public:
	class UFortSchematicItem*                     SchematicItem;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemManagementScreen_C_HandleCraftItemBP) == 0x000008, "Wrong alignment on ItemManagementScreen_C_HandleCraftItemBP");
static_assert(sizeof(ItemManagementScreen_C_HandleCraftItemBP) == 0x000008, "Wrong size on ItemManagementScreen_C_HandleCraftItemBP");
static_assert(offsetof(ItemManagementScreen_C_HandleCraftItemBP, SchematicItem) == 0x000000, "Member 'ItemManagementScreen_C_HandleCraftItemBP::SchematicItem' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.HandleEquipItemBP
// 0x0008 (0x0008 - 0x0000)
struct ItemManagementScreen_C_HandleEquipItemBP final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemManagementScreen_C_HandleEquipItemBP) == 0x000008, "Wrong alignment on ItemManagementScreen_C_HandleEquipItemBP");
static_assert(sizeof(ItemManagementScreen_C_HandleEquipItemBP) == 0x000008, "Wrong size on ItemManagementScreen_C_HandleEquipItemBP");
static_assert(offsetof(ItemManagementScreen_C_HandleEquipItemBP, Item) == 0x000000, "Member 'ItemManagementScreen_C_HandleEquipItemBP::Item' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.DialogResult_CDD8108541BE3E4EA0F093B03D59650F
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) ItemManagementScreen_C_DialogResult_CDD8108541BE3E4EA0F093B03D59650F final
{
public:
	EFortDialogResult                             Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ResultName;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemManagementScreen_C_DialogResult_CDD8108541BE3E4EA0F093B03D59650F) == 0x000008, "Wrong alignment on ItemManagementScreen_C_DialogResult_CDD8108541BE3E4EA0F093B03D59650F");
static_assert(sizeof(ItemManagementScreen_C_DialogResult_CDD8108541BE3E4EA0F093B03D59650F) == 0x000010, "Wrong size on ItemManagementScreen_C_DialogResult_CDD8108541BE3E4EA0F093B03D59650F");
static_assert(offsetof(ItemManagementScreen_C_DialogResult_CDD8108541BE3E4EA0F093B03D59650F, Result) == 0x000000, "Member 'ItemManagementScreen_C_DialogResult_CDD8108541BE3E4EA0F093B03D59650F::Result' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_DialogResult_CDD8108541BE3E4EA0F093B03D59650F, ResultName) == 0x000008, "Member 'ItemManagementScreen_C_DialogResult_CDD8108541BE3E4EA0F093B03D59650F::ResultName' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.DialogResult_EF030FF4438BB62E1CCFDFBCCE5EFA40
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) ItemManagementScreen_C_DialogResult_EF030FF4438BB62E1CCFDFBCCE5EFA40 final
{
public:
	EFortDialogResult                             Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ResultName;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemManagementScreen_C_DialogResult_EF030FF4438BB62E1CCFDFBCCE5EFA40) == 0x000008, "Wrong alignment on ItemManagementScreen_C_DialogResult_EF030FF4438BB62E1CCFDFBCCE5EFA40");
static_assert(sizeof(ItemManagementScreen_C_DialogResult_EF030FF4438BB62E1CCFDFBCCE5EFA40) == 0x000010, "Wrong size on ItemManagementScreen_C_DialogResult_EF030FF4438BB62E1CCFDFBCCE5EFA40");
static_assert(offsetof(ItemManagementScreen_C_DialogResult_EF030FF4438BB62E1CCFDFBCCE5EFA40, Result) == 0x000000, "Member 'ItemManagementScreen_C_DialogResult_EF030FF4438BB62E1CCFDFBCCE5EFA40::Result' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_DialogResult_EF030FF4438BB62E1CCFDFBCCE5EFA40, ResultName) == 0x000008, "Member 'ItemManagementScreen_C_DialogResult_EF030FF4438BB62E1CCFDFBCCE5EFA40::ResultName' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.HandleClose
// 0x0030 (0x0030 - 0x0000)
struct ItemManagementScreen_C_HandleClose final
{
public:
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemManagementInventoryPanel_C*        K2Node_DynamicCast_AsItem_Management_Inventory_Panel; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSelectedEquipSlot_Slot;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue1;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInZone_ReturnValue;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemManagementScreen_C_HandleClose) == 0x000008, "Wrong alignment on ItemManagementScreen_C_HandleClose");
static_assert(sizeof(ItemManagementScreen_C_HandleClose) == 0x000030, "Wrong size on ItemManagementScreen_C_HandleClose");
static_assert(offsetof(ItemManagementScreen_C_HandleClose, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'ItemManagementScreen_C_HandleClose::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleClose, K2Node_DynamicCast_AsItem_Management_Inventory_Panel) == 0x000008, "Member 'ItemManagementScreen_C_HandleClose::K2Node_DynamicCast_AsItem_Management_Inventory_Panel' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleClose, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ItemManagementScreen_C_HandleClose::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleClose, CallFunc_GetSelectedEquipSlot_Slot) == 0x000014, "Member 'ItemManagementScreen_C_HandleClose::CallFunc_GetSelectedEquipSlot_Slot' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleClose, CallFunc_GetContext_ReturnValue1) == 0x000018, "Member 'ItemManagementScreen_C_HandleClose::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleClose, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000020, "Member 'ItemManagementScreen_C_HandleClose::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleClose, CallFunc_IsInZone_ReturnValue) == 0x000021, "Member 'ItemManagementScreen_C_HandleClose::CallFunc_IsInZone_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleClose, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000028, "Member 'ItemManagementScreen_C_HandleClose::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.HandleInspect
// 0x0048 (0x0048 - 0x0000)
struct ItemManagementScreen_C_HandleInspect final
{
public:
	class UFortItem*                              ItemToInspect;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowFavoriting;                                   // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortWorldItem*                         K2Node_DynamicCast_AsFort_World_Item;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSchematic_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInZone_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemTileView*                      K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemManagementScreen_C_HandleInspect) == 0x000008, "Wrong alignment on ItemManagementScreen_C_HandleInspect");
static_assert(sizeof(ItemManagementScreen_C_HandleInspect) == 0x000048, "Wrong size on ItemManagementScreen_C_HandleInspect");
static_assert(offsetof(ItemManagementScreen_C_HandleInspect, ItemToInspect) == 0x000000, "Member 'ItemManagementScreen_C_HandleInspect::ItemToInspect' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleInspect, AllowFavoriting) == 0x000008, "Member 'ItemManagementScreen_C_HandleInspect::AllowFavoriting' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleInspect, K2Node_DynamicCast_AsFort_World_Item) == 0x000010, "Member 'ItemManagementScreen_C_HandleInspect::K2Node_DynamicCast_AsFort_World_Item' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleInspect, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ItemManagementScreen_C_HandleInspect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleInspect, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'ItemManagementScreen_C_HandleInspect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleInspect, CallFunc_IsSchematic_ReturnValue) == 0x00001A, "Member 'ItemManagementScreen_C_HandleInspect::CallFunc_IsSchematic_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleInspect, CallFunc_GetContext_ReturnValue) == 0x000020, "Member 'ItemManagementScreen_C_HandleInspect::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleInspect, CallFunc_IsInZone_ReturnValue) == 0x000028, "Member 'ItemManagementScreen_C_HandleInspect::CallFunc_IsInZone_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleInspect, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'ItemManagementScreen_C_HandleInspect::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleInspect, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'ItemManagementScreen_C_HandleInspect::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleInspect, CallFunc_GetUINavigationManager_ReturnValue) == 0x000030, "Member 'ItemManagementScreen_C_HandleInspect::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleInspect, Temp_bool_Variable) == 0x000038, "Member 'ItemManagementScreen_C_HandleInspect::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleInspect, K2Node_Select_Default) == 0x000040, "Member 'ItemManagementScreen_C_HandleInspect::K2Node_Select_Default' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.GetDescriptionText
// 0x0078 (0x0078 - 0x0000)
struct ItemManagementScreen_C_GetDescriptionText final
{
public:
	class FText                                   ItemDescription;                                   // 0x0000(0x0018)(Parm, OutParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortTooltipUIContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortTooltipContext*                    CallFunc_SpawnTooltipContextWithSource_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemDefinition*                    CallFunc_GetItemDefinitionBP_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetCombinedDescription_OutDescription;    // 0x0040(0x0018)()
	bool                                          CallFunc_GetCombinedDescription_ReturnValue;       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDescription_ReturnValue;               // 0x0060(0x0018)()
};
static_assert(alignof(ItemManagementScreen_C_GetDescriptionText) == 0x000008, "Wrong alignment on ItemManagementScreen_C_GetDescriptionText");
static_assert(sizeof(ItemManagementScreen_C_GetDescriptionText) == 0x000078, "Wrong size on ItemManagementScreen_C_GetDescriptionText");
static_assert(offsetof(ItemManagementScreen_C_GetDescriptionText, ItemDescription) == 0x000000, "Member 'ItemManagementScreen_C_GetDescriptionText::ItemDescription' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetDescriptionText, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'ItemManagementScreen_C_GetDescriptionText::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetDescriptionText, CallFunc_GetContext_ReturnValue) == 0x000020, "Member 'ItemManagementScreen_C_GetDescriptionText::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetDescriptionText, CallFunc_SpawnTooltipContextWithSource_ReturnValue) == 0x000028, "Member 'ItemManagementScreen_C_GetDescriptionText::CallFunc_SpawnTooltipContextWithSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetDescriptionText, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'ItemManagementScreen_C_GetDescriptionText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetDescriptionText, CallFunc_GetItemDefinitionBP_ReturnValue) == 0x000038, "Member 'ItemManagementScreen_C_GetDescriptionText::CallFunc_GetItemDefinitionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetDescriptionText, CallFunc_GetCombinedDescription_OutDescription) == 0x000040, "Member 'ItemManagementScreen_C_GetDescriptionText::CallFunc_GetCombinedDescription_OutDescription' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetDescriptionText, CallFunc_GetCombinedDescription_ReturnValue) == 0x000058, "Member 'ItemManagementScreen_C_GetDescriptionText::CallFunc_GetCombinedDescription_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetDescriptionText, CallFunc_GetDescription_ReturnValue) == 0x000060, "Member 'ItemManagementScreen_C_GetDescriptionText::CallFunc_GetDescription_ReturnValue' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.OnDrop
// 0x00E0 (0x00E0 - 0x0000)
struct ItemManagementScreen_C_OnDrop final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemManagementInventoryPanel_C*        K2Node_DynamicCast_AsItem_Management_Inventory_Panel; // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItem*                              K2Node_DynamicCast_AsFort_Item;                    // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveItemFromQuickBar_ReturnValue;       // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementScreen_C_OnDrop) == 0x000008, "Wrong alignment on ItemManagementScreen_C_OnDrop");
static_assert(sizeof(ItemManagementScreen_C_OnDrop) == 0x0000E0, "Wrong size on ItemManagementScreen_C_OnDrop");
static_assert(offsetof(ItemManagementScreen_C_OnDrop, MyGeometry) == 0x000000, "Member 'ItemManagementScreen_C_OnDrop::MyGeometry' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_OnDrop, PointerEvent) == 0x000038, "Member 'ItemManagementScreen_C_OnDrop::PointerEvent' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_OnDrop, Operation) == 0x0000A8, "Member 'ItemManagementScreen_C_OnDrop::Operation' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_OnDrop, ReturnValue) == 0x0000B0, "Member 'ItemManagementScreen_C_OnDrop::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_OnDrop, K2Node_DynamicCast_AsItem_Management_Inventory_Panel) == 0x0000B8, "Member 'ItemManagementScreen_C_OnDrop::K2Node_DynamicCast_AsItem_Management_Inventory_Panel' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_OnDrop, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'ItemManagementScreen_C_OnDrop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_OnDrop, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000C1, "Member 'ItemManagementScreen_C_OnDrop::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_OnDrop, CallFunc_GetContext_ReturnValue) == 0x0000C8, "Member 'ItemManagementScreen_C_OnDrop::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_OnDrop, K2Node_DynamicCast_AsFort_Item) == 0x0000D0, "Member 'ItemManagementScreen_C_OnDrop::K2Node_DynamicCast_AsFort_Item' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_OnDrop, K2Node_DynamicCast_bSuccess1) == 0x0000D8, "Member 'ItemManagementScreen_C_OnDrop::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_OnDrop, CallFunc_RemoveItemFromQuickBar_ReturnValue) == 0x0000D9, "Member 'ItemManagementScreen_C_OnDrop::CallFunc_RemoveItemFromQuickBar_ReturnValue' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.SizeInventoryPanel
// 0x0007 (0x0007 - 0x0000)
struct ItemManagementScreen_C_SizeInventoryPanel final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue12;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue123;       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementScreen_C_SizeInventoryPanel) == 0x000001, "Wrong alignment on ItemManagementScreen_C_SizeInventoryPanel");
static_assert(sizeof(ItemManagementScreen_C_SizeInventoryPanel) == 0x000007, "Wrong size on ItemManagementScreen_C_SizeInventoryPanel");
static_assert(offsetof(ItemManagementScreen_C_SizeInventoryPanel, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'ItemManagementScreen_C_SizeInventoryPanel::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_SizeInventoryPanel, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000001, "Member 'ItemManagementScreen_C_SizeInventoryPanel::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_SizeInventoryPanel, CallFunc_EqualEqual_ByteByte_ReturnValue12) == 0x000002, "Member 'ItemManagementScreen_C_SizeInventoryPanel::CallFunc_EqualEqual_ByteByte_ReturnValue12' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_SizeInventoryPanel, CallFunc_EqualEqual_ByteByte_ReturnValue123) == 0x000003, "Member 'ItemManagementScreen_C_SizeInventoryPanel::CallFunc_EqualEqual_ByteByte_ReturnValue123' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_SizeInventoryPanel, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'ItemManagementScreen_C_SizeInventoryPanel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_SizeInventoryPanel, CallFunc_BooleanOR_ReturnValue1) == 0x000005, "Member 'ItemManagementScreen_C_SizeInventoryPanel::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_SizeInventoryPanel, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'ItemManagementScreen_C_SizeInventoryPanel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.HandleEquip
// 0x0048 (0x0048 - 0x0000)
struct ItemManagementScreen_C_HandleEquip final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipAvailable_EquipAvailable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSlotted_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortItemType                                 CallFunc_GetType_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemManagementInventoryPanel_C*        K2Node_DynamicCast_AsItem_Management_Inventory_Panel; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GuardActionForReadOnlyWIFE_Proceed;       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue1;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveItemFromQuickBar_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputContext*                    CallFunc_GetContext_ReturnValue12;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementScreen_C_HandleEquip) == 0x000008, "Wrong alignment on ItemManagementScreen_C_HandleEquip");
static_assert(sizeof(ItemManagementScreen_C_HandleEquip) == 0x000048, "Wrong size on ItemManagementScreen_C_HandleEquip");
static_assert(offsetof(ItemManagementScreen_C_HandleEquip, Item) == 0x000000, "Member 'ItemManagementScreen_C_HandleEquip::Item' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleEquip, CallFunc_IsEquipAvailable_EquipAvailable) == 0x000008, "Member 'ItemManagementScreen_C_HandleEquip::CallFunc_IsEquipAvailable_EquipAvailable' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleEquip, CallFunc_IsSlotted_ReturnValue) == 0x000009, "Member 'ItemManagementScreen_C_HandleEquip::CallFunc_IsSlotted_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleEquip, CallFunc_GetType_ReturnValue) == 0x00000A, "Member 'ItemManagementScreen_C_HandleEquip::CallFunc_GetType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleEquip, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000B, "Member 'ItemManagementScreen_C_HandleEquip::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleEquip, K2Node_DynamicCast_AsItem_Management_Inventory_Panel) == 0x000010, "Member 'ItemManagementScreen_C_HandleEquip::K2Node_DynamicCast_AsItem_Management_Inventory_Panel' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleEquip, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ItemManagementScreen_C_HandleEquip::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleEquip, CallFunc_GuardActionForReadOnlyWIFE_Proceed) == 0x000019, "Member 'ItemManagementScreen_C_HandleEquip::CallFunc_GuardActionForReadOnlyWIFE_Proceed' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleEquip, CallFunc_GetContext_ReturnValue) == 0x000020, "Member 'ItemManagementScreen_C_HandleEquip::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleEquip, CallFunc_GetContext_ReturnValue1) == 0x000028, "Member 'ItemManagementScreen_C_HandleEquip::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleEquip, CallFunc_RemoveItemFromQuickBar_ReturnValue) == 0x000030, "Member 'ItemManagementScreen_C_HandleEquip::CallFunc_RemoveItemFromQuickBar_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleEquip, CallFunc_GetContext_ReturnValue12) == 0x000038, "Member 'ItemManagementScreen_C_HandleEquip::CallFunc_GetContext_ReturnValue12' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleEquip, CallFunc_GetCurrentInputType_ReturnValue) == 0x000040, "Member 'ItemManagementScreen_C_HandleEquip::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleEquip, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000041, "Member 'ItemManagementScreen_C_HandleEquip::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.CraftAndSlot
// 0x0050 (0x0050 - 0x0000)
struct ItemManagementScreen_C_CraftAndSlot final
{
public:
	class UFortSchematicItem*                     SchematicItem;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortSchematicItem*                     Item;                                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue1;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemType                                 CallFunc_GetSchematicResultType_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortCraftFailCause                           CallFunc_CraftSchematic_FailCause;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CraftSchematic_ReturnValue;               // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortCraftFailCause                           CallFunc_CanCraftSchematic_FailCause;              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanCraftSchematic_ReturnValue;            // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemManagementInventoryPanel_C*        K2Node_DynamicCast_AsItem_Management_Inventory_Panel; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue12;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputContext*                    CallFunc_GetContext_ReturnValue123;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortCraftFailCause                           CallFunc_CraftAndSlotSchematic_FailCause;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CraftAndSlotSchematic_ReturnValue;        // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementScreen_C_CraftAndSlot) == 0x000008, "Wrong alignment on ItemManagementScreen_C_CraftAndSlot");
static_assert(sizeof(ItemManagementScreen_C_CraftAndSlot) == 0x000050, "Wrong size on ItemManagementScreen_C_CraftAndSlot");
static_assert(offsetof(ItemManagementScreen_C_CraftAndSlot, SchematicItem) == 0x000000, "Member 'ItemManagementScreen_C_CraftAndSlot::SchematicItem' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CraftAndSlot, Item) == 0x000008, "Member 'ItemManagementScreen_C_CraftAndSlot::Item' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CraftAndSlot, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'ItemManagementScreen_C_CraftAndSlot::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CraftAndSlot, CallFunc_GetContext_ReturnValue1) == 0x000018, "Member 'ItemManagementScreen_C_CraftAndSlot::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CraftAndSlot, CallFunc_GetSchematicResultType_ReturnValue) == 0x000020, "Member 'ItemManagementScreen_C_CraftAndSlot::CallFunc_GetSchematicResultType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CraftAndSlot, CallFunc_CraftSchematic_FailCause) == 0x000021, "Member 'ItemManagementScreen_C_CraftAndSlot::CallFunc_CraftSchematic_FailCause' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CraftAndSlot, CallFunc_CraftSchematic_ReturnValue) == 0x000022, "Member 'ItemManagementScreen_C_CraftAndSlot::CallFunc_CraftSchematic_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CraftAndSlot, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000023, "Member 'ItemManagementScreen_C_CraftAndSlot::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CraftAndSlot, CallFunc_CanCraftSchematic_FailCause) == 0x000024, "Member 'ItemManagementScreen_C_CraftAndSlot::CallFunc_CanCraftSchematic_FailCause' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CraftAndSlot, CallFunc_CanCraftSchematic_ReturnValue) == 0x000025, "Member 'ItemManagementScreen_C_CraftAndSlot::CallFunc_CanCraftSchematic_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CraftAndSlot, K2Node_DynamicCast_AsItem_Management_Inventory_Panel) == 0x000028, "Member 'ItemManagementScreen_C_CraftAndSlot::K2Node_DynamicCast_AsItem_Management_Inventory_Panel' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CraftAndSlot, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ItemManagementScreen_C_CraftAndSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CraftAndSlot, CallFunc_GetContext_ReturnValue12) == 0x000038, "Member 'ItemManagementScreen_C_CraftAndSlot::CallFunc_GetContext_ReturnValue12' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CraftAndSlot, CallFunc_GetContext_ReturnValue123) == 0x000040, "Member 'ItemManagementScreen_C_CraftAndSlot::CallFunc_GetContext_ReturnValue123' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CraftAndSlot, CallFunc_CraftAndSlotSchematic_FailCause) == 0x000048, "Member 'ItemManagementScreen_C_CraftAndSlot::CallFunc_CraftAndSlotSchematic_FailCause' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CraftAndSlot, CallFunc_CraftAndSlotSchematic_ReturnValue) == 0x000049, "Member 'ItemManagementScreen_C_CraftAndSlot::CallFunc_CraftAndSlotSchematic_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CraftAndSlot, CallFunc_GetCurrentInputType_ReturnValue) == 0x00004A, "Member 'ItemManagementScreen_C_CraftAndSlot::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CraftAndSlot, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x00004B, "Member 'ItemManagementScreen_C_CraftAndSlot::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.ShowCraftError
// 0x0001 (0x0001 - 0x0000)
struct ItemManagementScreen_C_ShowCraftError final
{
public:
	EFortCraftFailCause                           FailCause;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemManagementScreen_C_ShowCraftError) == 0x000001, "Wrong alignment on ItemManagementScreen_C_ShowCraftError");
static_assert(sizeof(ItemManagementScreen_C_ShowCraftError) == 0x000001, "Wrong size on ItemManagementScreen_C_ShowCraftError");
static_assert(offsetof(ItemManagementScreen_C_ShowCraftError, FailCause) == 0x000000, "Member 'ItemManagementScreen_C_ShowCraftError::FailCause' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.HandleTransfer
// 0x0028 (0x0028 - 0x0000)
struct ItemManagementScreen_C_HandleTransfer final
{
public:
	class UFortItem*                              ItemToTransfer;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItem*                              Item;                                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxTransferCount_Count;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 ChosenValue, class UFortItem* FortItem)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(ItemManagementScreen_C_HandleTransfer) == 0x000008, "Wrong alignment on ItemManagementScreen_C_HandleTransfer");
static_assert(sizeof(ItemManagementScreen_C_HandleTransfer) == 0x000028, "Wrong size on ItemManagementScreen_C_HandleTransfer");
static_assert(offsetof(ItemManagementScreen_C_HandleTransfer, ItemToTransfer) == 0x000000, "Member 'ItemManagementScreen_C_HandleTransfer::ItemToTransfer' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleTransfer, Item) == 0x000008, "Member 'ItemManagementScreen_C_HandleTransfer::Item' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleTransfer, CallFunc_GetMaxTransferCount_Count) == 0x000010, "Member 'ItemManagementScreen_C_HandleTransfer::CallFunc_GetMaxTransferCount_Count' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleTransfer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'ItemManagementScreen_C_HandleTransfer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleTransfer, CallFunc_Greater_IntInt_ReturnValue) == 0x000015, "Member 'ItemManagementScreen_C_HandleTransfer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleTransfer, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'ItemManagementScreen_C_HandleTransfer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.CreateQuantitySelector
// 0x0060 (0x0060 - 0x0000)
struct ItemManagementScreen_C_CreateQuantitySelector final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Title;                                             // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   ConfirmText;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         InitialQuantity;                                   // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxQuantity;                                       // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuantitySelector_C*                    CallFunc_Create_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemManagementScreen_C_CreateQuantitySelector) == 0x000008, "Wrong alignment on ItemManagementScreen_C_CreateQuantitySelector");
static_assert(sizeof(ItemManagementScreen_C_CreateQuantitySelector) == 0x000060, "Wrong size on ItemManagementScreen_C_CreateQuantitySelector");
static_assert(offsetof(ItemManagementScreen_C_CreateQuantitySelector, Item) == 0x000000, "Member 'ItemManagementScreen_C_CreateQuantitySelector::Item' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CreateQuantitySelector, Title) == 0x000008, "Member 'ItemManagementScreen_C_CreateQuantitySelector::Title' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CreateQuantitySelector, ConfirmText) == 0x000020, "Member 'ItemManagementScreen_C_CreateQuantitySelector::ConfirmText' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CreateQuantitySelector, InitialQuantity) == 0x000038, "Member 'ItemManagementScreen_C_CreateQuantitySelector::InitialQuantity' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CreateQuantitySelector, MaxQuantity) == 0x00003C, "Member 'ItemManagementScreen_C_CreateQuantitySelector::MaxQuantity' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CreateQuantitySelector, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'ItemManagementScreen_C_CreateQuantitySelector::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CreateQuantitySelector, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000048, "Member 'ItemManagementScreen_C_CreateQuantitySelector::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CreateQuantitySelector, CallFunc_GetOwningPlayer_ReturnValue) == 0x000050, "Member 'ItemManagementScreen_C_CreateQuantitySelector::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CreateQuantitySelector, CallFunc_Create_ReturnValue) == 0x000058, "Member 'ItemManagementScreen_C_CreateQuantitySelector::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.HandleTransferItemsCallback
// 0x0010 (0x0010 - 0x0000)
struct ItemManagementScreen_C_HandleTransferItemsCallback final
{
public:
	int32                                         Quantity;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              Item;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemManagementScreen_C_HandleTransferItemsCallback) == 0x000008, "Wrong alignment on ItemManagementScreen_C_HandleTransferItemsCallback");
static_assert(sizeof(ItemManagementScreen_C_HandleTransferItemsCallback) == 0x000010, "Wrong size on ItemManagementScreen_C_HandleTransferItemsCallback");
static_assert(offsetof(ItemManagementScreen_C_HandleTransferItemsCallback, Quantity) == 0x000000, "Member 'ItemManagementScreen_C_HandleTransferItemsCallback::Quantity' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleTransferItemsCallback, Item) == 0x000008, "Member 'ItemManagementScreen_C_HandleTransferItemsCallback::Item' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.CompleteItemTransfer
// 0x0070 (0x0070 - 0x0000)
struct ItemManagementScreen_C_CompleteItemTransfer final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Quantity;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDeposit;                                         // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumInStack_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetSelectedItem_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GuardActionForReadOnlyWIFE_Proceed;       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortWorldItem*                         K2Node_DynamicCast_AsFort_World_Item;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetItemGuid_ReturnValue;                  // 0x0034(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerDeployableBase*    K2Node_DynamicCast_AsFort_Player_Controller_Deployable_Base; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess12;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementScreen_C_CompleteItemTransfer) == 0x000008, "Wrong alignment on ItemManagementScreen_C_CompleteItemTransfer");
static_assert(sizeof(ItemManagementScreen_C_CompleteItemTransfer) == 0x000070, "Wrong size on ItemManagementScreen_C_CompleteItemTransfer");
static_assert(offsetof(ItemManagementScreen_C_CompleteItemTransfer, Item) == 0x000000, "Member 'ItemManagementScreen_C_CompleteItemTransfer::Item' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CompleteItemTransfer, Quantity) == 0x000008, "Member 'ItemManagementScreen_C_CompleteItemTransfer::Quantity' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CompleteItemTransfer, IsDeposit) == 0x00000C, "Member 'ItemManagementScreen_C_CompleteItemTransfer::IsDeposit' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CompleteItemTransfer, CallFunc_GetNumInStack_ReturnValue) == 0x000010, "Member 'ItemManagementScreen_C_CompleteItemTransfer::CallFunc_GetNumInStack_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CompleteItemTransfer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'ItemManagementScreen_C_CompleteItemTransfer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CompleteItemTransfer, CallFunc_GetSelectedItem_ReturnValue) == 0x000018, "Member 'ItemManagementScreen_C_CompleteItemTransfer::CallFunc_GetSelectedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CompleteItemTransfer, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'ItemManagementScreen_C_CompleteItemTransfer::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CompleteItemTransfer, CallFunc_GuardActionForReadOnlyWIFE_Proceed) == 0x000021, "Member 'ItemManagementScreen_C_CompleteItemTransfer::CallFunc_GuardActionForReadOnlyWIFE_Proceed' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CompleteItemTransfer, K2Node_DynamicCast_AsFort_World_Item) == 0x000028, "Member 'ItemManagementScreen_C_CompleteItemTransfer::K2Node_DynamicCast_AsFort_World_Item' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CompleteItemTransfer, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ItemManagementScreen_C_CompleteItemTransfer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CompleteItemTransfer, CallFunc_GetItemGuid_ReturnValue) == 0x000034, "Member 'ItemManagementScreen_C_CompleteItemTransfer::CallFunc_GetItemGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CompleteItemTransfer, CallFunc_GetOwningPlayer_ReturnValue) == 0x000048, "Member 'ItemManagementScreen_C_CompleteItemTransfer::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CompleteItemTransfer, K2Node_DynamicCast_AsFort_Player_Controller_Deployable_Base) == 0x000050, "Member 'ItemManagementScreen_C_CompleteItemTransfer::K2Node_DynamicCast_AsFort_Player_Controller_Deployable_Base' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CompleteItemTransfer, K2Node_DynamicCast_bSuccess1) == 0x000058, "Member 'ItemManagementScreen_C_CompleteItemTransfer::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CompleteItemTransfer, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000060, "Member 'ItemManagementScreen_C_CompleteItemTransfer::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CompleteItemTransfer, K2Node_DynamicCast_bSuccess12) == 0x000068, "Member 'ItemManagementScreen_C_CompleteItemTransfer::K2Node_DynamicCast_bSuccess12' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.HandleDrop
// 0x0028 (0x0028 - 0x0000)
struct ItemManagementScreen_C_HandleDrop final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumInStack_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 ChosenValue, class UFortItem* FortItem)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(ItemManagementScreen_C_HandleDrop) == 0x000008, "Wrong alignment on ItemManagementScreen_C_HandleDrop");
static_assert(sizeof(ItemManagementScreen_C_HandleDrop) == 0x000028, "Wrong size on ItemManagementScreen_C_HandleDrop");
static_assert(offsetof(ItemManagementScreen_C_HandleDrop, Item) == 0x000000, "Member 'ItemManagementScreen_C_HandleDrop::Item' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleDrop, CallFunc_GetNumInStack_ReturnValue) == 0x000008, "Member 'ItemManagementScreen_C_HandleDrop::CallFunc_GetNumInStack_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleDrop, CallFunc_Divide_IntInt_ReturnValue) == 0x00000C, "Member 'ItemManagementScreen_C_HandleDrop::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleDrop, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'ItemManagementScreen_C_HandleDrop::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleDrop, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'ItemManagementScreen_C_HandleDrop::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.HandleDropItemsCallback
// 0x0010 (0x0010 - 0x0000)
struct ItemManagementScreen_C_HandleDropItemsCallback final
{
public:
	int32                                         Quantity;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              Item;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemManagementScreen_C_HandleDropItemsCallback) == 0x000008, "Wrong alignment on ItemManagementScreen_C_HandleDropItemsCallback");
static_assert(sizeof(ItemManagementScreen_C_HandleDropItemsCallback) == 0x000010, "Wrong size on ItemManagementScreen_C_HandleDropItemsCallback");
static_assert(offsetof(ItemManagementScreen_C_HandleDropItemsCallback, Quantity) == 0x000000, "Member 'ItemManagementScreen_C_HandleDropItemsCallback::Quantity' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleDropItemsCallback, Item) == 0x000008, "Member 'ItemManagementScreen_C_HandleDropItemsCallback::Item' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.CompleteItemDrop
// 0x0030 (0x0030 - 0x0000)
struct ItemManagementScreen_C_CompleteItemDrop final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Quantity;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortWorldItem*                         K2Node_DynamicCast_AsFort_World_Item;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumInStack_ReturnValue;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementScreen_C_CompleteItemDrop) == 0x000008, "Wrong alignment on ItemManagementScreen_C_CompleteItemDrop");
static_assert(sizeof(ItemManagementScreen_C_CompleteItemDrop) == 0x000030, "Wrong size on ItemManagementScreen_C_CompleteItemDrop");
static_assert(offsetof(ItemManagementScreen_C_CompleteItemDrop, Item) == 0x000000, "Member 'ItemManagementScreen_C_CompleteItemDrop::Item' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CompleteItemDrop, Quantity) == 0x000008, "Member 'ItemManagementScreen_C_CompleteItemDrop::Quantity' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CompleteItemDrop, K2Node_DynamicCast_AsFort_World_Item) == 0x000010, "Member 'ItemManagementScreen_C_CompleteItemDrop::K2Node_DynamicCast_AsFort_World_Item' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CompleteItemDrop, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ItemManagementScreen_C_CompleteItemDrop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CompleteItemDrop, CallFunc_GetNumInStack_ReturnValue) == 0x00001C, "Member 'ItemManagementScreen_C_CompleteItemDrop::CallFunc_GetNumInStack_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CompleteItemDrop, CallFunc_GetContext_ReturnValue) == 0x000020, "Member 'ItemManagementScreen_C_CompleteItemDrop::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_CompleteItemDrop, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'ItemManagementScreen_C_CompleteItemDrop::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.HandleMulchItemsCallback
// 0x0018 (0x0018 - 0x0000)
struct ItemManagementScreen_C_HandleMulchItemsCallback final
{
public:
	int32                                         Quantity;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              Item;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementScreen_C_HandleMulchItemsCallback) == 0x000008, "Wrong alignment on ItemManagementScreen_C_HandleMulchItemsCallback");
static_assert(sizeof(ItemManagementScreen_C_HandleMulchItemsCallback) == 0x000018, "Wrong size on ItemManagementScreen_C_HandleMulchItemsCallback");
static_assert(offsetof(ItemManagementScreen_C_HandleMulchItemsCallback, Quantity) == 0x000000, "Member 'ItemManagementScreen_C_HandleMulchItemsCallback::Quantity' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleMulchItemsCallback, Item) == 0x000008, "Member 'ItemManagementScreen_C_HandleMulchItemsCallback::Item' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_HandleMulchItemsCallback, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'ItemManagementScreen_C_HandleMulchItemsCallback::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.IsEquipAvailable
// 0x0030 (0x0030 - 0x0000)
struct ItemManagementScreen_C_IsEquipAvailable final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EquipAvailable;                                    // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesMatchSearchString_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInZone_ReturnValue;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortItemType                                 CallFunc_GetType_ReturnValue;                      // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetOwningController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEquipable_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementScreen_C_IsEquipAvailable) == 0x000008, "Wrong alignment on ItemManagementScreen_C_IsEquipAvailable");
static_assert(sizeof(ItemManagementScreen_C_IsEquipAvailable) == 0x000030, "Wrong size on ItemManagementScreen_C_IsEquipAvailable");
static_assert(offsetof(ItemManagementScreen_C_IsEquipAvailable, Item) == 0x000000, "Member 'ItemManagementScreen_C_IsEquipAvailable::Item' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_IsEquipAvailable, EquipAvailable) == 0x000008, "Member 'ItemManagementScreen_C_IsEquipAvailable::EquipAvailable' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_IsEquipAvailable, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'ItemManagementScreen_C_IsEquipAvailable::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_IsEquipAvailable, CallFunc_DoesMatchSearchString_ReturnValue) == 0x000018, "Member 'ItemManagementScreen_C_IsEquipAvailable::CallFunc_DoesMatchSearchString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_IsEquipAvailable, CallFunc_IsInZone_ReturnValue) == 0x000019, "Member 'ItemManagementScreen_C_IsEquipAvailable::CallFunc_IsInZone_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_IsEquipAvailable, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'ItemManagementScreen_C_IsEquipAvailable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_IsEquipAvailable, CallFunc_GetType_ReturnValue) == 0x00001B, "Member 'ItemManagementScreen_C_IsEquipAvailable::CallFunc_GetType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_IsEquipAvailable, CallFunc_GetOwningController_ReturnValue) == 0x000020, "Member 'ItemManagementScreen_C_IsEquipAvailable::CallFunc_GetOwningController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_IsEquipAvailable, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000028, "Member 'ItemManagementScreen_C_IsEquipAvailable::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_IsEquipAvailable, CallFunc_IsEquipable_ReturnValue) == 0x000029, "Member 'ItemManagementScreen_C_IsEquipAvailable::CallFunc_IsEquipable_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_IsEquipAvailable, CallFunc_BooleanOR_ReturnValue) == 0x00002A, "Member 'ItemManagementScreen_C_IsEquipAvailable::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_IsEquipAvailable, CallFunc_BooleanAND_ReturnValue) == 0x00002B, "Member 'ItemManagementScreen_C_IsEquipAvailable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_IsEquipAvailable, CallFunc_BooleanAND_ReturnValue1) == 0x00002C, "Member 'ItemManagementScreen_C_IsEquipAvailable::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.SizeScreen
// 0x0010 (0x0010 - 0x0000)
struct ItemManagementScreen_C_SizeScreen final
{
public:
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInZone_ReturnValue;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementScreen_C_SizeScreen) == 0x000008, "Wrong alignment on ItemManagementScreen_C_SizeScreen");
static_assert(sizeof(ItemManagementScreen_C_SizeScreen) == 0x000010, "Wrong size on ItemManagementScreen_C_SizeScreen");
static_assert(offsetof(ItemManagementScreen_C_SizeScreen, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'ItemManagementScreen_C_SizeScreen::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_SizeScreen, CallFunc_IsInZone_ReturnValue) == 0x000008, "Member 'ItemManagementScreen_C_SizeScreen::CallFunc_IsInZone_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_SizeScreen, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'ItemManagementScreen_C_SizeScreen::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_SizeScreen, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'ItemManagementScreen_C_SizeScreen::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.GuardActionForReadOnlyWIFE
// 0x0020 (0x0020 - 0x0000)
struct ItemManagementScreen_C_GuardActionForReadOnlyWIFE final
{
public:
	bool                                          Proceed;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              CallFunc_GetItemToDetail_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreProfilesAvailableToWIFE_ReturnValue;   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsScreenWIFE_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementScreen_C_GuardActionForReadOnlyWIFE) == 0x000008, "Wrong alignment on ItemManagementScreen_C_GuardActionForReadOnlyWIFE");
static_assert(sizeof(ItemManagementScreen_C_GuardActionForReadOnlyWIFE) == 0x000020, "Wrong size on ItemManagementScreen_C_GuardActionForReadOnlyWIFE");
static_assert(offsetof(ItemManagementScreen_C_GuardActionForReadOnlyWIFE, Proceed) == 0x000000, "Member 'ItemManagementScreen_C_GuardActionForReadOnlyWIFE::Proceed' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GuardActionForReadOnlyWIFE, CallFunc_GetItemToDetail_ReturnValue) == 0x000008, "Member 'ItemManagementScreen_C_GuardActionForReadOnlyWIFE::CallFunc_GetItemToDetail_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GuardActionForReadOnlyWIFE, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'ItemManagementScreen_C_GuardActionForReadOnlyWIFE::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GuardActionForReadOnlyWIFE, CallFunc_AreProfilesAvailableToWIFE_ReturnValue) == 0x000018, "Member 'ItemManagementScreen_C_GuardActionForReadOnlyWIFE::CallFunc_AreProfilesAvailableToWIFE_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GuardActionForReadOnlyWIFE, CallFunc_IsScreenWIFE_ReturnValue) == 0x000019, "Member 'ItemManagementScreen_C_GuardActionForReadOnlyWIFE::CallFunc_IsScreenWIFE_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GuardActionForReadOnlyWIFE, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'ItemManagementScreen_C_GuardActionForReadOnlyWIFE::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GuardActionForReadOnlyWIFE, CallFunc_BooleanOR_ReturnValue) == 0x00001B, "Member 'ItemManagementScreen_C_GuardActionForReadOnlyWIFE::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.ToggleTileSize
// 0x0010 (0x0010 - 0x0000)
struct ItemManagementScreen_C_ToggleTileSize final
{
public:
	class UItemManagementInventoryPanel_C*        K2Node_DynamicCast_AsItem_Management_Inventory_Panel; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementScreen_C_ToggleTileSize) == 0x000008, "Wrong alignment on ItemManagementScreen_C_ToggleTileSize");
static_assert(sizeof(ItemManagementScreen_C_ToggleTileSize) == 0x000010, "Wrong size on ItemManagementScreen_C_ToggleTileSize");
static_assert(offsetof(ItemManagementScreen_C_ToggleTileSize, K2Node_DynamicCast_AsItem_Management_Inventory_Panel) == 0x000000, "Member 'ItemManagementScreen_C_ToggleTileSize::K2Node_DynamicCast_AsItem_Management_Inventory_Panel' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_ToggleTileSize, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'ItemManagementScreen_C_ToggleTileSize::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.TogglePrioritizeFavorites
// 0x0010 (0x0010 - 0x0000)
struct ItemManagementScreen_C_TogglePrioritizeFavorites final
{
public:
	class UItemManagementInventoryPanel_C*        K2Node_DynamicCast_AsItem_Management_Inventory_Panel; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementScreen_C_TogglePrioritizeFavorites) == 0x000008, "Wrong alignment on ItemManagementScreen_C_TogglePrioritizeFavorites");
static_assert(sizeof(ItemManagementScreen_C_TogglePrioritizeFavorites) == 0x000010, "Wrong size on ItemManagementScreen_C_TogglePrioritizeFavorites");
static_assert(offsetof(ItemManagementScreen_C_TogglePrioritizeFavorites, K2Node_DynamicCast_AsItem_Management_Inventory_Panel) == 0x000000, "Member 'ItemManagementScreen_C_TogglePrioritizeFavorites::K2Node_DynamicCast_AsItem_Management_Inventory_Panel' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_TogglePrioritizeFavorites, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'ItemManagementScreen_C_TogglePrioritizeFavorites::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.GetShouldPrioritizeFavorites
// 0x0018 (0x0018 - 0x0000)
struct ItemManagementScreen_C_GetShouldPrioritizeFavorites final
{
public:
	bool                                          SortFavoritesSeparately;                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemManagementInventoryPanel_C*        K2Node_DynamicCast_AsItem_Management_Inventory_Panel; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetShouldPrioritizeFavorites_ReturnValue; // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementScreen_C_GetShouldPrioritizeFavorites) == 0x000008, "Wrong alignment on ItemManagementScreen_C_GetShouldPrioritizeFavorites");
static_assert(sizeof(ItemManagementScreen_C_GetShouldPrioritizeFavorites) == 0x000018, "Wrong size on ItemManagementScreen_C_GetShouldPrioritizeFavorites");
static_assert(offsetof(ItemManagementScreen_C_GetShouldPrioritizeFavorites, SortFavoritesSeparately) == 0x000000, "Member 'ItemManagementScreen_C_GetShouldPrioritizeFavorites::SortFavoritesSeparately' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetShouldPrioritizeFavorites, K2Node_DynamicCast_AsItem_Management_Inventory_Panel) == 0x000008, "Member 'ItemManagementScreen_C_GetShouldPrioritizeFavorites::K2Node_DynamicCast_AsItem_Management_Inventory_Panel' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetShouldPrioritizeFavorites, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ItemManagementScreen_C_GetShouldPrioritizeFavorites::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetShouldPrioritizeFavorites, CallFunc_GetShouldPrioritizeFavorites_ReturnValue) == 0x000011, "Member 'ItemManagementScreen_C_GetShouldPrioritizeFavorites::CallFunc_GetShouldPrioritizeFavorites_ReturnValue' has a wrong offset!");

// Function ItemManagementScreen.ItemManagementScreen_C.GetMaxTransferCount
// 0x0080 (0x0080 - 0x0000)
struct ItemManagementScreen_C_GetMaxTransferCount final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortWorldItem*                         WorldItem;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWorldItem*                         K2Node_DynamicCast_AsFort_World_Item;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumInStack_ReturnValue;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue1;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumInStack_ReturnValue1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBackpackOverflowFromAddingItem_ReturnValue; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumInStack_ReturnValue12;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDeployableBaseOverflowFromAddingItem_ReturnValue; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue12;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStorageOverflowFromAddingItem_ReturnValue; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerControllerDeployableBase*    K2Node_DynamicCast_AsFort_Player_Controller_Deployable_Base; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue12;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ContainsItem_ReturnValue;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemManagementScreen_C_GetMaxTransferCount) == 0x000008, "Wrong alignment on ItemManagementScreen_C_GetMaxTransferCount");
static_assert(sizeof(ItemManagementScreen_C_GetMaxTransferCount) == 0x000080, "Wrong size on ItemManagementScreen_C_GetMaxTransferCount");
static_assert(offsetof(ItemManagementScreen_C_GetMaxTransferCount, Item) == 0x000000, "Member 'ItemManagementScreen_C_GetMaxTransferCount::Item' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetMaxTransferCount, Count) == 0x000008, "Member 'ItemManagementScreen_C_GetMaxTransferCount::Count' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetMaxTransferCount, WorldItem) == 0x000010, "Member 'ItemManagementScreen_C_GetMaxTransferCount::WorldItem' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetMaxTransferCount, K2Node_DynamicCast_AsFort_World_Item) == 0x000018, "Member 'ItemManagementScreen_C_GetMaxTransferCount::K2Node_DynamicCast_AsFort_World_Item' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetMaxTransferCount, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ItemManagementScreen_C_GetMaxTransferCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetMaxTransferCount, CallFunc_GetNumInStack_ReturnValue) == 0x000024, "Member 'ItemManagementScreen_C_GetMaxTransferCount::CallFunc_GetNumInStack_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetMaxTransferCount, CallFunc_GetContext_ReturnValue) == 0x000028, "Member 'ItemManagementScreen_C_GetMaxTransferCount::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetMaxTransferCount, CallFunc_GetContext_ReturnValue1) == 0x000030, "Member 'ItemManagementScreen_C_GetMaxTransferCount::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetMaxTransferCount, CallFunc_GetNumInStack_ReturnValue1) == 0x000038, "Member 'ItemManagementScreen_C_GetMaxTransferCount::CallFunc_GetNumInStack_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetMaxTransferCount, CallFunc_GetBackpackOverflowFromAddingItem_ReturnValue) == 0x00003C, "Member 'ItemManagementScreen_C_GetMaxTransferCount::CallFunc_GetBackpackOverflowFromAddingItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetMaxTransferCount, CallFunc_GetNumInStack_ReturnValue12) == 0x000040, "Member 'ItemManagementScreen_C_GetMaxTransferCount::CallFunc_GetNumInStack_ReturnValue12' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetMaxTransferCount, CallFunc_Subtract_IntInt_ReturnValue) == 0x000044, "Member 'ItemManagementScreen_C_GetMaxTransferCount::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetMaxTransferCount, CallFunc_GetDeployableBaseOverflowFromAddingItem_ReturnValue) == 0x000048, "Member 'ItemManagementScreen_C_GetMaxTransferCount::CallFunc_GetDeployableBaseOverflowFromAddingItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetMaxTransferCount, CallFunc_Subtract_IntInt_ReturnValue1) == 0x00004C, "Member 'ItemManagementScreen_C_GetMaxTransferCount::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetMaxTransferCount, CallFunc_GetContext_ReturnValue12) == 0x000050, "Member 'ItemManagementScreen_C_GetMaxTransferCount::CallFunc_GetContext_ReturnValue12' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetMaxTransferCount, CallFunc_GetOwningPlayer_ReturnValue) == 0x000058, "Member 'ItemManagementScreen_C_GetMaxTransferCount::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetMaxTransferCount, CallFunc_GetStorageOverflowFromAddingItem_ReturnValue) == 0x000060, "Member 'ItemManagementScreen_C_GetMaxTransferCount::CallFunc_GetStorageOverflowFromAddingItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetMaxTransferCount, K2Node_DynamicCast_AsFort_Player_Controller_Deployable_Base) == 0x000068, "Member 'ItemManagementScreen_C_GetMaxTransferCount::K2Node_DynamicCast_AsFort_Player_Controller_Deployable_Base' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetMaxTransferCount, K2Node_DynamicCast_bSuccess1) == 0x000070, "Member 'ItemManagementScreen_C_GetMaxTransferCount::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetMaxTransferCount, CallFunc_Subtract_IntInt_ReturnValue12) == 0x000074, "Member 'ItemManagementScreen_C_GetMaxTransferCount::CallFunc_Subtract_IntInt_ReturnValue12' has a wrong offset!");
static_assert(offsetof(ItemManagementScreen_C_GetMaxTransferCount, CallFunc_ContainsItem_ReturnValue) == 0x000078, "Member 'ItemManagementScreen_C_GetMaxTransferCount::CallFunc_ContainsItem_ReturnValue' has a wrong offset!");

}


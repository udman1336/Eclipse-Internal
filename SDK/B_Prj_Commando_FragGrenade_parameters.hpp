#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Commando_FragGrenade

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function B_Prj_Commando_FragGrenade.B_Prj_Commando_FragGrenade_C.ExecuteUbergraph_B_Prj_Commando_FragGrenade
// 0x0490 (0x0490 - 0x0000)
struct B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit1;                                 // 0x0008(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0090(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            CallFunc_GetInstigatorController_ReturnValue;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable1;                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue;                   // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_Event_HitActors;                            // 0x0130(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<struct FHitResult>                     K2Node_Event_HitResults;                           // 0x0140(0x0010)(ConstParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	float                                         K2Node_Event_Damage;                               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0158(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0170(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0194(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x01A8(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_232[0x2];                                      // 0x0232(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x023C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0248(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0254(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0260(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0280(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0298(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable12;               // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x02C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable123;              // 0x02C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable1;                      // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable12;                     // 0x02C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable123;                    // 0x02C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C7[0x1];                                      // 0x02C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2ED[0x3];                                      // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x02F0(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit1;             // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap1;          // 0x0379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37A[0x2];                                      // 0x037A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time1;                     // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance1;                 // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location1;                 // 0x0384(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint1;              // 0x0390(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal1;                   // 0x039C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal1;             // 0x03A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat1;                  // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor1;                 // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent1;             // 0x03C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName1;              // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem1;                  // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex1;                // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart1;               // 0x03E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd1;                 // 0x03EC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn1;                        // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue1;         // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable1234;                   // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable1234;             // 0x040A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40B[0x1];                                      // 0x040B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x040C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue1;               // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x042C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42D[0x3];                                      // 0x042D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0434(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue12;              // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0448(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue1;       // 0x0454(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_455[0x3];                                      // 0x0455(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0460(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0470(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x047C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47D[0x3];                                      // 0x047D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0480(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x048C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade) == 0x000008, "Wrong alignment on B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade");
static_assert(sizeof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade) == 0x000490, "Wrong size on B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, EntryPoint) == 0x000000, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_HasAuthority_ReturnValue) == 0x000005, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, K2Node_Event_Hit1) == 0x000008, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::K2Node_Event_Hit1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000090, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_GetInstigatorController_ReturnValue) == 0x000118, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_GetInstigatorController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_GetPlayerController_ReturnValue) == 0x000120, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, Temp_bool_Has_Been_Initd_Variable1) == 0x000128, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::Temp_bool_Has_Been_Initd_Variable1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_OnSameTeam_ReturnValue) == 0x000129, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_OnSameTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, K2Node_Event_HitActors) == 0x000130, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::K2Node_Event_HitActors' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, K2Node_Event_HitResults) == 0x000140, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::K2Node_Event_HitResults' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, K2Node_Event_Damage) == 0x000150, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, K2Node_Event_DamageType) == 0x000158, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, K2Node_Event_InstigatedBy) == 0x000160, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, K2Node_Event_DamageCauser) == 0x000168, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_MakeRotator_ReturnValue) == 0x000170, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_GetInstigator_ReturnValue) == 0x000180, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000188, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_IsLocallyControlled_ReturnValue) == 0x000190, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000194, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, Temp_bool_IsClosed_Variable) == 0x0001A0, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, K2Node_Event_Hit) == 0x0001A8, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_bBlockingHit) == 0x000230, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_bInitialOverlap) == 0x000231, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_Time) == 0x000234, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_Distance) == 0x000238, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_Location) == 0x00023C, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_ImpactPoint) == 0x000248, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_Normal) == 0x000254, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_ImpactNormal) == 0x000260, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_PhysMat) == 0x000270, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_HitActor) == 0x000278, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_HitComponent) == 0x000280, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_HitBoneName) == 0x000288, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_HitItem) == 0x000290, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_FaceIndex) == 0x000294, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_TraceStart) == 0x000298, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_TraceEnd) == 0x0002A4, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, K2Node_DynamicCast_AsPawn) == 0x0002B0, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, K2Node_DynamicCast_bSuccess) == 0x0002B8, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_Add_IntInt_ReturnValue) == 0x0002BC, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0002C0, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, Temp_bool_Has_Been_Initd_Variable12) == 0x0002C1, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::Temp_bool_Has_Been_Initd_Variable12' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0002C2, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, Temp_bool_Has_Been_Initd_Variable123) == 0x0002C3, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::Temp_bool_Has_Been_Initd_Variable123' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, Temp_bool_IsClosed_Variable1) == 0x0002C4, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::Temp_bool_IsClosed_Variable1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, Temp_bool_IsClosed_Variable12) == 0x0002C5, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::Temp_bool_IsClosed_Variable12' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, Temp_bool_IsClosed_Variable123) == 0x0002C6, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::Temp_bool_IsClosed_Variable123' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0002C8, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0002D0, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, K2Node_ComponentBoundEvent_OtherActor) == 0x0002D8, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, K2Node_ComponentBoundEvent_OtherComp) == 0x0002E0, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0002E8, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, K2Node_ComponentBoundEvent_bFromSweep) == 0x0002EC, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, K2Node_ComponentBoundEvent_SweepResult) == 0x0002F0, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_bBlockingHit1) == 0x000378, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_bBlockingHit1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_bInitialOverlap1) == 0x000379, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_bInitialOverlap1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_Time1) == 0x00037C, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_Time1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_Distance1) == 0x000380, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_Distance1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_Location1) == 0x000384, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_Location1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_ImpactPoint1) == 0x000390, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_ImpactPoint1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_Normal1) == 0x00039C, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_Normal1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_ImpactNormal1) == 0x0003A8, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_ImpactNormal1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_PhysMat1) == 0x0003B8, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_PhysMat1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_HitActor1) == 0x0003C0, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_HitActor1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_HitComponent1) == 0x0003C8, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_HitComponent1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_HitBoneName1) == 0x0003D0, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_HitBoneName1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_HitItem1) == 0x0003D8, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_HitItem1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_FaceIndex1) == 0x0003DC, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_FaceIndex1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_TraceStart1) == 0x0003E0, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_TraceStart1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakHitResult_TraceEnd1) == 0x0003EC, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakHitResult_TraceEnd1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, K2Node_DynamicCast_AsPawn1) == 0x0003F8, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::K2Node_DynamicCast_AsPawn1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, K2Node_DynamicCast_bSuccess1) == 0x000400, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_Add_IntInt_ReturnValue1) == 0x000404, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_GreaterEqual_IntInt_ReturnValue1) == 0x000408, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_GreaterEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, Temp_bool_IsClosed_Variable1234) == 0x000409, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::Temp_bool_IsClosed_Variable1234' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, Temp_bool_Has_Been_Initd_Variable1234) == 0x00040A, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::Temp_bool_Has_Been_Initd_Variable1234' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00040C, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_GetInstigator_ReturnValue1) == 0x000418, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_GetInstigator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakVector_X) == 0x000420, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakVector_Y) == 0x000424, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_BreakVector_Z) == 0x000428, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00042C, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_Abs_ReturnValue) == 0x000430, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_MakeVector_ReturnValue) == 0x000434, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_GetInstigator_ReturnValue12) == 0x000440, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_GetInstigator_ReturnValue12' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000448, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_NotEqual_ObjectObject_ReturnValue1) == 0x000454, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_NotEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, K2Node_CustomEvent_DestroyedActor) == 0x000458, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, K2Node_CreateDelegate_OutputDelegate) == 0x000460, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000470, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_IsDedicatedServer_ReturnValue) == 0x00047C, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000480, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade, CallFunc_IsDedicatedServer_ReturnValue1) == 0x00048C, "Member 'B_Prj_Commando_FragGrenade_C_ExecuteUbergraph_B_Prj_Commando_FragGrenade::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");

// Function B_Prj_Commando_FragGrenade.B_Prj_Commando_FragGrenade_C.On Destroy Grenade
// 0x0008 (0x0008 - 0x0000)
struct B_Prj_Commando_FragGrenade_C_On_Destroy_Grenade final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_Commando_FragGrenade_C_On_Destroy_Grenade) == 0x000008, "Wrong alignment on B_Prj_Commando_FragGrenade_C_On_Destroy_Grenade");
static_assert(sizeof(B_Prj_Commando_FragGrenade_C_On_Destroy_Grenade) == 0x000008, "Wrong size on B_Prj_Commando_FragGrenade_C_On_Destroy_Grenade");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_On_Destroy_Grenade, DestroyedActor) == 0x000000, "Member 'B_Prj_Commando_FragGrenade_C_On_Destroy_Grenade::DestroyedActor' has a wrong offset!");

// Function B_Prj_Commando_FragGrenade.B_Prj_Commando_FragGrenade_C.BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct B_Prj_Commando_FragGrenade_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_Prj_Commando_FragGrenade_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_Prj_Commando_FragGrenade_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(B_Prj_Commando_FragGrenade_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on B_Prj_Commando_FragGrenade_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'B_Prj_Commando_FragGrenade_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'B_Prj_Commando_FragGrenade_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'B_Prj_Commando_FragGrenade_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'B_Prj_Commando_FragGrenade_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'B_Prj_Commando_FragGrenade_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'B_Prj_Commando_FragGrenade_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function B_Prj_Commando_FragGrenade.B_Prj_Commando_FragGrenade_C.OnBounce
// 0x0088 (0x0088 - 0x0000)
struct B_Prj_Commando_FragGrenade_C_OnBounce final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_Prj_Commando_FragGrenade_C_OnBounce) == 0x000008, "Wrong alignment on B_Prj_Commando_FragGrenade_C_OnBounce");
static_assert(sizeof(B_Prj_Commando_FragGrenade_C_OnBounce) == 0x000088, "Wrong size on B_Prj_Commando_FragGrenade_C_OnBounce");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_OnBounce, Hit) == 0x000000, "Member 'B_Prj_Commando_FragGrenade_C_OnBounce::Hit' has a wrong offset!");

// Function B_Prj_Commando_FragGrenade.B_Prj_Commando_FragGrenade_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct B_Prj_Commando_FragGrenade_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_Commando_FragGrenade_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on B_Prj_Commando_FragGrenade_C_ReceiveAnyDamage");
static_assert(sizeof(B_Prj_Commando_FragGrenade_C_ReceiveAnyDamage) == 0x000020, "Wrong size on B_Prj_Commando_FragGrenade_C_ReceiveAnyDamage");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'B_Prj_Commando_FragGrenade_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'B_Prj_Commando_FragGrenade_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'B_Prj_Commando_FragGrenade_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'B_Prj_Commando_FragGrenade_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function B_Prj_Commando_FragGrenade.B_Prj_Commando_FragGrenade_C.OnExploded
// 0x0020 (0x0020 - 0x0000)
struct B_Prj_Commando_FragGrenade_C_OnExploded final
{
public:
	TArray<class AActor*>                         HitActors;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FHitResult>                     HitResults;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(B_Prj_Commando_FragGrenade_C_OnExploded) == 0x000008, "Wrong alignment on B_Prj_Commando_FragGrenade_C_OnExploded");
static_assert(sizeof(B_Prj_Commando_FragGrenade_C_OnExploded) == 0x000020, "Wrong size on B_Prj_Commando_FragGrenade_C_OnExploded");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_OnExploded, HitActors) == 0x000000, "Member 'B_Prj_Commando_FragGrenade_C_OnExploded::HitActors' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_OnExploded, HitResults) == 0x000010, "Member 'B_Prj_Commando_FragGrenade_C_OnExploded::HitResults' has a wrong offset!");

// Function B_Prj_Commando_FragGrenade.B_Prj_Commando_FragGrenade_C.OnStop
// 0x0088 (0x0088 - 0x0000)
struct B_Prj_Commando_FragGrenade_C_OnStop final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_Prj_Commando_FragGrenade_C_OnStop) == 0x000008, "Wrong alignment on B_Prj_Commando_FragGrenade_C_OnStop");
static_assert(sizeof(B_Prj_Commando_FragGrenade_C_OnStop) == 0x000088, "Wrong size on B_Prj_Commando_FragGrenade_C_OnStop");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_OnStop, Hit) == 0x000000, "Member 'B_Prj_Commando_FragGrenade_C_OnStop::Hit' has a wrong offset!");

// Function B_Prj_Commando_FragGrenade.B_Prj_Commando_FragGrenade_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct B_Prj_Commando_FragGrenade_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Prj_Commando_FragGrenade_C_UserConstructionScript) == 0x000001, "Wrong alignment on B_Prj_Commando_FragGrenade_C_UserConstructionScript");
static_assert(sizeof(B_Prj_Commando_FragGrenade_C_UserConstructionScript) == 0x000001, "Wrong size on B_Prj_Commando_FragGrenade_C_UserConstructionScript");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_UserConstructionScript, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'B_Prj_Commando_FragGrenade_C_UserConstructionScript::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function B_Prj_Commando_FragGrenade.B_Prj_Commando_FragGrenade_C.OnRep_StoredHit
// 0x0080 (0x0080 - 0x0000)
struct B_Prj_Commando_FragGrenade_C_OnRep_StoredHit final
{
public:
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0068(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0074(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_Commando_FragGrenade_C_OnRep_StoredHit) == 0x000008, "Wrong alignment on B_Prj_Commando_FragGrenade_C_OnRep_StoredHit");
static_assert(sizeof(B_Prj_Commando_FragGrenade_C_OnRep_StoredHit) == 0x000080, "Wrong size on B_Prj_Commando_FragGrenade_C_OnRep_StoredHit");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_OnRep_StoredHit, CallFunc_BreakHitResult_bBlockingHit) == 0x000000, "Member 'B_Prj_Commando_FragGrenade_C_OnRep_StoredHit::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_OnRep_StoredHit, CallFunc_BreakHitResult_bInitialOverlap) == 0x000001, "Member 'B_Prj_Commando_FragGrenade_C_OnRep_StoredHit::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_OnRep_StoredHit, CallFunc_BreakHitResult_Time) == 0x000004, "Member 'B_Prj_Commando_FragGrenade_C_OnRep_StoredHit::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_OnRep_StoredHit, CallFunc_BreakHitResult_Distance) == 0x000008, "Member 'B_Prj_Commando_FragGrenade_C_OnRep_StoredHit::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_OnRep_StoredHit, CallFunc_BreakHitResult_Location) == 0x00000C, "Member 'B_Prj_Commando_FragGrenade_C_OnRep_StoredHit::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_OnRep_StoredHit, CallFunc_BreakHitResult_ImpactPoint) == 0x000018, "Member 'B_Prj_Commando_FragGrenade_C_OnRep_StoredHit::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_OnRep_StoredHit, CallFunc_BreakHitResult_Normal) == 0x000024, "Member 'B_Prj_Commando_FragGrenade_C_OnRep_StoredHit::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_OnRep_StoredHit, CallFunc_BreakHitResult_ImpactNormal) == 0x000030, "Member 'B_Prj_Commando_FragGrenade_C_OnRep_StoredHit::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_OnRep_StoredHit, CallFunc_BreakHitResult_PhysMat) == 0x000040, "Member 'B_Prj_Commando_FragGrenade_C_OnRep_StoredHit::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_OnRep_StoredHit, CallFunc_BreakHitResult_HitActor) == 0x000048, "Member 'B_Prj_Commando_FragGrenade_C_OnRep_StoredHit::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_OnRep_StoredHit, CallFunc_BreakHitResult_HitComponent) == 0x000050, "Member 'B_Prj_Commando_FragGrenade_C_OnRep_StoredHit::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_OnRep_StoredHit, CallFunc_BreakHitResult_HitBoneName) == 0x000058, "Member 'B_Prj_Commando_FragGrenade_C_OnRep_StoredHit::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_OnRep_StoredHit, CallFunc_BreakHitResult_HitItem) == 0x000060, "Member 'B_Prj_Commando_FragGrenade_C_OnRep_StoredHit::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_OnRep_StoredHit, CallFunc_BreakHitResult_FaceIndex) == 0x000064, "Member 'B_Prj_Commando_FragGrenade_C_OnRep_StoredHit::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_OnRep_StoredHit, CallFunc_BreakHitResult_TraceStart) == 0x000068, "Member 'B_Prj_Commando_FragGrenade_C_OnRep_StoredHit::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_OnRep_StoredHit, CallFunc_BreakHitResult_TraceEnd) == 0x000074, "Member 'B_Prj_Commando_FragGrenade_C_OnRep_StoredHit::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function B_Prj_Commando_FragGrenade.B_Prj_Commando_FragGrenade_C.CalcGrenadeSpeed
// 0x0030 (0x0030 - 0x0000)
struct B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed final
{
public:
	float                                         Angle;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrenadeSpeedMin;                                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrenadeSpeedMax;                                   // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxSpeedPitch;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinSpeedPitch;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed) == 0x000004, "Wrong alignment on B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed");
static_assert(sizeof(B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed) == 0x000030, "Wrong size on B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed, Angle) == 0x000000, "Member 'B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed::Angle' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed, ReturnValue) == 0x000004, "Member 'B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed, GrenadeSpeedMin) == 0x000008, "Member 'B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed::GrenadeSpeedMin' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed, GrenadeSpeedMax) == 0x00000C, "Member 'B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed::GrenadeSpeedMax' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed, MaxSpeedPitch) == 0x000010, "Member 'B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed::MaxSpeedPitch' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed, MinSpeedPitch) == 0x000014, "Member 'B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed::MinSpeedPitch' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed, CallFunc_NormalizeAxis_ReturnValue) == 0x000018, "Member 'B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000024, "Member 'B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed, CallFunc_Lerp_ReturnValue) == 0x00002C, "Member 'B_Prj_Commando_FragGrenade_C_CalcGrenadeSpeed::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function B_Prj_Commando_FragGrenade.B_Prj_Commando_FragGrenade_C.SpawnClusters
// 0x0050 (0x0050 - 0x0000)
struct B_Prj_Commando_FragGrenade_C_SpawnClusters final
{
public:
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue1;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0014(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue12;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortProjectileBase*                    CallFunc_SpawnProjectile_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Prj_Commando_FragGrenade_C_SpawnClusters) == 0x000008, "Wrong alignment on B_Prj_Commando_FragGrenade_C_SpawnClusters");
static_assert(sizeof(B_Prj_Commando_FragGrenade_C_SpawnClusters) == 0x000050, "Wrong size on B_Prj_Commando_FragGrenade_C_SpawnClusters");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnClusters, CallFunc_RandomFloatInRange_ReturnValue) == 0x000000, "Member 'B_Prj_Commando_FragGrenade_C_SpawnClusters::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnClusters, CallFunc_RandomFloatInRange_ReturnValue1) == 0x000004, "Member 'B_Prj_Commando_FragGrenade_C_SpawnClusters::CallFunc_RandomFloatInRange_ReturnValue1' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnClusters, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'B_Prj_Commando_FragGrenade_C_SpawnClusters::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnClusters, CallFunc_MakeRotator_ReturnValue) == 0x000014, "Member 'B_Prj_Commando_FragGrenade_C_SpawnClusters::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnClusters, CallFunc_Add_VectorVector_ReturnValue) == 0x000020, "Member 'B_Prj_Commando_FragGrenade_C_SpawnClusters::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnClusters, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'B_Prj_Commando_FragGrenade_C_SpawnClusters::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnClusters, CallFunc_RandomFloatInRange_ReturnValue12) == 0x000038, "Member 'B_Prj_Commando_FragGrenade_C_SpawnClusters::CallFunc_RandomFloatInRange_ReturnValue12' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnClusters, Temp_int_Variable) == 0x00003C, "Member 'B_Prj_Commando_FragGrenade_C_SpawnClusters::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnClusters, CallFunc_SpawnProjectile_ReturnValue) == 0x000040, "Member 'B_Prj_Commando_FragGrenade_C_SpawnClusters::CallFunc_SpawnProjectile_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnClusters, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'B_Prj_Commando_FragGrenade_C_SpawnClusters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnClusters, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00004C, "Member 'B_Prj_Commando_FragGrenade_C_SpawnClusters::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function B_Prj_Commando_FragGrenade.B_Prj_Commando_FragGrenade_C.SpawnKeepOut
// 0x00B0 (0x00B0 - 0x0000)
struct B_Prj_Commando_FragGrenade_C_SpawnKeepOut final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0014(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0070(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x007C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0088(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAreaOfEffectCloud*                 CallFunc_SpawnAreaOfEffectCloud_ReturnValue;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAOE_Commando_KeepOutExplosion_C*       K2Node_DynamicCast_AsAOE_Commando_Keep_Out_Explosion; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Prj_Commando_FragGrenade_C_SpawnKeepOut) == 0x000008, "Wrong alignment on B_Prj_Commando_FragGrenade_C_SpawnKeepOut");
static_assert(sizeof(B_Prj_Commando_FragGrenade_C_SpawnKeepOut) == 0x0000B0, "Wrong size on B_Prj_Commando_FragGrenade_C_SpawnKeepOut");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnKeepOut, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'B_Prj_Commando_FragGrenade_C_SpawnKeepOut::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnKeepOut, CallFunc_BreakHitResult_bBlockingHit) == 0x000008, "Member 'B_Prj_Commando_FragGrenade_C_SpawnKeepOut::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnKeepOut, CallFunc_BreakHitResult_bInitialOverlap) == 0x000009, "Member 'B_Prj_Commando_FragGrenade_C_SpawnKeepOut::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnKeepOut, CallFunc_BreakHitResult_Time) == 0x00000C, "Member 'B_Prj_Commando_FragGrenade_C_SpawnKeepOut::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnKeepOut, CallFunc_BreakHitResult_Distance) == 0x000010, "Member 'B_Prj_Commando_FragGrenade_C_SpawnKeepOut::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnKeepOut, CallFunc_BreakHitResult_Location) == 0x000014, "Member 'B_Prj_Commando_FragGrenade_C_SpawnKeepOut::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnKeepOut, CallFunc_BreakHitResult_ImpactPoint) == 0x000020, "Member 'B_Prj_Commando_FragGrenade_C_SpawnKeepOut::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnKeepOut, CallFunc_BreakHitResult_Normal) == 0x00002C, "Member 'B_Prj_Commando_FragGrenade_C_SpawnKeepOut::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnKeepOut, CallFunc_BreakHitResult_ImpactNormal) == 0x000038, "Member 'B_Prj_Commando_FragGrenade_C_SpawnKeepOut::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnKeepOut, CallFunc_BreakHitResult_PhysMat) == 0x000048, "Member 'B_Prj_Commando_FragGrenade_C_SpawnKeepOut::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnKeepOut, CallFunc_BreakHitResult_HitActor) == 0x000050, "Member 'B_Prj_Commando_FragGrenade_C_SpawnKeepOut::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnKeepOut, CallFunc_BreakHitResult_HitComponent) == 0x000058, "Member 'B_Prj_Commando_FragGrenade_C_SpawnKeepOut::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnKeepOut, CallFunc_BreakHitResult_HitBoneName) == 0x000060, "Member 'B_Prj_Commando_FragGrenade_C_SpawnKeepOut::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnKeepOut, CallFunc_BreakHitResult_HitItem) == 0x000068, "Member 'B_Prj_Commando_FragGrenade_C_SpawnKeepOut::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnKeepOut, CallFunc_BreakHitResult_FaceIndex) == 0x00006C, "Member 'B_Prj_Commando_FragGrenade_C_SpawnKeepOut::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnKeepOut, CallFunc_BreakHitResult_TraceStart) == 0x000070, "Member 'B_Prj_Commando_FragGrenade_C_SpawnKeepOut::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnKeepOut, CallFunc_BreakHitResult_TraceEnd) == 0x00007C, "Member 'B_Prj_Commando_FragGrenade_C_SpawnKeepOut::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnKeepOut, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000088, "Member 'B_Prj_Commando_FragGrenade_C_SpawnKeepOut::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnKeepOut, CallFunc_SpawnAreaOfEffectCloud_ReturnValue) == 0x000098, "Member 'B_Prj_Commando_FragGrenade_C_SpawnKeepOut::CallFunc_SpawnAreaOfEffectCloud_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnKeepOut, K2Node_DynamicCast_AsAOE_Commando_Keep_Out_Explosion) == 0x0000A0, "Member 'B_Prj_Commando_FragGrenade_C_SpawnKeepOut::K2Node_DynamicCast_AsAOE_Commando_Keep_Out_Explosion' has a wrong offset!");
static_assert(offsetof(B_Prj_Commando_FragGrenade_C_SpawnKeepOut, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'B_Prj_Commando_FragGrenade_C_SpawnKeepOut::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


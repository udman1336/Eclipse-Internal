#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AbilityFunctions

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function AbilityFunctions.AbilityFunctions_C.DoNOTUse-BuildArrayOfHitActors
// 0x0088 (0x0088 - 0x0000)
struct AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         HitActors;                                         // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<class AActor*>                         LocalHitActors;                                    // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	int32                                         CallFunc_GetDataCountFromTargetData_ReturnValue;   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetActorsFromTargetData_ReturnValue;      // 0x0058(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors) == 0x000008, "Wrong alignment on AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors");
static_assert(sizeof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors) == 0x000088, "Wrong size on AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, TargetData) == 0x000000, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::TargetData' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, __WorldContext) == 0x000020, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, HitActors) == 0x000028, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::HitActors' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, LocalHitActors) == 0x000038, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::LocalHitActors' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, CallFunc_GetDataCountFromTargetData_ReturnValue) == 0x000048, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::CallFunc_GetDataCountFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, Temp_int_Variable) == 0x00004C, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, CallFunc_Subtract_IntInt_ReturnValue) == 0x000050, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, CallFunc_GetActorsFromTargetData_ReturnValue) == 0x000058, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::CallFunc_GetActorsFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000068, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, CallFunc_Array_Get_Item) == 0x000070, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000078, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function AbilityFunctions.AbilityFunctions_C.SetArrayOfHitActors
// 0x0078 (0x0078 - 0x0000)
struct AbilityFunctions_C_SetArrayOfHitActors final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<class AActor*>                         ArrayToSet;                                        // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDataCountFromTargetData_ReturnValue;   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetActorsFromTargetData_ReturnValue;      // 0x0048(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctions_C_SetArrayOfHitActors) == 0x000008, "Wrong alignment on AbilityFunctions_C_SetArrayOfHitActors");
static_assert(sizeof(AbilityFunctions_C_SetArrayOfHitActors) == 0x000078, "Wrong size on AbilityFunctions_C_SetArrayOfHitActors");
static_assert(offsetof(AbilityFunctions_C_SetArrayOfHitActors, TargetData) == 0x000000, "Member 'AbilityFunctions_C_SetArrayOfHitActors::TargetData' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_SetArrayOfHitActors, ArrayToSet) == 0x000020, "Member 'AbilityFunctions_C_SetArrayOfHitActors::ArrayToSet' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_SetArrayOfHitActors, __WorldContext) == 0x000030, "Member 'AbilityFunctions_C_SetArrayOfHitActors::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_SetArrayOfHitActors, CallFunc_GetDataCountFromTargetData_ReturnValue) == 0x000038, "Member 'AbilityFunctions_C_SetArrayOfHitActors::CallFunc_GetDataCountFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_SetArrayOfHitActors, Temp_int_Variable) == 0x00003C, "Member 'AbilityFunctions_C_SetArrayOfHitActors::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_SetArrayOfHitActors, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'AbilityFunctions_C_SetArrayOfHitActors::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_SetArrayOfHitActors, CallFunc_GetActorsFromTargetData_ReturnValue) == 0x000048, "Member 'AbilityFunctions_C_SetArrayOfHitActors::CallFunc_GetActorsFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_SetArrayOfHitActors, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000058, "Member 'AbilityFunctions_C_SetArrayOfHitActors::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_SetArrayOfHitActors, CallFunc_Array_Get_Item) == 0x000060, "Member 'AbilityFunctions_C_SetArrayOfHitActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_SetArrayOfHitActors, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000068, "Member 'AbilityFunctions_C_SetArrayOfHitActors::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_SetArrayOfHitActors, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'AbilityFunctions_C_SetArrayOfHitActors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_SetArrayOfHitActors, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'AbilityFunctions_C_SetArrayOfHitActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function AbilityFunctions.AbilityFunctions_C.ConvertRangeToTiles
// 0x0018 (0x0018 - 0x0000)
struct AbilityFunctions_C_ConvertRangeToTiles final
{
public:
	float                                         InRange;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutTile;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctions_C_ConvertRangeToTiles) == 0x000008, "Wrong alignment on AbilityFunctions_C_ConvertRangeToTiles");
static_assert(sizeof(AbilityFunctions_C_ConvertRangeToTiles) == 0x000018, "Wrong size on AbilityFunctions_C_ConvertRangeToTiles");
static_assert(offsetof(AbilityFunctions_C_ConvertRangeToTiles, InRange) == 0x000000, "Member 'AbilityFunctions_C_ConvertRangeToTiles::InRange' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ConvertRangeToTiles, __WorldContext) == 0x000008, "Member 'AbilityFunctions_C_ConvertRangeToTiles::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ConvertRangeToTiles, OutTile) == 0x000010, "Member 'AbilityFunctions_C_ConvertRangeToTiles::OutTile' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ConvertRangeToTiles, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'AbilityFunctions_C_ConvertRangeToTiles::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function AbilityFunctions.AbilityFunctions_C.GetProjectedTeleportLocation
// 0x00A8 (0x00A8 - 0x0000)
struct AbilityFunctions_C_GetProjectedTeleportLocation final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementDistance;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0018(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue1;       // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue12;      // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0050(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0060(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0078(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0084(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0090(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x009C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctions_C_GetProjectedTeleportLocation) == 0x000008, "Wrong alignment on AbilityFunctions_C_GetProjectedTeleportLocation");
static_assert(sizeof(AbilityFunctions_C_GetProjectedTeleportLocation) == 0x0000A8, "Wrong size on AbilityFunctions_C_GetProjectedTeleportLocation");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, Actor) == 0x000000, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::Actor' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, MovementDistance) == 0x000008, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::MovementDistance' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, __WorldContext) == 0x000010, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, TargetLocation) == 0x000018, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::TargetLocation' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_GetVelocity_ReturnValue) == 0x000024, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_BreakVector_X) == 0x00003C, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_BreakVector_Y) == 0x000040, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_BreakVector_Z) == 0x000044, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_VSize_ReturnValue) == 0x000048, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00004C, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_EqualEqual_FloatFloat_ReturnValue1) == 0x00004D, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_EqualEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_EqualEqual_FloatFloat_ReturnValue12) == 0x00004E, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_EqualEqual_FloatFloat_ReturnValue12' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_GetActorForwardVector_ReturnValue) == 0x000050, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_BooleanAND_ReturnValue) == 0x00005C, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_BooleanOR_ReturnValue) == 0x00005D, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_SelectVector_ReturnValue) == 0x000060, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_BreakVector_X1) == 0x00006C, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_BreakVector_Y1) == 0x000070, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_BreakVector_Z1) == 0x000074, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_MakeVector_ReturnValue) == 0x000078, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_Normal_ReturnValue) == 0x000084, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000090, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x00009C, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function AbilityFunctions.AbilityFunctions_C.ShouldHammerHitsHealRespondToEvent
// 0x00C8 (0x00C8 - 0x0000)
struct AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00A8)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          NewLocalVar_0;                                     // 0x00B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllTags_ReturnValue;                   // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllTags_ReturnValue1;                  // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent) == 0x000008, "Wrong alignment on AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent");
static_assert(sizeof(AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent) == 0x0000C8, "Wrong size on AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent");
static_assert(offsetof(AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent, Payload) == 0x000000, "Member 'AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent::Payload' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent, __WorldContext) == 0x0000A8, "Member 'AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent, ReturnValue) == 0x0000B0, "Member 'AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent::ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent, NewLocalVar_0) == 0x0000B1, "Member 'AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent, CallFunc_HasAllTags_ReturnValue) == 0x0000B2, "Member 'AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent::CallFunc_HasAllTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent, CallFunc_HasAllTags_ReturnValue1) == 0x0000B3, "Member 'AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent::CallFunc_HasAllTags_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent, K2Node_DynamicCast_AsFort_Pawn) == 0x0000B8, "Member 'AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent, CallFunc_BooleanAND_ReturnValue) == 0x0000C1, "Member 'AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent, CallFunc_BooleanAND_ReturnValue1) == 0x0000C2, "Member 'AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

// Function AbilityFunctions.AbilityFunctions_C.ShouldSwordHitsHealRespondToEvent
// 0x00C8 (0x00C8 - 0x0000)
struct AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00A8)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllTags_ReturnValue;                   // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllTags_ReturnValue1;                  // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllTags_ReturnValue12;                 // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue12;                 // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent) == 0x000008, "Wrong alignment on AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent");
static_assert(sizeof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent) == 0x0000C8, "Wrong size on AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent");
static_assert(offsetof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent, Payload) == 0x000000, "Member 'AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent::Payload' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent, __WorldContext) == 0x0000A8, "Member 'AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent, ReturnValue) == 0x0000B0, "Member 'AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent::ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent, CallFunc_HasAllTags_ReturnValue) == 0x0000B1, "Member 'AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent::CallFunc_HasAllTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent, CallFunc_HasAllTags_ReturnValue1) == 0x0000B2, "Member 'AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent::CallFunc_HasAllTags_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent, CallFunc_HasAllTags_ReturnValue12) == 0x0000B3, "Member 'AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent::CallFunc_HasAllTags_ReturnValue12' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent, K2Node_DynamicCast_AsFort_Pawn) == 0x0000B8, "Member 'AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent, CallFunc_Not_PreBool_ReturnValue) == 0x0000C1, "Member 'AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent, CallFunc_BooleanAND_ReturnValue) == 0x0000C2, "Member 'AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent, CallFunc_BooleanAND_ReturnValue1) == 0x0000C3, "Member 'AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent, CallFunc_BooleanAND_ReturnValue12) == 0x0000C4, "Member 'AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent::CallFunc_BooleanAND_ReturnValue12' has a wrong offset!");

}


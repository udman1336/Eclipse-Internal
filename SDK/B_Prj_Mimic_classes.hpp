#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Mimic

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_Mimic.B_Prj_Mimic_C
// 0x0048 (0x0860 - 0x0818)
class AB_Prj_Mimic_C final : public AFortProjectileBase
{
public:
	uint8                                         Pad_818[0x8];                                      // 0x0818(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0820(0x0008)(Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Mesh;                                              // 0x0828(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Trail;                                           // 0x0830(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Mine_Material;                                     // 0x0838(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             BottleRocketFireCue;                               // 0x0840(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        P_Explosion;                                       // 0x0848(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             ExplosionCue;                                      // 0x0850(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lifetime_Min;                                      // 0x0858(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lifetime_Max;                                      // 0x085C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_Prj_Mimic(int32 EntryPoint);
	void OnExploded(const TArray<class AActor*>& HitActors, const TArray<struct FHitResult>& HitResults);
	void OnBounce(const struct FHitResult& Hit);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_Mimic_C">();
	}
	static class AB_Prj_Mimic_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_Mimic_C>();
	}
};
static_assert(alignof(AB_Prj_Mimic_C) == 0x000008, "Wrong alignment on AB_Prj_Mimic_C");
static_assert(sizeof(AB_Prj_Mimic_C) == 0x000860, "Wrong size on AB_Prj_Mimic_C");
static_assert(offsetof(AB_Prj_Mimic_C, UberGraphFrame) == 0x000820, "Member 'AB_Prj_Mimic_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_Mimic_C, Mesh) == 0x000828, "Member 'AB_Prj_Mimic_C::Mesh' has a wrong offset!");
static_assert(offsetof(AB_Prj_Mimic_C, P_Trail) == 0x000830, "Member 'AB_Prj_Mimic_C::P_Trail' has a wrong offset!");
static_assert(offsetof(AB_Prj_Mimic_C, Mine_Material) == 0x000838, "Member 'AB_Prj_Mimic_C::Mine_Material' has a wrong offset!");
static_assert(offsetof(AB_Prj_Mimic_C, BottleRocketFireCue) == 0x000840, "Member 'AB_Prj_Mimic_C::BottleRocketFireCue' has a wrong offset!");
static_assert(offsetof(AB_Prj_Mimic_C, P_Explosion) == 0x000848, "Member 'AB_Prj_Mimic_C::P_Explosion' has a wrong offset!");
static_assert(offsetof(AB_Prj_Mimic_C, ExplosionCue) == 0x000850, "Member 'AB_Prj_Mimic_C::ExplosionCue' has a wrong offset!");
static_assert(offsetof(AB_Prj_Mimic_C, Lifetime_Min) == 0x000858, "Member 'AB_Prj_Mimic_C::Lifetime_Min' has a wrong offset!");
static_assert(offsetof(AB_Prj_Mimic_C, Lifetime_Max) == 0x00085C, "Member 'AB_Prj_Mimic_C::Lifetime_Max' has a wrong offset!");

}


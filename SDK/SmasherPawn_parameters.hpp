#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SmasherPawn

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function SmasherPawn.SmasherPawn_C.ExecuteUbergraph_SmasherPawn
// 0x0DE0 (0x0DE0 - 0x0000)
struct SmasherPawn_C_ExecuteUbergraph_SmasherPawn final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable1;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable12;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable123;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable1234;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable;                              // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_AddComponent_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0080(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x008C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent1;           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor1;                    // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp1;                     // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex1;                // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep1;                    // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult1;                   // 0x00C0(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0148(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingSMActor*                       K2Node_DynamicCast_AsBuilding_SMActor;             // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingContainer*                     K2Node_DynamicCast_AsBuilding_Container;           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingProp*                          K2Node_DynamicCast_AsBuilding_Prop;                // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess12;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue1;     // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0190(0x00A8)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24A[0x2];                                      // 0x024A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x024C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0258(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue12;        // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue123;       // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1234;      // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue12345;     // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue123456;    // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0292(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortMovementUrgency                          Temp_byte_Variable1;                               // 0x0293(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_295[0x3];                                      // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage1;                              // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags1;                          // 0x02A0(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum1;                            // 0x02C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_HitInfo1;                             // 0x02D0(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              K2Node_Event_InstigatedBy1;                        // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser1;                        // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext1;                       // 0x0368(0x0018)()
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_382[0x2];                                      // 0x0382(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x038C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0398(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x03A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x03B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x03D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x03E8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03F4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Rift_Portals_C*                      K2Node_DynamicCast_AsB_Rift_Portals;               // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess123;                    // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409[0x3];                                      // 0x0409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x040C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0418(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue12;        // 0x0424(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0430(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue1;     // 0x0440(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue; // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0458(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0464(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0470(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x047C(0x000C)(IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue1; // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0490(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x04C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UMaterialInstanceDynamic*               CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue12; // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType1234;             // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551[0x7];                                      // 0x0551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters1234;            // 0x0558(0x00B8)(ContainsInstancedReference)
	struct FHitResult                             CallFunc_GetHitResult_ReturnValue;                 // 0x0610(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_GetHitResult_ReturnValue1;                // 0x0698(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EPhysicalSurface                              CallFunc_GetFortPhysicalSurface_ReturnValue;       // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit1;             // 0x0721(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap1;          // 0x0722(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_723[0x1];                                      // 0x0723(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time1;                     // 0x0724(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance1;                 // 0x0728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location1;                 // 0x072C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint1;              // 0x0738(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal1;                   // 0x0744(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal1;             // 0x0750(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75C[0x4];                                      // 0x075C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat1;                  // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor1;                 // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent1;             // 0x0770(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName1;              // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem1;                  // 0x0780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex1;                // 0x0784(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart1;               // 0x0788(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd1;                 // 0x0794(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetImpactPhysicalSurfaceSound_ReturnValue; // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit12;            // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap12;         // 0x07A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7AA[0x2];                                      // 0x07AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time12;                    // 0x07AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance12;                // 0x07B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location12;                // 0x07B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint12;             // 0x07C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal12;                  // 0x07CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal12;            // 0x07D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E4[0x4];                                      // 0x07E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat12;                 // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor12;                // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent12;            // 0x07F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName12;             // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem12;                 // 0x0808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex12;               // 0x080C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart12;              // 0x0810(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd12;                // 0x081C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0828(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_834[0x4];                                      // 0x0834(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x0838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue1;      // 0x0840(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_848[0x8];                                      // 0x0848(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0850(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0880(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x088C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0898(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A4[0x4];                                      // 0x08A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate1;             // 0x08A8(0x0010)(ZeroConstructor, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue12;     // 0x08B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryActivateAbilitiesByTag_ReturnValue;    // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C1[0x7];                                      // 0x08C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x08C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue1;                // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D1[0x3];                                      // 0x08D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x08D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x08D8(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x08F8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_904[0x4];                                      // 0x0904(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x0908(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              K2Node_Event_InstigatedBy;                         // 0x0990(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0998(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x09A0(0x0018)()
	EFortDamageZone                               CallFunc_GetDamageZone_ReturnValue;                // 0x09B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType123;              // 0x09B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BA[0x6];                                      // 0x09BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters123;             // 0x09C0(0x00B8)(ContainsInstancedReference)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0A78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A79[0x7];                                      // 0x0A79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAIEncounterInfo*                   CallFunc_GetEncounterInfo_ReturnValue;             // 0x0A80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue12;                    // 0x0A88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType12;               // 0x0A89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A8A[0x6];                                      // 0x0A8A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters12;              // 0x0A90(0x00B8)(ContainsInstancedReference)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType1;                // 0x0B48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B49[0x7];                                      // 0x0B49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters1;               // 0x0B50(0x00B8)(ContainsInstancedReference)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType;                 // 0x0C08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C09[0x7];                                      // 0x0C09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters;                // 0x0C10(0x00B8)(ContainsInstancedReference)
	bool                                          CallFunc_HasActiveAbilityWithAnyMatchingTag_ReturnValue; // 0x0CC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasActiveAbilityWithAnyMatchingTag_ReturnValue1; // 0x0CC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0CCA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable12;                              // 0x0CCB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasActiveAbilityWithAnyMatchingTag_ReturnValue12; // 0x0CCC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0CCD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable123;                             // 0x0CCE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CCF[0x1];                                      // 0x0CCF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0CD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1234;                   // 0x0CD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD9[0x7];                                      // 0x0CD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAIPawn*                            K2Node_DynamicCast_AsFort_AIPawn;                  // 0x0CE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess12345;                  // 0x0CE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortTeamAffiliation                          CallFunc_GetTeamAffiliation_ReturnValue;           // 0x0CE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x0CEA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CEB[0x1];                                      // 0x0CEB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalculateBumpMomentum_BumpMomentum;       // 0x0CEC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalculateBumpMomentum_BumpMomentum1;      // 0x0CF8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1234;                            // 0x0D04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select1_Default;                            // 0x0D05(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0D06(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0D07(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0D08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D09[0x3];                                      // 0x0D09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue1;                 // 0x0D0C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x0D18(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0D20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0D28(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x0D30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x0D34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D35[0x3];                                      // 0x0D35(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0D38(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_VSize_ReturnValue1;                       // 0x0DC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC4[0x4];                                      // 0x0DC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0DC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess123456;                 // 0x0DD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x0DD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn) == 0x000010, "Wrong alignment on SmasherPawn_C_ExecuteUbergraph_SmasherPawn");
static_assert(sizeof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn) == 0x000DE0, "Wrong size on SmasherPawn_C_ExecuteUbergraph_SmasherPawn");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, EntryPoint) == 0x000000, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::EntryPoint' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, Temp_object_Variable) == 0x000008, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, Temp_object_Variable1) == 0x000010, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, Temp_object_Variable12) == 0x000018, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::Temp_object_Variable12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, Temp_object_Variable123) == 0x000020, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::Temp_object_Variable123' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, Temp_object_Variable1234) == 0x000028, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::Temp_object_Variable1234' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, Temp_struct_Variable) == 0x000030, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_AddComponent_ReturnValue) == 0x000060, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_IsValid_ReturnValue1) == 0x000069, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_CreateDelegate_OutputDelegate) == 0x000070, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000080, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_K2_GetComponentScale_ReturnValue) == 0x00008C, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000098, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_CustomEvent_OverlappedComponent1) == 0x0000A0, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_CustomEvent_OverlappedComponent1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_CustomEvent_OtherActor1) == 0x0000A8, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_CustomEvent_OtherActor1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_CustomEvent_OtherComp1) == 0x0000B0, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_CustomEvent_OtherComp1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_CustomEvent_OtherBodyIndex1) == 0x0000B8, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_CustomEvent_OtherBodyIndex1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_CustomEvent_bFromSweep1) == 0x0000BC, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_CustomEvent_bFromSweep1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_CustomEvent_SweepResult1) == 0x0000C0, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_CustomEvent_SweepResult1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_GetVelocity_ReturnValue) == 0x000148, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_HasAuthority_ReturnValue) == 0x000154, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_VSize_ReturnValue) == 0x000158, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00015C, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_DynamicCast_AsBuilding_SMActor) == 0x000160, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_DynamicCast_AsBuilding_SMActor' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_DynamicCast_bSuccess) == 0x000168, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_DynamicCast_AsBuilding_Container) == 0x000170, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_DynamicCast_AsBuilding_Container' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_DynamicCast_bSuccess1) == 0x000178, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_DynamicCast_AsBuilding_Prop) == 0x000180, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_DynamicCast_AsBuilding_Prop' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_DynamicCast_bSuccess12) == 0x000188, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_DynamicCast_bSuccess12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000189, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_EqualEqual_ObjectObject_ReturnValue1) == 0x00018A, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_EqualEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BooleanOR_ReturnValue) == 0x00018B, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_MakeStruct_GameplayEventData) == 0x000190, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000238, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000248, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, Temp_byte_Variable) == 0x000249, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_GetActorBounds_Origin) == 0x00024C, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_GetActorBounds_BoxExtent) == 0x000258, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakVector_X) == 0x000264, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakVector_Y) == 0x000268, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakVector_Z) == 0x00026C, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000270, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000274, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_Multiply_FloatFloat_ReturnValue12) == 0x000278, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_Multiply_FloatFloat_ReturnValue12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_Multiply_FloatFloat_ReturnValue123) == 0x00027C, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_Multiply_FloatFloat_ReturnValue123' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_Multiply_FloatFloat_ReturnValue1234) == 0x000280, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_Multiply_FloatFloat_ReturnValue1234' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, Temp_bool_Variable) == 0x000284, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_Multiply_FloatFloat_ReturnValue12345) == 0x000288, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_Multiply_FloatFloat_ReturnValue12345' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_Multiply_FloatFloat_ReturnValue123456) == 0x00028C, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_Multiply_FloatFloat_ReturnValue123456' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_Less_FloatFloat_ReturnValue) == 0x000290, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, Temp_bool_Variable1) == 0x000291, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_IsDedicatedServer_ReturnValue) == 0x000292, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, Temp_byte_Variable1) == 0x000293, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_IsDedicatedServer_ReturnValue1) == 0x000294, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_Event_Damage1) == 0x000298, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_Event_Damage1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_Event_DamageTags1) == 0x0002A0, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_Event_DamageTags1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_Event_Momentum1) == 0x0002C0, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_Event_Momentum1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_Event_HitInfo1) == 0x0002D0, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_Event_HitInfo1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_Event_InstigatedBy1) == 0x000358, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_Event_InstigatedBy1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_Event_DamageCauser1) == 0x000360, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_Event_DamageCauser1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_Event_EffectContext1) == 0x000368, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_Event_EffectContext1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_bBlockingHit) == 0x000380, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_bInitialOverlap) == 0x000381, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_Time) == 0x000384, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_Distance) == 0x000388, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_Location) == 0x00038C, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_ImpactPoint) == 0x000398, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_Normal) == 0x0003A4, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_ImpactNormal) == 0x0003B0, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_PhysMat) == 0x0003C0, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_HitActor) == 0x0003C8, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_HitComponent) == 0x0003D0, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_HitBoneName) == 0x0003D8, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_HitItem) == 0x0003E0, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_FaceIndex) == 0x0003E4, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_TraceStart) == 0x0003E8, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_TraceEnd) == 0x0003F4, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_DynamicCast_AsB_Rift_Portals) == 0x000400, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_DynamicCast_AsB_Rift_Portals' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_DynamicCast_bSuccess123) == 0x000408, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_DynamicCast_bSuccess123' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00040C, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000418, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_K2_GetActorLocation_ReturnValue12) == 0x000424, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_K2_GetActorLocation_ReturnValue12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000430, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_K2_GetComponentLocation_ReturnValue1) == 0x000440, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_K2_GetComponentLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue) == 0x000450, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000458, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000464, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_Normal_ReturnValue) == 0x000470, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x00047C, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue1) == 0x000488, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_MakeTransform_ReturnValue) == 0x000490, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0004C0, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue12) == 0x000548, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_GameplayCueEvent_EventType1234) == 0x000550, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_GameplayCueEvent_EventType1234' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_GameplayCueEvent_Parameters1234) == 0x000558, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_GameplayCueEvent_Parameters1234' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_GetHitResult_ReturnValue) == 0x000610, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_GetHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_GetHitResult_ReturnValue1) == 0x000698, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_GetHitResult_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_GetFortPhysicalSurface_ReturnValue) == 0x000720, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_GetFortPhysicalSurface_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_bBlockingHit1) == 0x000721, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_bBlockingHit1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_bInitialOverlap1) == 0x000722, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_bInitialOverlap1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_Time1) == 0x000724, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_Time1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_Distance1) == 0x000728, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_Distance1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_Location1) == 0x00072C, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_Location1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_ImpactPoint1) == 0x000738, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_ImpactPoint1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_Normal1) == 0x000744, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_Normal1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_ImpactNormal1) == 0x000750, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_ImpactNormal1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_PhysMat1) == 0x000760, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_PhysMat1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_HitActor1) == 0x000768, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_HitActor1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_HitComponent1) == 0x000770, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_HitComponent1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_HitBoneName1) == 0x000778, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_HitBoneName1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_HitItem1) == 0x000780, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_HitItem1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_FaceIndex1) == 0x000784, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_FaceIndex1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_TraceStart1) == 0x000788, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_TraceStart1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_TraceEnd1) == 0x000794, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_TraceEnd1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_GetImpactPhysicalSurfaceSound_ReturnValue) == 0x0007A0, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_GetImpactPhysicalSurfaceSound_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_bBlockingHit12) == 0x0007A8, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_bBlockingHit12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_bInitialOverlap12) == 0x0007A9, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_bInitialOverlap12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_Time12) == 0x0007AC, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_Time12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_Distance12) == 0x0007B0, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_Distance12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_Location12) == 0x0007B4, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_Location12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_ImpactPoint12) == 0x0007C0, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_ImpactPoint12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_Normal12) == 0x0007CC, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_Normal12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_ImpactNormal12) == 0x0007D8, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_ImpactNormal12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_PhysMat12) == 0x0007E8, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_PhysMat12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_HitActor12) == 0x0007F0, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_HitActor12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_HitComponent12) == 0x0007F8, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_HitComponent12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_HitBoneName12) == 0x000800, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_HitBoneName12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_HitItem12) == 0x000808, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_HitItem12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_FaceIndex12) == 0x00080C, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_FaceIndex12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_TraceStart12) == 0x000810, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_TraceStart12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakHitResult_TraceEnd12) == 0x00081C, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakHitResult_TraceEnd12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_MakeRotFromX_ReturnValue) == 0x000828, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_Select_Default) == 0x000838, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_SpawnEmitterAtLocation_ReturnValue1) == 0x000840, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_SpawnEmitterAtLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_GetSocketTransform_ReturnValue) == 0x000850, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakTransform_Location) == 0x000880, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakTransform_Rotation) == 0x00088C, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BreakTransform_Scale) == 0x000898, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_CreateDelegate_OutputDelegate1) == 0x0008A8, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_SpawnEmitterAtLocation_ReturnValue12) == 0x0008B8, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_SpawnEmitterAtLocation_ReturnValue12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_TryActivateAbilitiesByTag_ReturnValue) == 0x0008C0, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_TryActivateAbilitiesByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0008C8, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_HasAuthority_ReturnValue1) == 0x0008D0, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_HasAuthority_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_Event_Damage) == 0x0008D4, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_Event_DamageTags) == 0x0008D8, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_Event_Momentum) == 0x0008F8, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_Event_HitInfo) == 0x000908, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_Event_InstigatedBy) == 0x000990, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_Event_DamageCauser) == 0x000998, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_Event_EffectContext) == 0x0009A0, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_GetDamageZone_ReturnValue) == 0x0009B8, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_GetDamageZone_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_GameplayCueEvent_EventType123) == 0x0009B9, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_GameplayCueEvent_EventType123' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_GameplayCueEvent_Parameters123) == 0x0009C0, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_GameplayCueEvent_Parameters123' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_SwitchEnum_CmpSuccess) == 0x000A78, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_GetEncounterInfo_ReturnValue) == 0x000A80, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_GetEncounterInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_IsValid_ReturnValue12) == 0x000A88, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_IsValid_ReturnValue12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_GameplayCueEvent_EventType12) == 0x000A89, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_GameplayCueEvent_EventType12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_GameplayCueEvent_Parameters12) == 0x000A90, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_GameplayCueEvent_Parameters12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_GameplayCueEvent_EventType1) == 0x000B48, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_GameplayCueEvent_EventType1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_GameplayCueEvent_Parameters1) == 0x000B50, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_GameplayCueEvent_Parameters1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_GameplayCueEvent_EventType) == 0x000C08, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_GameplayCueEvent_EventType' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_GameplayCueEvent_Parameters) == 0x000C10, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_GameplayCueEvent_Parameters' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_HasActiveAbilityWithAnyMatchingTag_ReturnValue) == 0x000CC8, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_HasActiveAbilityWithAnyMatchingTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_HasActiveAbilityWithAnyMatchingTag_ReturnValue1) == 0x000CC9, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_HasActiveAbilityWithAnyMatchingTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_Array_Contains_ReturnValue) == 0x000CCA, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, Temp_bool_Variable12) == 0x000CCB, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::Temp_bool_Variable12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_HasActiveAbilityWithAnyMatchingTag_ReturnValue12) == 0x000CCC, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_HasActiveAbilityWithAnyMatchingTag_ReturnValue12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BooleanAND_ReturnValue) == 0x000CCD, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, Temp_bool_Variable123) == 0x000CCE, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::Temp_bool_Variable123' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000CD0, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_DynamicCast_bSuccess1234) == 0x000CD8, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_DynamicCast_bSuccess1234' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_DynamicCast_AsFort_AIPawn) == 0x000CE0, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_DynamicCast_AsFort_AIPawn' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_DynamicCast_bSuccess12345) == 0x000CE8, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_DynamicCast_bSuccess12345' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_GetTeamAffiliation_ReturnValue) == 0x000CE9, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_GetTeamAffiliation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_SwitchEnum1_CmpSuccess) == 0x000CEA, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_CalculateBumpMomentum_BumpMomentum) == 0x000CEC, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_CalculateBumpMomentum_BumpMomentum' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_CalculateBumpMomentum_BumpMomentum1) == 0x000CF8, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_CalculateBumpMomentum_BumpMomentum1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, Temp_bool_Variable1234) == 0x000D04, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::Temp_bool_Variable1234' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_Select1_Default) == 0x000D05, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_Greater_ByteByte_ReturnValue) == 0x000D06, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_Not_PreBool_ReturnValue) == 0x000D07, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_BooleanAND_ReturnValue1) == 0x000D08, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_GetVelocity_ReturnValue1) == 0x000D0C, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_GetVelocity_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_CustomEvent_OverlappedComponent) == 0x000D18, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_CustomEvent_OtherActor) == 0x000D20, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_CustomEvent_OtherComp) == 0x000D28, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_CustomEvent_OtherBodyIndex) == 0x000D30, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_CustomEvent_bFromSweep) == 0x000D34, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_CustomEvent_SweepResult) == 0x000D38, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_VSize_ReturnValue1) == 0x000DC0, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_VSize_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_DynamicCast_AsFort_Pawn) == 0x000DC8, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, K2Node_DynamicCast_bSuccess123456) == 0x000DD0, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::K2Node_DynamicCast_bSuccess123456' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ExecuteUbergraph_SmasherPawn, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x000DD1, "Member 'SmasherPawn_C_ExecuteUbergraph_SmasherPawn::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");

// Function SmasherPawn.SmasherPawn_C.OnPushCapsuleBeginOverlap
// 0x00A8 (0x00A8 - 0x0000)
struct SmasherPawn_C_OnPushCapsuleBeginOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(SmasherPawn_C_OnPushCapsuleBeginOverlap) == 0x000008, "Wrong alignment on SmasherPawn_C_OnPushCapsuleBeginOverlap");
static_assert(sizeof(SmasherPawn_C_OnPushCapsuleBeginOverlap) == 0x0000A8, "Wrong size on SmasherPawn_C_OnPushCapsuleBeginOverlap");
static_assert(offsetof(SmasherPawn_C_OnPushCapsuleBeginOverlap, OverlappedComponent) == 0x000000, "Member 'SmasherPawn_C_OnPushCapsuleBeginOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_OnPushCapsuleBeginOverlap, OtherActor) == 0x000008, "Member 'SmasherPawn_C_OnPushCapsuleBeginOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_OnPushCapsuleBeginOverlap, OtherComp) == 0x000010, "Member 'SmasherPawn_C_OnPushCapsuleBeginOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_OnPushCapsuleBeginOverlap, OtherBodyIndex) == 0x000018, "Member 'SmasherPawn_C_OnPushCapsuleBeginOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_OnPushCapsuleBeginOverlap, bFromSweep) == 0x00001C, "Member 'SmasherPawn_C_OnPushCapsuleBeginOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_OnPushCapsuleBeginOverlap, SweepResult) == 0x000020, "Member 'SmasherPawn_C_OnPushCapsuleBeginOverlap::SweepResult' has a wrong offset!");

// Function SmasherPawn.SmasherPawn_C.GameplayCue.Damage.Shielded
// 0x00C0 (0x00C0 - 0x0000)
struct SmasherPawn_C_GameplayCue_Damage_Shielded final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(SmasherPawn_C_GameplayCue_Damage_Shielded) == 0x000008, "Wrong alignment on SmasherPawn_C_GameplayCue_Damage_Shielded");
static_assert(sizeof(SmasherPawn_C_GameplayCue_Damage_Shielded) == 0x0000C0, "Wrong size on SmasherPawn_C_GameplayCue_Damage_Shielded");
static_assert(offsetof(SmasherPawn_C_GameplayCue_Damage_Shielded, EventType) == 0x000000, "Member 'SmasherPawn_C_GameplayCue_Damage_Shielded::EventType' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_GameplayCue_Damage_Shielded, Parameters) == 0x000008, "Member 'SmasherPawn_C_GameplayCue_Damage_Shielded::Parameters' has a wrong offset!");

// Function SmasherPawn.SmasherPawn_C.GameplayCue.Shield.Destroyed
// 0x00C0 (0x00C0 - 0x0000)
struct SmasherPawn_C_GameplayCue_Shield_Destroyed final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(SmasherPawn_C_GameplayCue_Shield_Destroyed) == 0x000008, "Wrong alignment on SmasherPawn_C_GameplayCue_Shield_Destroyed");
static_assert(sizeof(SmasherPawn_C_GameplayCue_Shield_Destroyed) == 0x0000C0, "Wrong size on SmasherPawn_C_GameplayCue_Shield_Destroyed");
static_assert(offsetof(SmasherPawn_C_GameplayCue_Shield_Destroyed, EventType) == 0x000000, "Member 'SmasherPawn_C_GameplayCue_Shield_Destroyed::EventType' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_GameplayCue_Shield_Destroyed, Parameters) == 0x000008, "Member 'SmasherPawn_C_GameplayCue_Shield_Destroyed::Parameters' has a wrong offset!");

// Function SmasherPawn.SmasherPawn_C.GameplayCue.Shield.Reapplied
// 0x00C0 (0x00C0 - 0x0000)
struct SmasherPawn_C_GameplayCue_Shield_Reapplied final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(SmasherPawn_C_GameplayCue_Shield_Reapplied) == 0x000008, "Wrong alignment on SmasherPawn_C_GameplayCue_Shield_Reapplied");
static_assert(sizeof(SmasherPawn_C_GameplayCue_Shield_Reapplied) == 0x0000C0, "Wrong size on SmasherPawn_C_GameplayCue_Shield_Reapplied");
static_assert(offsetof(SmasherPawn_C_GameplayCue_Shield_Reapplied, EventType) == 0x000000, "Member 'SmasherPawn_C_GameplayCue_Shield_Reapplied::EventType' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_GameplayCue_Shield_Reapplied, Parameters) == 0x000008, "Member 'SmasherPawn_C_GameplayCue_Shield_Reapplied::Parameters' has a wrong offset!");

// Function SmasherPawn.SmasherPawn_C.GameplayCue.NPC.Smasher.Charge
// 0x00C0 (0x00C0 - 0x0000)
struct SmasherPawn_C_GameplayCue_NPC_Smasher_Charge final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(SmasherPawn_C_GameplayCue_NPC_Smasher_Charge) == 0x000008, "Wrong alignment on SmasherPawn_C_GameplayCue_NPC_Smasher_Charge");
static_assert(sizeof(SmasherPawn_C_GameplayCue_NPC_Smasher_Charge) == 0x0000C0, "Wrong size on SmasherPawn_C_GameplayCue_NPC_Smasher_Charge");
static_assert(offsetof(SmasherPawn_C_GameplayCue_NPC_Smasher_Charge, EventType) == 0x000000, "Member 'SmasherPawn_C_GameplayCue_NPC_Smasher_Charge::EventType' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_GameplayCue_NPC_Smasher_Charge, Parameters) == 0x000008, "Member 'SmasherPawn_C_GameplayCue_NPC_Smasher_Charge::Parameters' has a wrong offset!");

// Function SmasherPawn.SmasherPawn_C.GameplayCue.Impact.Physical.Creature
// 0x00C0 (0x00C0 - 0x0000)
struct SmasherPawn_C_GameplayCue_Impact_Physical_Creature final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(SmasherPawn_C_GameplayCue_Impact_Physical_Creature) == 0x000008, "Wrong alignment on SmasherPawn_C_GameplayCue_Impact_Physical_Creature");
static_assert(sizeof(SmasherPawn_C_GameplayCue_Impact_Physical_Creature) == 0x0000C0, "Wrong size on SmasherPawn_C_GameplayCue_Impact_Physical_Creature");
static_assert(offsetof(SmasherPawn_C_GameplayCue_Impact_Physical_Creature, EventType) == 0x000000, "Member 'SmasherPawn_C_GameplayCue_Impact_Physical_Creature::EventType' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_GameplayCue_Impact_Physical_Creature, Parameters) == 0x000008, "Member 'SmasherPawn_C_GameplayCue_Impact_Physical_Creature::Parameters' has a wrong offset!");

// Function SmasherPawn.SmasherPawn_C.OnCrushBoxBeginOverlap
// 0x00A8 (0x00A8 - 0x0000)
struct SmasherPawn_C_OnCrushBoxBeginOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(SmasherPawn_C_OnCrushBoxBeginOverlap) == 0x000008, "Wrong alignment on SmasherPawn_C_OnCrushBoxBeginOverlap");
static_assert(sizeof(SmasherPawn_C_OnCrushBoxBeginOverlap) == 0x0000A8, "Wrong size on SmasherPawn_C_OnCrushBoxBeginOverlap");
static_assert(offsetof(SmasherPawn_C_OnCrushBoxBeginOverlap, OverlappedComponent) == 0x000000, "Member 'SmasherPawn_C_OnCrushBoxBeginOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_OnCrushBoxBeginOverlap, OtherActor) == 0x000008, "Member 'SmasherPawn_C_OnCrushBoxBeginOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_OnCrushBoxBeginOverlap, OtherComp) == 0x000010, "Member 'SmasherPawn_C_OnCrushBoxBeginOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_OnCrushBoxBeginOverlap, OtherBodyIndex) == 0x000018, "Member 'SmasherPawn_C_OnCrushBoxBeginOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_OnCrushBoxBeginOverlap, bFromSweep) == 0x00001C, "Member 'SmasherPawn_C_OnCrushBoxBeginOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_OnCrushBoxBeginOverlap, SweepResult) == 0x000020, "Member 'SmasherPawn_C_OnCrushBoxBeginOverlap::SweepResult' has a wrong offset!");

// Function SmasherPawn.SmasherPawn_C.CalculateBumpMomentum
// 0x0108 (0x0108 - 0x0000)
struct SmasherPawn_C_CalculateBumpMomentum final
{
public:
	float                                         Velocity;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YawAngle;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              BumpedPawn;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BumpMomentum;                                      // 0x0010(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SmasherToPawnDirectionVector;                      // 0x001C(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0044(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0060(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x006C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0078(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0084(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x009C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue1;                      // 0x00A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x00B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X12;                          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y12;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z12;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00D4(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00EC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00F8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SmasherPawn_C_CalculateBumpMomentum) == 0x000008, "Wrong alignment on SmasherPawn_C_CalculateBumpMomentum");
static_assert(sizeof(SmasherPawn_C_CalculateBumpMomentum) == 0x000108, "Wrong size on SmasherPawn_C_CalculateBumpMomentum");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, Velocity) == 0x000000, "Member 'SmasherPawn_C_CalculateBumpMomentum::Velocity' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, YawAngle) == 0x000004, "Member 'SmasherPawn_C_CalculateBumpMomentum::YawAngle' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, BumpedPawn) == 0x000008, "Member 'SmasherPawn_C_CalculateBumpMomentum::BumpedPawn' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, BumpMomentum) == 0x000010, "Member 'SmasherPawn_C_CalculateBumpMomentum::BumpMomentum' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, SmasherToPawnDirectionVector) == 0x00001C, "Member 'SmasherPawn_C_CalculateBumpMomentum::SmasherToPawnDirectionVector' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000034, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000044, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000050, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_BreakVector_X) == 0x000054, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_BreakVector_Y) == 0x000058, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_BreakVector_Z) == 0x00005C, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000060, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_MakeVector_ReturnValue) == 0x00006C, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000078, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_Normal_ReturnValue) == 0x000084, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_BreakVector_X1) == 0x000090, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_BreakVector_Y1) == 0x000094, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_BreakVector_Z1) == 0x000098, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_MakeVector_ReturnValue1) == 0x00009C, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_Normal_ReturnValue1) == 0x0000A8, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_Normal_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_Cross_VectorVector_ReturnValue) == 0x0000B4, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_BreakVector_X12) == 0x0000C0, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_BreakVector_X12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_BreakVector_Y12) == 0x0000C4, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_BreakVector_Y12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_BreakVector_Z12) == 0x0000C8, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_BreakVector_Z12' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000CC, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_SelectFloat_ReturnValue) == 0x0000D0, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_MakeRotator_ReturnValue) == 0x0000D4, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000E0, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000EC, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_CalculateBumpMomentum, CallFunc_SelectVector_ReturnValue) == 0x0000F8, "Member 'SmasherPawn_C_CalculateBumpMomentum::CallFunc_SelectVector_ReturnValue' has a wrong offset!");

// Function SmasherPawn.SmasherPawn_C.OnDamagePlayEffects
// 0x00E8 (0x00E8 - 0x0000)
struct SmasherPawn_C_OnDamagePlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitInfo;                                           // 0x0038(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              InstigatedBy;                                      // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00D0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(SmasherPawn_C_OnDamagePlayEffects) == 0x000008, "Wrong alignment on SmasherPawn_C_OnDamagePlayEffects");
static_assert(sizeof(SmasherPawn_C_OnDamagePlayEffects) == 0x0000E8, "Wrong size on SmasherPawn_C_OnDamagePlayEffects");
static_assert(offsetof(SmasherPawn_C_OnDamagePlayEffects, Damage) == 0x000000, "Member 'SmasherPawn_C_OnDamagePlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_OnDamagePlayEffects, DamageTags) == 0x000008, "Member 'SmasherPawn_C_OnDamagePlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_OnDamagePlayEffects, Momentum) == 0x000028, "Member 'SmasherPawn_C_OnDamagePlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_OnDamagePlayEffects, HitInfo) == 0x000038, "Member 'SmasherPawn_C_OnDamagePlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_OnDamagePlayEffects, InstigatedBy) == 0x0000C0, "Member 'SmasherPawn_C_OnDamagePlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_OnDamagePlayEffects, DamageCauser) == 0x0000C8, "Member 'SmasherPawn_C_OnDamagePlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_OnDamagePlayEffects, EffectContext) == 0x0000D0, "Member 'SmasherPawn_C_OnDamagePlayEffects::EffectContext' has a wrong offset!");

// Function SmasherPawn.SmasherPawn_C.OnDeathPlayEffects
// 0x00E8 (0x00E8 - 0x0000)
struct SmasherPawn_C_OnDeathPlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitInfo;                                           // 0x0038(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              InstigatedBy;                                      // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00D0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(SmasherPawn_C_OnDeathPlayEffects) == 0x000008, "Wrong alignment on SmasherPawn_C_OnDeathPlayEffects");
static_assert(sizeof(SmasherPawn_C_OnDeathPlayEffects) == 0x0000E8, "Wrong size on SmasherPawn_C_OnDeathPlayEffects");
static_assert(offsetof(SmasherPawn_C_OnDeathPlayEffects, Damage) == 0x000000, "Member 'SmasherPawn_C_OnDeathPlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_OnDeathPlayEffects, DamageTags) == 0x000008, "Member 'SmasherPawn_C_OnDeathPlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_OnDeathPlayEffects, Momentum) == 0x000028, "Member 'SmasherPawn_C_OnDeathPlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_OnDeathPlayEffects, HitInfo) == 0x000038, "Member 'SmasherPawn_C_OnDeathPlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_OnDeathPlayEffects, InstigatedBy) == 0x0000C0, "Member 'SmasherPawn_C_OnDeathPlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_OnDeathPlayEffects, DamageCauser) == 0x0000C8, "Member 'SmasherPawn_C_OnDeathPlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_OnDeathPlayEffects, EffectContext) == 0x0000D0, "Member 'SmasherPawn_C_OnDeathPlayEffects::EffectContext' has a wrong offset!");

// Function SmasherPawn.SmasherPawn_C.PaceHitSoundsAndVocalizations
// 0x0040 (0x0040 - 0x0000)
struct SmasherPawn_C_PaceHitSoundsAndVocalizations final
{
public:
	EFortDamageZone                               Damage_Zone;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor)
	bool                                          CallFunc_K2_IsTimerActive_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue1;                 // 0x0018(0x0008)(NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActive_ReturnValue1;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SmasherPawn_C_PaceHitSoundsAndVocalizations) == 0x000008, "Wrong alignment on SmasherPawn_C_PaceHitSoundsAndVocalizations");
static_assert(sizeof(SmasherPawn_C_PaceHitSoundsAndVocalizations) == 0x000040, "Wrong size on SmasherPawn_C_PaceHitSoundsAndVocalizations");
static_assert(offsetof(SmasherPawn_C_PaceHitSoundsAndVocalizations, Damage_Zone) == 0x000000, "Member 'SmasherPawn_C_PaceHitSoundsAndVocalizations::Damage_Zone' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_PaceHitSoundsAndVocalizations, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'SmasherPawn_C_PaceHitSoundsAndVocalizations::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_PaceHitSoundsAndVocalizations, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'SmasherPawn_C_PaceHitSoundsAndVocalizations::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_PaceHitSoundsAndVocalizations, CallFunc_K2_IsTimerActive_ReturnValue) == 0x000010, "Member 'SmasherPawn_C_PaceHitSoundsAndVocalizations::CallFunc_K2_IsTimerActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_PaceHitSoundsAndVocalizations, CallFunc_K2_SetTimer_ReturnValue1) == 0x000018, "Member 'SmasherPawn_C_PaceHitSoundsAndVocalizations::CallFunc_K2_SetTimer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_PaceHitSoundsAndVocalizations, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'SmasherPawn_C_PaceHitSoundsAndVocalizations::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_PaceHitSoundsAndVocalizations, CallFunc_K2_IsTimerActive_ReturnValue1) == 0x00002C, "Member 'SmasherPawn_C_PaceHitSoundsAndVocalizations::CallFunc_K2_IsTimerActive_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_PaceHitSoundsAndVocalizations, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000030, "Member 'SmasherPawn_C_PaceHitSoundsAndVocalizations::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");

// Function SmasherPawn.SmasherPawn_C.HandleHitEffects
// 0x0128 (0x0128 - 0x0000)
struct SmasherPawn_C_HandleHitEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitInfo;                                           // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x009C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00F8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0104(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue1;                      // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SmasherPawn_C_HandleHitEffects) == 0x000008, "Wrong alignment on SmasherPawn_C_HandleHitEffects");
static_assert(sizeof(SmasherPawn_C_HandleHitEffects) == 0x000128, "Wrong size on SmasherPawn_C_HandleHitEffects");
static_assert(offsetof(SmasherPawn_C_HandleHitEffects, Damage) == 0x000000, "Member 'SmasherPawn_C_HandleHitEffects::Damage' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_HandleHitEffects, HitInfo) == 0x000008, "Member 'SmasherPawn_C_HandleHitEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_HandleHitEffects, CallFunc_BreakHitResult_bBlockingHit) == 0x000090, "Member 'SmasherPawn_C_HandleHitEffects::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_HandleHitEffects, CallFunc_BreakHitResult_bInitialOverlap) == 0x000091, "Member 'SmasherPawn_C_HandleHitEffects::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_HandleHitEffects, CallFunc_BreakHitResult_Time) == 0x000094, "Member 'SmasherPawn_C_HandleHitEffects::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_HandleHitEffects, CallFunc_BreakHitResult_Distance) == 0x000098, "Member 'SmasherPawn_C_HandleHitEffects::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_HandleHitEffects, CallFunc_BreakHitResult_Location) == 0x00009C, "Member 'SmasherPawn_C_HandleHitEffects::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_HandleHitEffects, CallFunc_BreakHitResult_ImpactPoint) == 0x0000A8, "Member 'SmasherPawn_C_HandleHitEffects::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_HandleHitEffects, CallFunc_BreakHitResult_Normal) == 0x0000B4, "Member 'SmasherPawn_C_HandleHitEffects::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_HandleHitEffects, CallFunc_BreakHitResult_ImpactNormal) == 0x0000C0, "Member 'SmasherPawn_C_HandleHitEffects::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_HandleHitEffects, CallFunc_BreakHitResult_PhysMat) == 0x0000D0, "Member 'SmasherPawn_C_HandleHitEffects::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_HandleHitEffects, CallFunc_BreakHitResult_HitActor) == 0x0000D8, "Member 'SmasherPawn_C_HandleHitEffects::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_HandleHitEffects, CallFunc_BreakHitResult_HitComponent) == 0x0000E0, "Member 'SmasherPawn_C_HandleHitEffects::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_HandleHitEffects, CallFunc_BreakHitResult_HitBoneName) == 0x0000E8, "Member 'SmasherPawn_C_HandleHitEffects::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_HandleHitEffects, CallFunc_BreakHitResult_HitItem) == 0x0000F0, "Member 'SmasherPawn_C_HandleHitEffects::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_HandleHitEffects, CallFunc_BreakHitResult_FaceIndex) == 0x0000F4, "Member 'SmasherPawn_C_HandleHitEffects::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_HandleHitEffects, CallFunc_BreakHitResult_TraceStart) == 0x0000F8, "Member 'SmasherPawn_C_HandleHitEffects::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_HandleHitEffects, CallFunc_BreakHitResult_TraceEnd) == 0x000104, "Member 'SmasherPawn_C_HandleHitEffects::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_HandleHitEffects, CallFunc_FClamp_ReturnValue) == 0x000110, "Member 'SmasherPawn_C_HandleHitEffects::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_HandleHitEffects, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000114, "Member 'SmasherPawn_C_HandleHitEffects::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_HandleHitEffects, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000118, "Member 'SmasherPawn_C_HandleHitEffects::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_HandleHitEffects, CallFunc_FClamp_ReturnValue1) == 0x00011C, "Member 'SmasherPawn_C_HandleHitEffects::CallFunc_FClamp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_HandleHitEffects, CallFunc_Lerp_ReturnValue) == 0x000120, "Member 'SmasherPawn_C_HandleHitEffects::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function SmasherPawn.SmasherPawn_C.ResetSmasherRotationRateToDefault
// 0x0020 (0x0020 - 0x0000)
struct SmasherPawn_C_ResetSmasherRotationRateToDefault final
{
public:
	class FString                                 CallFunc_BuildString_Object_ReturnValue;           // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SmasherPawn_C_ResetSmasherRotationRateToDefault) == 0x000008, "Wrong alignment on SmasherPawn_C_ResetSmasherRotationRateToDefault");
static_assert(sizeof(SmasherPawn_C_ResetSmasherRotationRateToDefault) == 0x000020, "Wrong size on SmasherPawn_C_ResetSmasherRotationRateToDefault");
static_assert(offsetof(SmasherPawn_C_ResetSmasherRotationRateToDefault, CallFunc_BuildString_Object_ReturnValue) == 0x000000, "Member 'SmasherPawn_C_ResetSmasherRotationRateToDefault::CallFunc_BuildString_Object_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ResetSmasherRotationRateToDefault, CallFunc_BreakRotator_Roll) == 0x000010, "Member 'SmasherPawn_C_ResetSmasherRotationRateToDefault::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ResetSmasherRotationRateToDefault, CallFunc_BreakRotator_Pitch) == 0x000014, "Member 'SmasherPawn_C_ResetSmasherRotationRateToDefault::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ResetSmasherRotationRateToDefault, CallFunc_BreakRotator_Yaw) == 0x000018, "Member 'SmasherPawn_C_ResetSmasherRotationRateToDefault::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_ResetSmasherRotationRateToDefault, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00001C, "Member 'SmasherPawn_C_ResetSmasherRotationRateToDefault::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function SmasherPawn.SmasherPawn_C.SetSmasherRotationRate
// 0x001C (0x001C - 0x0000)
struct SmasherPawn_C_SetSmasherRotationRate final
{
public:
	float                                         YawRate;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0010(0x000C)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(SmasherPawn_C_SetSmasherRotationRate) == 0x000004, "Wrong alignment on SmasherPawn_C_SetSmasherRotationRate");
static_assert(sizeof(SmasherPawn_C_SetSmasherRotationRate) == 0x00001C, "Wrong size on SmasherPawn_C_SetSmasherRotationRate");
static_assert(offsetof(SmasherPawn_C_SetSmasherRotationRate, YawRate) == 0x000000, "Member 'SmasherPawn_C_SetSmasherRotationRate::YawRate' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_SetSmasherRotationRate, CallFunc_BreakRotator_Roll) == 0x000004, "Member 'SmasherPawn_C_SetSmasherRotationRate::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_SetSmasherRotationRate, CallFunc_BreakRotator_Pitch) == 0x000008, "Member 'SmasherPawn_C_SetSmasherRotationRate::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_SetSmasherRotationRate, CallFunc_BreakRotator_Yaw) == 0x00000C, "Member 'SmasherPawn_C_SetSmasherRotationRate::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_SetSmasherRotationRate, CallFunc_MakeRotator_ReturnValue) == 0x000010, "Member 'SmasherPawn_C_SetSmasherRotationRate::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function SmasherPawn.SmasherPawn_C.GetCollisionPredictionComponent
// 0x0008 (0x0008 - 0x0000)
struct SmasherPawn_C_GetCollisionPredictionComponent final
{
public:
	class UShapeComponent*                        Collision_Prediction_Shape_Component;              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SmasherPawn_C_GetCollisionPredictionComponent) == 0x000008, "Wrong alignment on SmasherPawn_C_GetCollisionPredictionComponent");
static_assert(sizeof(SmasherPawn_C_GetCollisionPredictionComponent) == 0x000008, "Wrong size on SmasherPawn_C_GetCollisionPredictionComponent");
static_assert(offsetof(SmasherPawn_C_GetCollisionPredictionComponent, Collision_Prediction_Shape_Component) == 0x000000, "Member 'SmasherPawn_C_GetCollisionPredictionComponent::Collision_Prediction_Shape_Component' has a wrong offset!");

// Function SmasherPawn.SmasherPawn_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct SmasherPawn_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SmasherPawn_C_UserConstructionScript) == 0x000004, "Wrong alignment on SmasherPawn_C_UserConstructionScript");
static_assert(sizeof(SmasherPawn_C_UserConstructionScript) == 0x000010, "Wrong size on SmasherPawn_C_UserConstructionScript");
static_assert(offsetof(SmasherPawn_C_UserConstructionScript, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'SmasherPawn_C_UserConstructionScript::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_UserConstructionScript, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000004, "Member 'SmasherPawn_C_UserConstructionScript::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000008, "Member 'SmasherPawn_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(SmasherPawn_C_UserConstructionScript, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'SmasherPawn_C_UserConstructionScript::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ColorLibrary

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "ColorStylesheet_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ColorLibrary.ColorLibrary_C.Get Buff Color
// 0x01A8 (0x01A8 - 0x0000)
struct ColorLibrary_C_Get_Buff_Color final
{
public:
	struct FColorStylesheet                       Stylesheet;                                        // 0x0000(0x0190)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0190(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0198(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ColorLibrary_C_Get_Buff_Color) == 0x000008, "Wrong alignment on ColorLibrary_C_Get_Buff_Color");
static_assert(sizeof(ColorLibrary_C_Get_Buff_Color) == 0x0001A8, "Wrong size on ColorLibrary_C_Get_Buff_Color");
static_assert(offsetof(ColorLibrary_C_Get_Buff_Color, Stylesheet) == 0x000000, "Member 'ColorLibrary_C_Get_Buff_Color::Stylesheet' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_Buff_Color, __WorldContext) == 0x000190, "Member 'ColorLibrary_C_Get_Buff_Color::__WorldContext' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_Buff_Color, Color) == 0x000198, "Member 'ColorLibrary_C_Get_Buff_Color::Color' has a wrong offset!");

// Function ColorLibrary.ColorLibrary_C.Get Debuff Color
// 0x01A8 (0x01A8 - 0x0000)
struct ColorLibrary_C_Get_Debuff_Color final
{
public:
	struct FColorStylesheet                       Stylesheet;                                        // 0x0000(0x0190)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0190(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0198(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ColorLibrary_C_Get_Debuff_Color) == 0x000008, "Wrong alignment on ColorLibrary_C_Get_Debuff_Color");
static_assert(sizeof(ColorLibrary_C_Get_Debuff_Color) == 0x0001A8, "Wrong size on ColorLibrary_C_Get_Debuff_Color");
static_assert(offsetof(ColorLibrary_C_Get_Debuff_Color, Stylesheet) == 0x000000, "Member 'ColorLibrary_C_Get_Debuff_Color::Stylesheet' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_Debuff_Color, __WorldContext) == 0x000190, "Member 'ColorLibrary_C_Get_Debuff_Color::__WorldContext' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_Debuff_Color, Color) == 0x000198, "Member 'ColorLibrary_C_Get_Debuff_Color::Color' has a wrong offset!");

// Function ColorLibrary.ColorLibrary_C.Get Unique Color
// 0x01A8 (0x01A8 - 0x0000)
struct ColorLibrary_C_Get_Unique_Color final
{
public:
	struct FColorStylesheet                       Stylesheet;                                        // 0x0000(0x0190)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0190(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0198(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ColorLibrary_C_Get_Unique_Color) == 0x000008, "Wrong alignment on ColorLibrary_C_Get_Unique_Color");
static_assert(sizeof(ColorLibrary_C_Get_Unique_Color) == 0x0001A8, "Wrong size on ColorLibrary_C_Get_Unique_Color");
static_assert(offsetof(ColorLibrary_C_Get_Unique_Color, Stylesheet) == 0x000000, "Member 'ColorLibrary_C_Get_Unique_Color::Stylesheet' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_Unique_Color, __WorldContext) == 0x000190, "Member 'ColorLibrary_C_Get_Unique_Color::__WorldContext' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_Unique_Color, Color) == 0x000198, "Member 'ColorLibrary_C_Get_Unique_Color::Color' has a wrong offset!");

// Function ColorLibrary.ColorLibrary_C.Get Fire Elemental Color
// 0x01A8 (0x01A8 - 0x0000)
struct ColorLibrary_C_Get_Fire_Elemental_Color final
{
public:
	struct FColorStylesheet                       Stylesheet;                                        // 0x0000(0x0190)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0190(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0198(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ColorLibrary_C_Get_Fire_Elemental_Color) == 0x000008, "Wrong alignment on ColorLibrary_C_Get_Fire_Elemental_Color");
static_assert(sizeof(ColorLibrary_C_Get_Fire_Elemental_Color) == 0x0001A8, "Wrong size on ColorLibrary_C_Get_Fire_Elemental_Color");
static_assert(offsetof(ColorLibrary_C_Get_Fire_Elemental_Color, Stylesheet) == 0x000000, "Member 'ColorLibrary_C_Get_Fire_Elemental_Color::Stylesheet' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_Fire_Elemental_Color, __WorldContext) == 0x000190, "Member 'ColorLibrary_C_Get_Fire_Elemental_Color::__WorldContext' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_Fire_Elemental_Color, Color) == 0x000198, "Member 'ColorLibrary_C_Get_Fire_Elemental_Color::Color' has a wrong offset!");

// Function ColorLibrary.ColorLibrary_C.Get Ice Elemental Color
// 0x01A8 (0x01A8 - 0x0000)
struct ColorLibrary_C_Get_Ice_Elemental_Color final
{
public:
	struct FColorStylesheet                       Stylesheet;                                        // 0x0000(0x0190)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0190(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0198(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ColorLibrary_C_Get_Ice_Elemental_Color) == 0x000008, "Wrong alignment on ColorLibrary_C_Get_Ice_Elemental_Color");
static_assert(sizeof(ColorLibrary_C_Get_Ice_Elemental_Color) == 0x0001A8, "Wrong size on ColorLibrary_C_Get_Ice_Elemental_Color");
static_assert(offsetof(ColorLibrary_C_Get_Ice_Elemental_Color, Stylesheet) == 0x000000, "Member 'ColorLibrary_C_Get_Ice_Elemental_Color::Stylesheet' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_Ice_Elemental_Color, __WorldContext) == 0x000190, "Member 'ColorLibrary_C_Get_Ice_Elemental_Color::__WorldContext' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_Ice_Elemental_Color, Color) == 0x000198, "Member 'ColorLibrary_C_Get_Ice_Elemental_Color::Color' has a wrong offset!");

// Function ColorLibrary.ColorLibrary_C.Get Bolt Elemental Color
// 0x01A8 (0x01A8 - 0x0000)
struct ColorLibrary_C_Get_Bolt_Elemental_Color final
{
public:
	struct FColorStylesheet                       Stylesheet;                                        // 0x0000(0x0190)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0190(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0198(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ColorLibrary_C_Get_Bolt_Elemental_Color) == 0x000008, "Wrong alignment on ColorLibrary_C_Get_Bolt_Elemental_Color");
static_assert(sizeof(ColorLibrary_C_Get_Bolt_Elemental_Color) == 0x0001A8, "Wrong size on ColorLibrary_C_Get_Bolt_Elemental_Color");
static_assert(offsetof(ColorLibrary_C_Get_Bolt_Elemental_Color, Stylesheet) == 0x000000, "Member 'ColorLibrary_C_Get_Bolt_Elemental_Color::Stylesheet' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_Bolt_Elemental_Color, __WorldContext) == 0x000190, "Member 'ColorLibrary_C_Get_Bolt_Elemental_Color::__WorldContext' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_Bolt_Elemental_Color, Color) == 0x000198, "Member 'ColorLibrary_C_Get_Bolt_Elemental_Color::Color' has a wrong offset!");

// Function ColorLibrary.ColorLibrary_C.Get Base & Buff Colors
// 0x0218 (0x0218 - 0x0000)
struct ColorLibrary_C_Get_Base___Buff_Colors final
{
public:
	EFortStatValueDisplayType                     Display_Type;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuffState                                Buff_State;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColorStylesheet                       Stylesheet;                                        // 0x0004(0x0190)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0198(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Base;                                              // 0x01A0(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Buff;                                              // 0x01B0(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x01C0(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortStatValueDisplayType                     Temp_byte_Variable;                                // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable1;                             // 0x01D4(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable12;                            // 0x01E4(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuffState                                Temp_byte_Variable1;                               // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x01F8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select1_Default;                            // 0x0208(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ColorLibrary_C_Get_Base___Buff_Colors) == 0x000008, "Wrong alignment on ColorLibrary_C_Get_Base___Buff_Colors");
static_assert(sizeof(ColorLibrary_C_Get_Base___Buff_Colors) == 0x000218, "Wrong size on ColorLibrary_C_Get_Base___Buff_Colors");
static_assert(offsetof(ColorLibrary_C_Get_Base___Buff_Colors, Display_Type) == 0x000000, "Member 'ColorLibrary_C_Get_Base___Buff_Colors::Display_Type' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_Base___Buff_Colors, Buff_State) == 0x000001, "Member 'ColorLibrary_C_Get_Base___Buff_Colors::Buff_State' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_Base___Buff_Colors, Stylesheet) == 0x000004, "Member 'ColorLibrary_C_Get_Base___Buff_Colors::Stylesheet' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_Base___Buff_Colors, __WorldContext) == 0x000198, "Member 'ColorLibrary_C_Get_Base___Buff_Colors::__WorldContext' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_Base___Buff_Colors, Base) == 0x0001A0, "Member 'ColorLibrary_C_Get_Base___Buff_Colors::Base' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_Base___Buff_Colors, Buff) == 0x0001B0, "Member 'ColorLibrary_C_Get_Base___Buff_Colors::Buff' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_Base___Buff_Colors, Temp_struct_Variable) == 0x0001C0, "Member 'ColorLibrary_C_Get_Base___Buff_Colors::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_Base___Buff_Colors, Temp_byte_Variable) == 0x0001D0, "Member 'ColorLibrary_C_Get_Base___Buff_Colors::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_Base___Buff_Colors, Temp_struct_Variable1) == 0x0001D4, "Member 'ColorLibrary_C_Get_Base___Buff_Colors::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_Base___Buff_Colors, Temp_struct_Variable12) == 0x0001E4, "Member 'ColorLibrary_C_Get_Base___Buff_Colors::Temp_struct_Variable12' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_Base___Buff_Colors, Temp_byte_Variable1) == 0x0001F4, "Member 'ColorLibrary_C_Get_Base___Buff_Colors::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_Base___Buff_Colors, K2Node_Select_Default) == 0x0001F8, "Member 'ColorLibrary_C_Get_Base___Buff_Colors::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_Base___Buff_Colors, K2Node_Select1_Default) == 0x000208, "Member 'ColorLibrary_C_Get_Base___Buff_Colors::K2Node_Select1_Default' has a wrong offset!");

// Function ColorLibrary.ColorLibrary_C.Get HarvestWeakPoint Color
// 0x01A8 (0x01A8 - 0x0000)
struct ColorLibrary_C_Get_HarvestWeakPoint_Color final
{
public:
	struct FColorStylesheet                       Stylesheet;                                        // 0x0000(0x0190)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0190(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           StyleSheetOut;                                     // 0x0198(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ColorLibrary_C_Get_HarvestWeakPoint_Color) == 0x000008, "Wrong alignment on ColorLibrary_C_Get_HarvestWeakPoint_Color");
static_assert(sizeof(ColorLibrary_C_Get_HarvestWeakPoint_Color) == 0x0001A8, "Wrong size on ColorLibrary_C_Get_HarvestWeakPoint_Color");
static_assert(offsetof(ColorLibrary_C_Get_HarvestWeakPoint_Color, Stylesheet) == 0x000000, "Member 'ColorLibrary_C_Get_HarvestWeakPoint_Color::Stylesheet' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_HarvestWeakPoint_Color, __WorldContext) == 0x000190, "Member 'ColorLibrary_C_Get_HarvestWeakPoint_Color::__WorldContext' has a wrong offset!");
static_assert(offsetof(ColorLibrary_C_Get_HarvestWeakPoint_Color, StyleSheetOut) == 0x000198, "Member 'ColorLibrary_C_Get_HarvestWeakPoint_Color::StyleSheetOut' has a wrong offset!");

}


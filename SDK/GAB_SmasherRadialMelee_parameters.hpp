#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAB_SmasherRadialMelee

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function GAB_SmasherRadialMelee.GAB_SmasherRadialMelee_C.ExecuteUbergraph_GAB_SmasherRadialMelee
// 0x01B0 (0x01B0 - 0x0000)
struct GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData12;                   // 0x0008(0x0020)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag12;               // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData1;                    // 0x0040(0x0020)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag1;                // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x0078(0x0020)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag;                 // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate12;            // 0x00A0(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x00B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable1;                             // 0x00B8(0x0020)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyGameplayEffectContainer_ReturnValue; // 0x00D8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	EPathFollowingResult                          K2Node_CustomEvent_Result;                         // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_CustomEvent_AIController;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EPathFollowingResult Result, class AAIController* AIController)> K2Node_CreateDelegate_OutputDelegate123;           // 0x00F8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1234;          // 0x0108(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate12345;         // 0x0118(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate123456;        // 0x0128(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1234567;       // 0x0138(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilityTask_PlayMontageWaitTarget* CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue; // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0158(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAIAbilityTarget_ReturnValue;           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAbilityTask_MoveAI*                CallFunc_CreateMoveAITask_ReturnValue;             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue12;                    // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17A[0x6];                                      // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              CallFunc_GetActivatingPawn_ReturnValue;            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              CallFunc_GetActivatingPawn_ReturnValue1;           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASmasherPawn_C*                         K2Node_DynamicCast_AsSmasher_Pawn;                 // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASmasherPawn_C*                         K2Node_DynamicCast_AsSmasher_Pawn1;                // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee) == 0x000008, "Wrong alignment on GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee");
static_assert(sizeof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee) == 0x0001B0, "Wrong size on GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, EntryPoint) == 0x000000, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::EntryPoint' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, K2Node_CustomEvent_TargetData12) == 0x000008, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::K2Node_CustomEvent_TargetData12' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, K2Node_CustomEvent_ApplicationTag12) == 0x000028, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::K2Node_CustomEvent_ApplicationTag12' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, K2Node_CustomEvent_TargetData1) == 0x000040, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::K2Node_CustomEvent_TargetData1' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, K2Node_CustomEvent_ApplicationTag1) == 0x000060, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::K2Node_CustomEvent_ApplicationTag1' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, K2Node_CreateDelegate_OutputDelegate1) == 0x000068, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, K2Node_CustomEvent_TargetData) == 0x000078, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, K2Node_CustomEvent_ApplicationTag) == 0x000098, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::K2Node_CustomEvent_ApplicationTag' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, K2Node_CreateDelegate_OutputDelegate12) == 0x0000A0, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, Temp_struct_Variable) == 0x0000B0, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, Temp_struct_Variable1) == 0x0000B8, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, CallFunc_ApplyGameplayEffectContainer_ReturnValue) == 0x0000D8, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::CallFunc_ApplyGameplayEffectContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, K2Node_CustomEvent_Result) == 0x0000E8, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, K2Node_CustomEvent_AIController) == 0x0000F0, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::K2Node_CustomEvent_AIController' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, K2Node_CreateDelegate_OutputDelegate123) == 0x0000F8, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::K2Node_CreateDelegate_OutputDelegate123' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, K2Node_CreateDelegate_OutputDelegate1234) == 0x000108, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::K2Node_CreateDelegate_OutputDelegate1234' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, K2Node_CreateDelegate_OutputDelegate12345) == 0x000118, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::K2Node_CreateDelegate_OutputDelegate12345' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, K2Node_CreateDelegate_OutputDelegate123456) == 0x000128, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::K2Node_CreateDelegate_OutputDelegate123456' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, K2Node_CreateDelegate_OutputDelegate1234567) == 0x000138, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::K2Node_CreateDelegate_OutputDelegate1234567' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, CallFunc_K2_CommitAbility_ReturnValue) == 0x000148, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue) == 0x000150, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000158, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, CallFunc_IsValid_ReturnValue1) == 0x000160, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, CallFunc_GetAIAbilityTarget_ReturnValue) == 0x000168, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::CallFunc_GetAIAbilityTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, CallFunc_CreateMoveAITask_ReturnValue) == 0x000170, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::CallFunc_CreateMoveAITask_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000178, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, CallFunc_IsValid_ReturnValue12) == 0x000179, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::CallFunc_IsValid_ReturnValue12' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, CallFunc_GetActivatingPawn_ReturnValue) == 0x000180, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::CallFunc_GetActivatingPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, CallFunc_GetActivatingPawn_ReturnValue1) == 0x000188, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::CallFunc_GetActivatingPawn_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, K2Node_DynamicCast_AsSmasher_Pawn) == 0x000190, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::K2Node_DynamicCast_AsSmasher_Pawn' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, K2Node_DynamicCast_bSuccess) == 0x000198, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, K2Node_DynamicCast_AsSmasher_Pawn1) == 0x0001A0, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::K2Node_DynamicCast_AsSmasher_Pawn1' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, K2Node_DynamicCast_bSuccess1) == 0x0001A8, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee, K2Node_Event_bWasCancelled) == 0x0001A9, "Member 'GAB_SmasherRadialMelee_C_ExecuteUbergraph_GAB_SmasherRadialMelee::K2Node_Event_bWasCancelled' has a wrong offset!");

// Function GAB_SmasherRadialMelee.GAB_SmasherRadialMelee_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GAB_SmasherRadialMelee_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GAB_SmasherRadialMelee_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GAB_SmasherRadialMelee_C_K2_OnEndAbility");
static_assert(sizeof(GAB_SmasherRadialMelee_C_K2_OnEndAbility) == 0x000001, "Wrong size on GAB_SmasherRadialMelee_C_K2_OnEndAbility");
static_assert(offsetof(GAB_SmasherRadialMelee_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GAB_SmasherRadialMelee_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GAB_SmasherRadialMelee.GAB_SmasherRadialMelee_C.OnMoveFinished_1C768C2A4BDB2902BA3FDD92DD5F3C46
// 0x0010 (0x0010 - 0x0000)
struct GAB_SmasherRadialMelee_C_OnMoveFinished_1C768C2A4BDB2902BA3FDD92DD5F3C46 final
{
public:
	EPathFollowingResult                          Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          AIController;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_SmasherRadialMelee_C_OnMoveFinished_1C768C2A4BDB2902BA3FDD92DD5F3C46) == 0x000008, "Wrong alignment on GAB_SmasherRadialMelee_C_OnMoveFinished_1C768C2A4BDB2902BA3FDD92DD5F3C46");
static_assert(sizeof(GAB_SmasherRadialMelee_C_OnMoveFinished_1C768C2A4BDB2902BA3FDD92DD5F3C46) == 0x000010, "Wrong size on GAB_SmasherRadialMelee_C_OnMoveFinished_1C768C2A4BDB2902BA3FDD92DD5F3C46");
static_assert(offsetof(GAB_SmasherRadialMelee_C_OnMoveFinished_1C768C2A4BDB2902BA3FDD92DD5F3C46, Result) == 0x000000, "Member 'GAB_SmasherRadialMelee_C_OnMoveFinished_1C768C2A4BDB2902BA3FDD92DD5F3C46::Result' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_OnMoveFinished_1C768C2A4BDB2902BA3FDD92DD5F3C46, AIController) == 0x000008, "Member 'GAB_SmasherRadialMelee_C_OnMoveFinished_1C768C2A4BDB2902BA3FDD92DD5F3C46::AIController' has a wrong offset!");

// Function GAB_SmasherRadialMelee.GAB_SmasherRadialMelee_C.Cancelled_2EFEB45748E11A8A846C14AD7ADF164D
// 0x0028 (0x0028 - 0x0000)
struct GAB_SmasherRadialMelee_C_Cancelled_2EFEB45748E11A8A846C14AD7ADF164D final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_SmasherRadialMelee_C_Cancelled_2EFEB45748E11A8A846C14AD7ADF164D) == 0x000008, "Wrong alignment on GAB_SmasherRadialMelee_C_Cancelled_2EFEB45748E11A8A846C14AD7ADF164D");
static_assert(sizeof(GAB_SmasherRadialMelee_C_Cancelled_2EFEB45748E11A8A846C14AD7ADF164D) == 0x000028, "Wrong size on GAB_SmasherRadialMelee_C_Cancelled_2EFEB45748E11A8A846C14AD7ADF164D");
static_assert(offsetof(GAB_SmasherRadialMelee_C_Cancelled_2EFEB45748E11A8A846C14AD7ADF164D, TargetData) == 0x000000, "Member 'GAB_SmasherRadialMelee_C_Cancelled_2EFEB45748E11A8A846C14AD7ADF164D::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_Cancelled_2EFEB45748E11A8A846C14AD7ADF164D, ApplicationTag) == 0x000020, "Member 'GAB_SmasherRadialMelee_C_Cancelled_2EFEB45748E11A8A846C14AD7ADF164D::ApplicationTag' has a wrong offset!");

// Function GAB_SmasherRadialMelee.GAB_SmasherRadialMelee_C.Completed_2EFEB45748E11A8A846C14AD7ADF164D
// 0x0028 (0x0028 - 0x0000)
struct GAB_SmasherRadialMelee_C_Completed_2EFEB45748E11A8A846C14AD7ADF164D final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_SmasherRadialMelee_C_Completed_2EFEB45748E11A8A846C14AD7ADF164D) == 0x000008, "Wrong alignment on GAB_SmasherRadialMelee_C_Completed_2EFEB45748E11A8A846C14AD7ADF164D");
static_assert(sizeof(GAB_SmasherRadialMelee_C_Completed_2EFEB45748E11A8A846C14AD7ADF164D) == 0x000028, "Wrong size on GAB_SmasherRadialMelee_C_Completed_2EFEB45748E11A8A846C14AD7ADF164D");
static_assert(offsetof(GAB_SmasherRadialMelee_C_Completed_2EFEB45748E11A8A846C14AD7ADF164D, TargetData) == 0x000000, "Member 'GAB_SmasherRadialMelee_C_Completed_2EFEB45748E11A8A846C14AD7ADF164D::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_Completed_2EFEB45748E11A8A846C14AD7ADF164D, ApplicationTag) == 0x000020, "Member 'GAB_SmasherRadialMelee_C_Completed_2EFEB45748E11A8A846C14AD7ADF164D::ApplicationTag' has a wrong offset!");

// Function GAB_SmasherRadialMelee.GAB_SmasherRadialMelee_C.Triggered_2EFEB45748E11A8A846C14AD7ADF164D
// 0x0028 (0x0028 - 0x0000)
struct GAB_SmasherRadialMelee_C_Triggered_2EFEB45748E11A8A846C14AD7ADF164D final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_SmasherRadialMelee_C_Triggered_2EFEB45748E11A8A846C14AD7ADF164D) == 0x000008, "Wrong alignment on GAB_SmasherRadialMelee_C_Triggered_2EFEB45748E11A8A846C14AD7ADF164D");
static_assert(sizeof(GAB_SmasherRadialMelee_C_Triggered_2EFEB45748E11A8A846C14AD7ADF164D) == 0x000028, "Wrong size on GAB_SmasherRadialMelee_C_Triggered_2EFEB45748E11A8A846C14AD7ADF164D");
static_assert(offsetof(GAB_SmasherRadialMelee_C_Triggered_2EFEB45748E11A8A846C14AD7ADF164D, TargetData) == 0x000000, "Member 'GAB_SmasherRadialMelee_C_Triggered_2EFEB45748E11A8A846C14AD7ADF164D::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_SmasherRadialMelee_C_Triggered_2EFEB45748E11A8A846C14AD7ADF164D, ApplicationTag) == 0x000020, "Member 'GAB_SmasherRadialMelee_C_Triggered_2EFEB45748E11A8A846C14AD7ADF164D::ApplicationTag' has a wrong offset!");

}


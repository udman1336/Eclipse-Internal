#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GamepadKeyButton

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GamepadKeyButton.GamepadKeyButton_C.ExecuteUbergraph_GamepadKeyButton
// 0x00C8 (0x00C8 - 0x0000)
struct GamepadKeyButton_C_ExecuteUbergraph_GamepadKeyButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortTabButtonLabelInfo                K2Node_Event_TabLabelInfo;                         // 0x0008(0x00A0)(ConstParm)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_Event_NewTriggeredAction;                   // 0x00B0(0x0010)(ConstParm, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bUsingGamepad;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GamepadKeyButton_C_ExecuteUbergraph_GamepadKeyButton) == 0x000008, "Wrong alignment on GamepadKeyButton_C_ExecuteUbergraph_GamepadKeyButton");
static_assert(sizeof(GamepadKeyButton_C_ExecuteUbergraph_GamepadKeyButton) == 0x0000C8, "Wrong size on GamepadKeyButton_C_ExecuteUbergraph_GamepadKeyButton");
static_assert(offsetof(GamepadKeyButton_C_ExecuteUbergraph_GamepadKeyButton, EntryPoint) == 0x000000, "Member 'GamepadKeyButton_C_ExecuteUbergraph_GamepadKeyButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(GamepadKeyButton_C_ExecuteUbergraph_GamepadKeyButton, K2Node_Event_TabLabelInfo) == 0x000008, "Member 'GamepadKeyButton_C_ExecuteUbergraph_GamepadKeyButton::K2Node_Event_TabLabelInfo' has a wrong offset!");
static_assert(offsetof(GamepadKeyButton_C_ExecuteUbergraph_GamepadKeyButton, K2Node_Event_IsDesignTime) == 0x0000A8, "Member 'GamepadKeyButton_C_ExecuteUbergraph_GamepadKeyButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(GamepadKeyButton_C_ExecuteUbergraph_GamepadKeyButton, K2Node_Event_NewTriggeredAction) == 0x0000B0, "Member 'GamepadKeyButton_C_ExecuteUbergraph_GamepadKeyButton::K2Node_Event_NewTriggeredAction' has a wrong offset!");
static_assert(offsetof(GamepadKeyButton_C_ExecuteUbergraph_GamepadKeyButton, K2Node_ComponentBoundEvent_bUsingGamepad) == 0x0000C0, "Member 'GamepadKeyButton_C_ExecuteUbergraph_GamepadKeyButton::K2Node_ComponentBoundEvent_bUsingGamepad' has a wrong offset!");

// Function GamepadKeyButton.GamepadKeyButton_C.BndEvt__InputActionWidget_K2Node_ComponentBoundEvent_24_OnInputMethodChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct GamepadKeyButton_C_BndEvt__InputActionWidget_K2Node_ComponentBoundEvent_24_OnInputMethodChanged__DelegateSignature final
{
public:
	bool                                          bUsingGamepad;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GamepadKeyButton_C_BndEvt__InputActionWidget_K2Node_ComponentBoundEvent_24_OnInputMethodChanged__DelegateSignature) == 0x000001, "Wrong alignment on GamepadKeyButton_C_BndEvt__InputActionWidget_K2Node_ComponentBoundEvent_24_OnInputMethodChanged__DelegateSignature");
static_assert(sizeof(GamepadKeyButton_C_BndEvt__InputActionWidget_K2Node_ComponentBoundEvent_24_OnInputMethodChanged__DelegateSignature) == 0x000001, "Wrong size on GamepadKeyButton_C_BndEvt__InputActionWidget_K2Node_ComponentBoundEvent_24_OnInputMethodChanged__DelegateSignature");
static_assert(offsetof(GamepadKeyButton_C_BndEvt__InputActionWidget_K2Node_ComponentBoundEvent_24_OnInputMethodChanged__DelegateSignature, bUsingGamepad) == 0x000000, "Member 'GamepadKeyButton_C_BndEvt__InputActionWidget_K2Node_ComponentBoundEvent_24_OnInputMethodChanged__DelegateSignature::bUsingGamepad' has a wrong offset!");

// Function GamepadKeyButton.GamepadKeyButton_C.OnTriggeredInputActionChanged
// 0x0010 (0x0010 - 0x0000)
struct GamepadKeyButton_C_OnTriggeredInputActionChanged final
{
public:
	struct FDataTableRowHandle                    NewTriggeredAction;                                // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(GamepadKeyButton_C_OnTriggeredInputActionChanged) == 0x000008, "Wrong alignment on GamepadKeyButton_C_OnTriggeredInputActionChanged");
static_assert(sizeof(GamepadKeyButton_C_OnTriggeredInputActionChanged) == 0x000010, "Wrong size on GamepadKeyButton_C_OnTriggeredInputActionChanged");
static_assert(offsetof(GamepadKeyButton_C_OnTriggeredInputActionChanged, NewTriggeredAction) == 0x000000, "Member 'GamepadKeyButton_C_OnTriggeredInputActionChanged::NewTriggeredAction' has a wrong offset!");

// Function GamepadKeyButton.GamepadKeyButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct GamepadKeyButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GamepadKeyButton_C_PreConstruct) == 0x000001, "Wrong alignment on GamepadKeyButton_C_PreConstruct");
static_assert(sizeof(GamepadKeyButton_C_PreConstruct) == 0x000001, "Wrong size on GamepadKeyButton_C_PreConstruct");
static_assert(offsetof(GamepadKeyButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'GamepadKeyButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function GamepadKeyButton.GamepadKeyButton_C.SetTabLabelInfo
// 0x00A0 (0x00A0 - 0x0000)
struct GamepadKeyButton_C_SetTabLabelInfo final
{
public:
	struct FFortTabButtonLabelInfo                TabLabelInfo;                                      // 0x0000(0x00A0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GamepadKeyButton_C_SetTabLabelInfo) == 0x000008, "Wrong alignment on GamepadKeyButton_C_SetTabLabelInfo");
static_assert(sizeof(GamepadKeyButton_C_SetTabLabelInfo) == 0x0000A0, "Wrong size on GamepadKeyButton_C_SetTabLabelInfo");
static_assert(offsetof(GamepadKeyButton_C_SetTabLabelInfo, TabLabelInfo) == 0x000000, "Member 'GamepadKeyButton_C_SetTabLabelInfo::TabLabelInfo' has a wrong offset!");

// Function GamepadKeyButton.GamepadKeyButton_C.UpdateContentAlignment
// 0x0018 (0x0018 - 0x0000)
struct GamepadKeyButton_C_UpdateContentAlignment final
{
public:
	class UPanelSlot*                             CallFunc_GetContentSlot_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBorderSlot*                            K2Node_DynamicCast_AsBorder_Slot;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GamepadKeyButton_C_UpdateContentAlignment) == 0x000008, "Wrong alignment on GamepadKeyButton_C_UpdateContentAlignment");
static_assert(sizeof(GamepadKeyButton_C_UpdateContentAlignment) == 0x000018, "Wrong size on GamepadKeyButton_C_UpdateContentAlignment");
static_assert(offsetof(GamepadKeyButton_C_UpdateContentAlignment, CallFunc_GetContentSlot_ReturnValue) == 0x000000, "Member 'GamepadKeyButton_C_UpdateContentAlignment::CallFunc_GetContentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadKeyButton_C_UpdateContentAlignment, K2Node_DynamicCast_AsBorder_Slot) == 0x000008, "Member 'GamepadKeyButton_C_UpdateContentAlignment::K2Node_DynamicCast_AsBorder_Slot' has a wrong offset!");
static_assert(offsetof(GamepadKeyButton_C_UpdateContentAlignment, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'GamepadKeyButton_C_UpdateContentAlignment::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GamepadKeyButton.GamepadKeyButton_C.SetContentAlignment
// 0x0001 (0x0001 - 0x0000)
struct GamepadKeyButton_C_SetContentAlignment final
{
public:
	EHorizontalAlignment                          ContentAlignment_0;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GamepadKeyButton_C_SetContentAlignment) == 0x000001, "Wrong alignment on GamepadKeyButton_C_SetContentAlignment");
static_assert(sizeof(GamepadKeyButton_C_SetContentAlignment) == 0x000001, "Wrong size on GamepadKeyButton_C_SetContentAlignment");
static_assert(offsetof(GamepadKeyButton_C_SetContentAlignment, ContentAlignment_0) == 0x000000, "Member 'GamepadKeyButton_C_SetContentAlignment::ContentAlignment_0' has a wrong offset!");

}


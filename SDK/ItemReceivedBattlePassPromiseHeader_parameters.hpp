#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemReceivedBattlePassPromiseHeader

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ItemReceivedBattlePassPromiseHeader.ItemReceivedBattlePassPromiseHeader_C.ExecuteUbergraph_ItemReceivedBattlePassPromiseHeader
// 0x0008 (0x0008 - 0x0000)
struct ItemReceivedBattlePassPromiseHeader_C_ExecuteUbergraph_ItemReceivedBattlePassPromiseHeader final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemReceivedBattlePassPromiseHeader_C_ExecuteUbergraph_ItemReceivedBattlePassPromiseHeader) == 0x000004, "Wrong alignment on ItemReceivedBattlePassPromiseHeader_C_ExecuteUbergraph_ItemReceivedBattlePassPromiseHeader");
static_assert(sizeof(ItemReceivedBattlePassPromiseHeader_C_ExecuteUbergraph_ItemReceivedBattlePassPromiseHeader) == 0x000008, "Wrong size on ItemReceivedBattlePassPromiseHeader_C_ExecuteUbergraph_ItemReceivedBattlePassPromiseHeader");
static_assert(offsetof(ItemReceivedBattlePassPromiseHeader_C_ExecuteUbergraph_ItemReceivedBattlePassPromiseHeader, EntryPoint) == 0x000000, "Member 'ItemReceivedBattlePassPromiseHeader_C_ExecuteUbergraph_ItemReceivedBattlePassPromiseHeader::EntryPoint' has a wrong offset!");
static_assert(offsetof(ItemReceivedBattlePassPromiseHeader_C_ExecuteUbergraph_ItemReceivedBattlePassPromiseHeader, K2Node_Event_IsDesignTime) == 0x000004, "Member 'ItemReceivedBattlePassPromiseHeader_C_ExecuteUbergraph_ItemReceivedBattlePassPromiseHeader::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function ItemReceivedBattlePassPromiseHeader.ItemReceivedBattlePassPromiseHeader_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ItemReceivedBattlePassPromiseHeader_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemReceivedBattlePassPromiseHeader_C_PreConstruct) == 0x000001, "Wrong alignment on ItemReceivedBattlePassPromiseHeader_C_PreConstruct");
static_assert(sizeof(ItemReceivedBattlePassPromiseHeader_C_PreConstruct) == 0x000001, "Wrong size on ItemReceivedBattlePassPromiseHeader_C_PreConstruct");
static_assert(offsetof(ItemReceivedBattlePassPromiseHeader_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ItemReceivedBattlePassPromiseHeader_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ItemReceivedBattlePassPromiseHeader.ItemReceivedBattlePassPromiseHeader_C.UpdateSeasonText
// 0x00F8 (0x00F8 - 0x0000)
struct ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SeasonNumber;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue1;              // 0x0028(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x0080(0x0040)(HasGetValueTypeHash)
	class UAthenaAccountContext*                  CallFunc_GetContext_ReturnValue;                   // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_GetCurrentSeasonNumber_ReturnValue;       // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0018)()
};
static_assert(alignof(ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText) == 0x000008, "Wrong alignment on ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText");
static_assert(sizeof(ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText) == 0x0000F8, "Wrong size on ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText");
static_assert(offsetof(ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText, IsDesignTime) == 0x000000, "Member 'ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText::IsDesignTime' has a wrong offset!");
static_assert(offsetof(ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText, SeasonNumber) == 0x000004, "Member 'ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText::SeasonNumber' has a wrong offset!");
static_assert(offsetof(ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText, CallFunc_Conv_IntToText_ReturnValue1) == 0x000028, "Member 'ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText::CallFunc_Conv_IntToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText, K2Node_MakeStruct_FormatArgumentData1) == 0x000080, "Member 'ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText, CallFunc_GetContext_ReturnValue) == 0x0000C0, "Member 'ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText, K2Node_MakeArray_Array) == 0x0000C8, "Member 'ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText, CallFunc_GetCurrentSeasonNumber_ReturnValue) == 0x0000D8, "Member 'ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText::CallFunc_GetCurrentSeasonNumber_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'ItemReceivedBattlePassPromiseHeader_C_UpdateSeasonText::CallFunc_Format_ReturnValue' has a wrong offset!");

}


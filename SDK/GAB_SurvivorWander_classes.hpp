#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAB_SurvivorWander

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GAB_SurvivorWander.GAB_SurvivorWander_C
// 0x0060 (0x0B48 - 0x0AE8)
class UGAB_SurvivorWander_C final : public UFortGameplayAbility
{
public:
	uint8                                         Pad_AE8[0x8];                                      // 0x0AE8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AF0(0x0008)(Transient, DuplicateTransient)
	bool                                          Debug;                                             // 0x0AF8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AbilityEnding;                                     // 0x0AF9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AFA[0x6];                                      // 0x0AFA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnvQuery*                              EQS_AnchorWander;                                  // 0x0B00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivor_C*                            SurvivorPawn;                                      // 0x0B08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WanderLocation;                                    // 0x0B10(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WaitTimeAfterWanderMin;                            // 0x0B1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WaitTimeAfterWanderMax;                            // 0x0B20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B24[0x4];                                      // 0x0B24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        EQSResults;                                        // 0x0B28(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          SetFocalPointToAbilityTargetWhileMoving;           // 0x0B38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsSurvivorInsideOfAnchorBounds;                    // 0x0B39(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B3A[0x6];                                      // 0x0B3A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilityTask_MoveAI*                WanderMove;                                        // 0x0B40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GAB_SurvivorWander(int32 EntryPoint);
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void OnQueryFinished(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus);
	void OnComplete_823C4D1641576DFB48835EA7477D7A9D();
	void OnInterrupted_823C4D1641576DFB48835EA7477D7A9D();
	void OnCancelled_823C4D1641576DFB48835EA7477D7A9D();
	void OnRequestFailed_823C4D1641576DFB48835EA7477D7A9D();
	void OnMoveFinished_823C4D1641576DFB48835EA7477D7A9D(EPathFollowingResult Result, class AAIController* AIController);
	void OnFinish_46520BF64782D787A829259B1AEBC2F9();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GAB_SurvivorWander_C">();
	}
	static class UGAB_SurvivorWander_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGAB_SurvivorWander_C>();
	}
};
static_assert(alignof(UGAB_SurvivorWander_C) == 0x000008, "Wrong alignment on UGAB_SurvivorWander_C");
static_assert(sizeof(UGAB_SurvivorWander_C) == 0x000B48, "Wrong size on UGAB_SurvivorWander_C");
static_assert(offsetof(UGAB_SurvivorWander_C, UberGraphFrame) == 0x000AF0, "Member 'UGAB_SurvivorWander_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorWander_C, Debug) == 0x000AF8, "Member 'UGAB_SurvivorWander_C::Debug' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorWander_C, AbilityEnding) == 0x000AF9, "Member 'UGAB_SurvivorWander_C::AbilityEnding' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorWander_C, EQS_AnchorWander) == 0x000B00, "Member 'UGAB_SurvivorWander_C::EQS_AnchorWander' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorWander_C, SurvivorPawn) == 0x000B08, "Member 'UGAB_SurvivorWander_C::SurvivorPawn' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorWander_C, WanderLocation) == 0x000B10, "Member 'UGAB_SurvivorWander_C::WanderLocation' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorWander_C, WaitTimeAfterWanderMin) == 0x000B1C, "Member 'UGAB_SurvivorWander_C::WaitTimeAfterWanderMin' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorWander_C, WaitTimeAfterWanderMax) == 0x000B20, "Member 'UGAB_SurvivorWander_C::WaitTimeAfterWanderMax' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorWander_C, EQSResults) == 0x000B28, "Member 'UGAB_SurvivorWander_C::EQSResults' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorWander_C, SetFocalPointToAbilityTargetWhileMoving) == 0x000B38, "Member 'UGAB_SurvivorWander_C::SetFocalPointToAbilityTargetWhileMoving' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorWander_C, IsSurvivorInsideOfAnchorBounds) == 0x000B39, "Member 'UGAB_SurvivorWander_C::IsSurvivorInsideOfAnchorBounds' has a wrong offset!");
static_assert(offsetof(UGAB_SurvivorWander_C, WanderMove) == 0x000B40, "Member 'UGAB_SurvivorWander_C::WanderMove' has a wrong offset!");

}


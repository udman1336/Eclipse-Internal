#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PartyDisplayManagerBP

#include "Basic.hpp"

#include "FrontEnd_VFXStorage_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PartyDisplayManagerBP.PartyDisplayManagerBP_C
// 0x0420 (0x07E8 - 0x03C8)
class APartyDisplayManagerBP_C final : public APartyDisplayManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03C8(0x0008)(Transient, DuplicateTransient)
	class UChildActorComponent*                   PrefabActorComp;                                   // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ScalePivot;                                        // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PivotHolder;                                       // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CelebratoryFX;                                     // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ScaleAnimEvolve_Scaling_6D0D09564D54A0DEA88CCC96FA6653CC; // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ScaleAnimEvolve__Direction_6D0D09564D54A0DEA88CCC96FA6653CC; // 0x040C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40D[0x3];                                      // 0x040D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ScaleAnimEvolve;                                   // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaleAnimLevel_Scaling_CC68128E49202D0C982B7A945E41AF43; // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ScaleAnimLevel__Direction_CC68128E49202D0C982B7A945E41AF43; // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41D[0x3];                                      // 0x041D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ScaleAnimLevel;                                    // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TimerHandle;                                       // 0x0428(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         Rotation;                                          // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              ItemToRepresent;                                   // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreviewRotation;                                   // 0x0440(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            RotationAnimation;                                 // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        LevelUpFX;                                         // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        EvolveUpFX;                                        // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FXTargetLocation;                                  // 0x0460(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCharacter;                                       // 0x046C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsEvolve;                                          // 0x046D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46E[0x2];                                      // 0x046E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        CharLevelUpFX;                                     // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        CharEvolveUpFX;                                    // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               UIoverrideMID;                                     // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasResetVisuals;                                   // 0x0488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               ParticleSystem1;                                   // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem2;                                   // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        CharSwapTransitionFX;                              // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCharacterVisible;                                // 0x04A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        HeroPawn;                                          // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               PrevCosmeticPawnRotator;                           // 0x04B8(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          SanityChecker;                                     // 0x04C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C5[0x3];                                      // 0x04C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFrontEnd_VFXStorage                   VFX_StorageContainer;                              // 0x04C8(0x0320)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_PartyDisplayManagerBP(int32 EntryPoint);
	void Character_Customization_Finished();
	void Set_Character_Parts_Visibility(bool NewVisible);
	void ReceiveTick(float DeltaSeconds);
	void HandleLoadingAssetsForItemCompleted(class UFortItem* ItemWhoseAssetsWereLoaded, const TArray<class UObject*>& LoadedAssets);
	void PerformScaleMeshFX();
	void CelebrateWithFX();
	void PlayEvolutionEffect();
	void PlayLevelUpEffect();
	void ShowItem(class UFortItem* ItemToView);
	void HideLoading();
	void ShowLoading();
	void ScaleAnimEvolve__UpdateFunc();
	void ScaleAnimEvolve__FinishedFunc();
	void ScaleAnimLevel__UpdateFunc();
	void ScaleAnimLevel__FinishedFunc();
	void UserConstructionScript();
	void ResetVisuals();
	void SetupSkeletalMeshVisuals(class USkeletalMesh* NewMesh);
	void SetupStaticMeshVisuals(class UStaticMesh* NewMesh);
	struct FTransform GetPreviewMeshWorldTransform();
	struct FTransform GetItemPreviewOffset(class UFortItemDefinition* ItemDefinition);
	void UpdatePreviewMeshTransforms();
	struct FTransform GetWeaponPlacementTransform();
	void SetUIOverrideVisuals(class UTexture2D* Large_Texture, class UFortItemDefinition* Item, EFortRarity Rarity);
	void GetItemDefinitionToShow(class UFortItemDefinition** ItemDefinition);
	void GetMeshForCurrentDisplayedItem(class UMeshComponent** OutDisplayedMesh);
	void SetupPrefabVisuals(bool* Success);
	void ResetTeslaHackParticles();
	void PostSetupPrefabVisuals();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PartyDisplayManagerBP_C">();
	}
	static class APartyDisplayManagerBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APartyDisplayManagerBP_C>();
	}
};
static_assert(alignof(APartyDisplayManagerBP_C) == 0x000008, "Wrong alignment on APartyDisplayManagerBP_C");
static_assert(sizeof(APartyDisplayManagerBP_C) == 0x0007E8, "Wrong size on APartyDisplayManagerBP_C");
static_assert(offsetof(APartyDisplayManagerBP_C, UberGraphFrame) == 0x0003C8, "Member 'APartyDisplayManagerBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, PrefabActorComp) == 0x0003D0, "Member 'APartyDisplayManagerBP_C::PrefabActorComp' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, SkeletalMesh) == 0x0003D8, "Member 'APartyDisplayManagerBP_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, StaticMesh) == 0x0003E0, "Member 'APartyDisplayManagerBP_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, ScalePivot) == 0x0003E8, "Member 'APartyDisplayManagerBP_C::ScalePivot' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, PivotHolder) == 0x0003F0, "Member 'APartyDisplayManagerBP_C::PivotHolder' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, CelebratoryFX) == 0x0003F8, "Member 'APartyDisplayManagerBP_C::CelebratoryFX' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, DefaultSceneRoot) == 0x000400, "Member 'APartyDisplayManagerBP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, ScaleAnimEvolve_Scaling_6D0D09564D54A0DEA88CCC96FA6653CC) == 0x000408, "Member 'APartyDisplayManagerBP_C::ScaleAnimEvolve_Scaling_6D0D09564D54A0DEA88CCC96FA6653CC' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, ScaleAnimEvolve__Direction_6D0D09564D54A0DEA88CCC96FA6653CC) == 0x00040C, "Member 'APartyDisplayManagerBP_C::ScaleAnimEvolve__Direction_6D0D09564D54A0DEA88CCC96FA6653CC' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, ScaleAnimEvolve) == 0x000410, "Member 'APartyDisplayManagerBP_C::ScaleAnimEvolve' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, ScaleAnimLevel_Scaling_CC68128E49202D0C982B7A945E41AF43) == 0x000418, "Member 'APartyDisplayManagerBP_C::ScaleAnimLevel_Scaling_CC68128E49202D0C982B7A945E41AF43' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, ScaleAnimLevel__Direction_CC68128E49202D0C982B7A945E41AF43) == 0x00041C, "Member 'APartyDisplayManagerBP_C::ScaleAnimLevel__Direction_CC68128E49202D0C982B7A945E41AF43' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, ScaleAnimLevel) == 0x000420, "Member 'APartyDisplayManagerBP_C::ScaleAnimLevel' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, TimerHandle) == 0x000428, "Member 'APartyDisplayManagerBP_C::TimerHandle' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, Rotation) == 0x000430, "Member 'APartyDisplayManagerBP_C::Rotation' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, ItemToRepresent) == 0x000438, "Member 'APartyDisplayManagerBP_C::ItemToRepresent' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, PreviewRotation) == 0x000440, "Member 'APartyDisplayManagerBP_C::PreviewRotation' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, RotationAnimation) == 0x000448, "Member 'APartyDisplayManagerBP_C::RotationAnimation' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, LevelUpFX) == 0x000450, "Member 'APartyDisplayManagerBP_C::LevelUpFX' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, EvolveUpFX) == 0x000458, "Member 'APartyDisplayManagerBP_C::EvolveUpFX' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, FXTargetLocation) == 0x000460, "Member 'APartyDisplayManagerBP_C::FXTargetLocation' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, IsCharacter) == 0x00046C, "Member 'APartyDisplayManagerBP_C::IsCharacter' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, IsEvolve) == 0x00046D, "Member 'APartyDisplayManagerBP_C::IsEvolve' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, CharLevelUpFX) == 0x000470, "Member 'APartyDisplayManagerBP_C::CharLevelUpFX' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, CharEvolveUpFX) == 0x000478, "Member 'APartyDisplayManagerBP_C::CharEvolveUpFX' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, UIoverrideMID) == 0x000480, "Member 'APartyDisplayManagerBP_C::UIoverrideMID' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, HasResetVisuals) == 0x000488, "Member 'APartyDisplayManagerBP_C::HasResetVisuals' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, ParticleSystem1) == 0x000490, "Member 'APartyDisplayManagerBP_C::ParticleSystem1' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, ParticleSystem2) == 0x000498, "Member 'APartyDisplayManagerBP_C::ParticleSystem2' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, CharSwapTransitionFX) == 0x0004A0, "Member 'APartyDisplayManagerBP_C::CharSwapTransitionFX' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, IsCharacterVisible) == 0x0004A8, "Member 'APartyDisplayManagerBP_C::IsCharacterVisible' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, HeroPawn) == 0x0004B0, "Member 'APartyDisplayManagerBP_C::HeroPawn' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, PrevCosmeticPawnRotator) == 0x0004B8, "Member 'APartyDisplayManagerBP_C::PrevCosmeticPawnRotator' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, SanityChecker) == 0x0004C4, "Member 'APartyDisplayManagerBP_C::SanityChecker' has a wrong offset!");
static_assert(offsetof(APartyDisplayManagerBP_C, VFX_StorageContainer) == 0x0004C8, "Member 'APartyDisplayManagerBP_C::VFX_StorageContainer' has a wrong offset!");

}


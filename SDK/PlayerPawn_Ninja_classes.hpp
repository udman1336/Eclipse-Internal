#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerPawn_Ninja

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "PlayerPawn_Generic_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PlayerPawn_Ninja.PlayerPawn_Ninja_C
// 0x0150 (0x2170 - 0x2020)
class APlayerPawn_Ninja_C final : public APlayerPawn_Generic_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_PlayerPawn_Ninja_C;                 // 0x2020(0x0008)(Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 ShadowStanceFaceComponent;                         // 0x2028(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 ShadowStanceCharmComponent;                        // 0x2030(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 ShadowStanceBackpackComponent;                     // 0x2038(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 ShadowStanceHatComponent;                          // 0x2040(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 ShadowStanceHeadComponent;                         // 0x2048(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 ShadowStanceBodyComponent;                         // 0x2050(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       DragonSlashImpact;                                 // 0x2058(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Animate_Ninja_ShadowStance_Dissolve_Inverse_Translucent_Shader_Opacity_1E481F634B18DA79A1B2FDBCB1091D62; // 0x2060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Animate_Ninja_ShadowStance_Dissolve_NinjaDissolve_1E481F634B18DA79A1B2FDBCB1091D62; // 0x2064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Animate_Ninja_ShadowStance_Dissolve__Direction_1E481F634B18DA79A1B2FDBCB1091D62; // 0x2068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2069[0x7];                                     // 0x2069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Animate_Ninja_ShadowStance_Dissolve;               // 0x2070(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MI_ShadowStanceDissolve;                           // 0x2078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TestMacros;                                        // 0x2080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DimMakActive;                                      // 0x2081(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Shadow_Stance_Active;                              // 0x2082(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2083[0x5];                                     // 0x2083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       MID_ShadowStanceDissolveArray;                     // 0x2088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UMaterialInterface*                     MI_Shadow_Stance_Translucent_Shader;               // 0x2098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       MID_ShadowStanceTranslucentArray_Body;             // 0x20A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       MID_ShadowStanceTranslucentArray_Head;             // 0x20B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         ShadowStanceVisibility;                            // 0x20C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C4[0x4];                                     // 0x20C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     MI_Shadow_Stance_Translucent_Shader_Enemy_View;    // 0x20C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Shadow_Stance_Material;                            // 0x20D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DragonSlashActive;                                 // 0x20D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          WeaponsShadowStanceReversed;                       // 0x20D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20DA[0x6];                                     // 0x20DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GE_AssassinationStacks;                            // 0x20E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SplineVolumeTrail_v1b_C*            TOTD_SplineBP;                                     // 0x20E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               NinjaStarTrail;                                    // 0x20F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NinjaStarsPiercing;                                // 0x20F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20F9[0x7];                                     // 0x20F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       MID_ShadowStanceTranslucentArray_Hat;              // 0x2100(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       MID_ShadowStanceTranslucentArray_Face;             // 0x2110(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       MID_ShadowStanceTranslucentArray_Charm;            // 0x2120(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       MID_ShadowStanceTranslucentArray_Backpack;         // 0x2130(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       MasterMIDShadowStanceTranslucentArray;             // 0x2140(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class USkeletalMeshComponent*>         Master_Shadow_Stance_Component_Array;              // 0x2150(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UObject*                                SK_DragonSlashSword;                               // 0x2160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_EnableMantisLeap;                               // 0x2168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_PlayerPawn_Ninja(int32 EntryPoint);
	void TailOfDragonStart(float AoeCloudTimeToLive, float MontageLength);
	void TailOfDragonEnd();
	void OnTeleportedClient();
	void StopEmittingNewSplines();
	void SetPiercingForFX(bool NewPierceValue);
	void NinjaStarTrails_Off();
	void NinjaStarTrails_On();
	void SetMenuScreenClassName();
	void Toggle_Shadow_Stance();
	void DragonSlashActivatedOrDeactivated(bool Active_);
	void UpdateWeaponShadowStance();
	void GameplayCue_Ninja_DimMak_ActiveFX(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Ninja_ShadowStance(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void Animate_Ninja_ShadowStance_Dissolve__UpdateFunc();
	void Animate_Ninja_ShadowStance_Dissolve__FinishedFunc();
	void CreateAndAttachDuplicateEffectSkeletalMeshes(EFortCustomPartType BodyType, class USkeletalMeshComponent*& DuplicatedSkeletalMeshComponent, class UMaterialInterface* Material_to_Apply, TArray<class UMaterialInstanceDynamic*>& Empty_MID_Array, int32 TranslucentSortPriority);
	void OnLanded(const struct FHitResult& Hit);
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void OnCharacterPartsReinitialized();
	void OnWeaponEquipped(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon);
	void SetupShadowMeshAssetsAndMaterials(EFortCustomPartType PartType, class USkeletalMeshComponent*& Shadow_Mesh_Component, TArray<class UMaterialInterface*>& Character_Body_Part_MID_Array, TArray<class UMaterialInstanceDynamic*>& Empty_Translucent_Shadow_Stance_Output_MID_Array, bool* Set);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerPawn_Ninja_C">();
	}
	static class APlayerPawn_Ninja_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerPawn_Ninja_C>();
	}
};
static_assert(alignof(APlayerPawn_Ninja_C) == 0x000010, "Wrong alignment on APlayerPawn_Ninja_C");
static_assert(sizeof(APlayerPawn_Ninja_C) == 0x002170, "Wrong size on APlayerPawn_Ninja_C");
static_assert(offsetof(APlayerPawn_Ninja_C, UberGraphFrame_PlayerPawn_Ninja_C) == 0x002020, "Member 'APlayerPawn_Ninja_C::UberGraphFrame_PlayerPawn_Ninja_C' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, ShadowStanceFaceComponent) == 0x002028, "Member 'APlayerPawn_Ninja_C::ShadowStanceFaceComponent' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, ShadowStanceCharmComponent) == 0x002030, "Member 'APlayerPawn_Ninja_C::ShadowStanceCharmComponent' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, ShadowStanceBackpackComponent) == 0x002038, "Member 'APlayerPawn_Ninja_C::ShadowStanceBackpackComponent' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, ShadowStanceHatComponent) == 0x002040, "Member 'APlayerPawn_Ninja_C::ShadowStanceHatComponent' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, ShadowStanceHeadComponent) == 0x002048, "Member 'APlayerPawn_Ninja_C::ShadowStanceHeadComponent' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, ShadowStanceBodyComponent) == 0x002050, "Member 'APlayerPawn_Ninja_C::ShadowStanceBodyComponent' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, DragonSlashImpact) == 0x002058, "Member 'APlayerPawn_Ninja_C::DragonSlashImpact' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, Animate_Ninja_ShadowStance_Dissolve_Inverse_Translucent_Shader_Opacity_1E481F634B18DA79A1B2FDBCB1091D62) == 0x002060, "Member 'APlayerPawn_Ninja_C::Animate_Ninja_ShadowStance_Dissolve_Inverse_Translucent_Shader_Opacity_1E481F634B18DA79A1B2FDBCB1091D62' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, Animate_Ninja_ShadowStance_Dissolve_NinjaDissolve_1E481F634B18DA79A1B2FDBCB1091D62) == 0x002064, "Member 'APlayerPawn_Ninja_C::Animate_Ninja_ShadowStance_Dissolve_NinjaDissolve_1E481F634B18DA79A1B2FDBCB1091D62' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, Animate_Ninja_ShadowStance_Dissolve__Direction_1E481F634B18DA79A1B2FDBCB1091D62) == 0x002068, "Member 'APlayerPawn_Ninja_C::Animate_Ninja_ShadowStance_Dissolve__Direction_1E481F634B18DA79A1B2FDBCB1091D62' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, Animate_Ninja_ShadowStance_Dissolve) == 0x002070, "Member 'APlayerPawn_Ninja_C::Animate_Ninja_ShadowStance_Dissolve' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, MI_ShadowStanceDissolve) == 0x002078, "Member 'APlayerPawn_Ninja_C::MI_ShadowStanceDissolve' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, TestMacros) == 0x002080, "Member 'APlayerPawn_Ninja_C::TestMacros' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, DimMakActive) == 0x002081, "Member 'APlayerPawn_Ninja_C::DimMakActive' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, Shadow_Stance_Active) == 0x002082, "Member 'APlayerPawn_Ninja_C::Shadow_Stance_Active' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, MID_ShadowStanceDissolveArray) == 0x002088, "Member 'APlayerPawn_Ninja_C::MID_ShadowStanceDissolveArray' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, MI_Shadow_Stance_Translucent_Shader) == 0x002098, "Member 'APlayerPawn_Ninja_C::MI_Shadow_Stance_Translucent_Shader' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, MID_ShadowStanceTranslucentArray_Body) == 0x0020A0, "Member 'APlayerPawn_Ninja_C::MID_ShadowStanceTranslucentArray_Body' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, MID_ShadowStanceTranslucentArray_Head) == 0x0020B0, "Member 'APlayerPawn_Ninja_C::MID_ShadowStanceTranslucentArray_Head' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, ShadowStanceVisibility) == 0x0020C0, "Member 'APlayerPawn_Ninja_C::ShadowStanceVisibility' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, MI_Shadow_Stance_Translucent_Shader_Enemy_View) == 0x0020C8, "Member 'APlayerPawn_Ninja_C::MI_Shadow_Stance_Translucent_Shader_Enemy_View' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, Shadow_Stance_Material) == 0x0020D0, "Member 'APlayerPawn_Ninja_C::Shadow_Stance_Material' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, DragonSlashActive) == 0x0020D8, "Member 'APlayerPawn_Ninja_C::DragonSlashActive' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, WeaponsShadowStanceReversed) == 0x0020D9, "Member 'APlayerPawn_Ninja_C::WeaponsShadowStanceReversed' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, GE_AssassinationStacks) == 0x0020E0, "Member 'APlayerPawn_Ninja_C::GE_AssassinationStacks' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, TOTD_SplineBP) == 0x0020E8, "Member 'APlayerPawn_Ninja_C::TOTD_SplineBP' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, NinjaStarTrail) == 0x0020F0, "Member 'APlayerPawn_Ninja_C::NinjaStarTrail' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, NinjaStarsPiercing) == 0x0020F8, "Member 'APlayerPawn_Ninja_C::NinjaStarsPiercing' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, MID_ShadowStanceTranslucentArray_Hat) == 0x002100, "Member 'APlayerPawn_Ninja_C::MID_ShadowStanceTranslucentArray_Hat' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, MID_ShadowStanceTranslucentArray_Face) == 0x002110, "Member 'APlayerPawn_Ninja_C::MID_ShadowStanceTranslucentArray_Face' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, MID_ShadowStanceTranslucentArray_Charm) == 0x002120, "Member 'APlayerPawn_Ninja_C::MID_ShadowStanceTranslucentArray_Charm' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, MID_ShadowStanceTranslucentArray_Backpack) == 0x002130, "Member 'APlayerPawn_Ninja_C::MID_ShadowStanceTranslucentArray_Backpack' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, MasterMIDShadowStanceTranslucentArray) == 0x002140, "Member 'APlayerPawn_Ninja_C::MasterMIDShadowStanceTranslucentArray' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, Master_Shadow_Stance_Component_Array) == 0x002150, "Member 'APlayerPawn_Ninja_C::Master_Shadow_Stance_Component_Array' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, SK_DragonSlashSword) == 0x002160, "Member 'APlayerPawn_Ninja_C::SK_DragonSlashSword' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Ninja_C, GE_EnableMantisLeap) == 0x002168, "Member 'APlayerPawn_Ninja_C::GE_EnableMantisLeap' has a wrong offset!");

}


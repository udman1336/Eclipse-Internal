#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAB_SmasherRadialMelee

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GAB_AIBaseMelee_classes.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GAB_SmasherRadialMelee.GAB_SmasherRadialMelee_C
// 0x0020 (0x0B20 - 0x0B00)
class UGAB_SmasherRadialMelee_C final : public UGAB_AIBaseMelee_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GAB_SmasherRadialMelee_C;           // 0x0B00(0x0008)(Transient, DuplicateTransient)
	class UClass*                                 GE_SmasherMeleeSuccess;                            // 0x0B08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SmasherRotationRate;                               // 0x0B10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B14[0x4];                                      // 0x0B14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilityTask_MoveAI*                Move;                                              // 0x0B18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GAB_SmasherRadialMelee(int32 EntryPoint);
	void K2_OnEndAbility(bool bWasCancelled);
	void MoveToLoop();
	void OnComplete_1C768C2A4BDB2902BA3FDD92DD5F3C46();
	void OnInterrupted_1C768C2A4BDB2902BA3FDD92DD5F3C46();
	void OnCancelled_1C768C2A4BDB2902BA3FDD92DD5F3C46();
	void OnRequestFailed_1C768C2A4BDB2902BA3FDD92DD5F3C46();
	void OnMoveFinished_1C768C2A4BDB2902BA3FDD92DD5F3C46(EPathFollowingResult Result, class AAIController* AIController);
	void K2_ActivateAbility();
	void Cancelled_2EFEB45748E11A8A846C14AD7ADF164D(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Completed_2EFEB45748E11A8A846C14AD7ADF164D(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Triggered_2EFEB45748E11A8A846C14AD7ADF164D(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GAB_SmasherRadialMelee_C">();
	}
	static class UGAB_SmasherRadialMelee_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGAB_SmasherRadialMelee_C>();
	}
};
static_assert(alignof(UGAB_SmasherRadialMelee_C) == 0x000008, "Wrong alignment on UGAB_SmasherRadialMelee_C");
static_assert(sizeof(UGAB_SmasherRadialMelee_C) == 0x000B20, "Wrong size on UGAB_SmasherRadialMelee_C");
static_assert(offsetof(UGAB_SmasherRadialMelee_C, UberGraphFrame_GAB_SmasherRadialMelee_C) == 0x000B00, "Member 'UGAB_SmasherRadialMelee_C::UberGraphFrame_GAB_SmasherRadialMelee_C' has a wrong offset!");
static_assert(offsetof(UGAB_SmasherRadialMelee_C, GE_SmasherMeleeSuccess) == 0x000B08, "Member 'UGAB_SmasherRadialMelee_C::GE_SmasherMeleeSuccess' has a wrong offset!");
static_assert(offsetof(UGAB_SmasherRadialMelee_C, SmasherRotationRate) == 0x000B10, "Member 'UGAB_SmasherRadialMelee_C::SmasherRotationRate' has a wrong offset!");
static_assert(offsetof(UGAB_SmasherRadialMelee_C, Move) == 0x000B18, "Member 'UGAB_SmasherRadialMelee_C::Move' has a wrong offset!");

}


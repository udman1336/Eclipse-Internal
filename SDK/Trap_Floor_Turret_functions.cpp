#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Trap_Floor_Turret

#include "Basic.hpp"

#include "Trap_Floor_Turret_classes.hpp"
#include "Trap_Floor_Turret_parameters.hpp"


namespace SDK
{

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.ExecuteUbergraph_Trap_Floor_Turret
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrap_Floor_Turret_C::ExecuteUbergraph_Trap_Floor_Turret(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "ExecuteUbergraph_Trap_Floor_Turret");

	Params::Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.GameplayCue.Impact.Physical
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameplayCueEvent                       EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ATrap_Floor_Turret_C::GameplayCue_Impact_Physical(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "GameplayCue.Impact.Physical");

	Params::Trap_Floor_Turret_C_GameplayCue_Impact_Physical Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.GameplayCue.Abilities.Activation.Generic.SentryGun
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameplayCueEvent                       EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ATrap_Floor_Turret_C::GameplayCue_Abilities_Activation_Generic_SentryGun(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "GameplayCue.Abilities.Activation.Generic.SentryGun");

	Params::Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Generic_SentryGun Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.RotationTimer
// (BlueprintCallable, BlueprintEvent)

void ATrap_Floor_Turret_C::RotationTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "RotationTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrap_Floor_Turret_C::BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");

	Params::Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ATrap_Floor_Turret_C::BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.TriggerLaunchEffects
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawnAthena*            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrap_Floor_Turret_C::TriggerLaunchEffects(class AFortPlayerPawnAthena* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "TriggerLaunchEffects");

	Params::Trap_Floor_Turret_C_TriggerLaunchEffects Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.OnOutOfDurability
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ATrap_Floor_Turret_C::OnOutOfDurability()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "OnOutOfDurability");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.GameplayCue.Abilities.Activation.Traps.ActivateTrap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameplayCueEvent                       EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ATrap_Floor_Turret_C::GameplayCue_Abilities_Activation_Traps_ActivateTrap(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "GameplayCue.Abilities.Activation.Traps.ActivateTrap");

	Params::Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Traps_ActivateTrap Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.GameplayCue.Abilities.Activation.Traps.ReloadBegin
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameplayCueEvent                       EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ATrap_Floor_Turret_C::GameplayCue_Abilities_Activation_Traps_ReloadBegin(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "GameplayCue.Abilities.Activation.Traps.ReloadBegin");

	Params::Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Traps_ReloadBegin Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.OnFinishedBuilding
// (Event, Public, BlueprintEvent)

void ATrap_Floor_Turret_C::OnFinishedBuilding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "OnFinishedBuilding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.OnPlaced
// (Event, Public, BlueprintEvent)

void ATrap_Floor_Turret_C::OnPlaced()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "OnPlaced");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.OnReloadEnd
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ATrap_Floor_Turret_C::OnReloadEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "OnReloadEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ATrap_Floor_Turret_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.PerformGunRotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           LookAtActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrap_Floor_Turret_C::PerformGunRotation(class AActor* LookAtActor, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "PerformGunRotation");

	Params::Trap_Floor_Turret_C_PerformGunRotation Parms{};

	Parms.LookAtActor = LookAtActor;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.CalcDesiredAngle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InitialRelativeAngle                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentRelativeAngle                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AngleOffset                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AngleClamp                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DesiredAngle                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrap_Floor_Turret_C::CalcDesiredAngle(float InitialRelativeAngle, float CurrentRelativeAngle, float AngleOffset, float AngleClamp, float* DesiredAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "CalcDesiredAngle");

	Params::Trap_Floor_Turret_C_CalcDesiredAngle Parms{};

	Parms.InitialRelativeAngle = InitialRelativeAngle;
	Parms.CurrentRelativeAngle = CurrentRelativeAngle;
	Parms.AngleOffset = AngleOffset;
	Parms.AngleClamp = AngleClamp;

	UObject::ProcessEvent(Func, &Parms);

	if (DesiredAngle != nullptr)
		*DesiredAngle = Parms.DesiredAngle;
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.SetTrackingTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPawn*                        PawnToTrack                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrap_Floor_Turret_C::SetTrackingTarget(class AFortPawn* PawnToTrack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "SetTrackingTarget");

	Params::Trap_Floor_Turret_C_SetTrackingTarget Parms{};

	Parms.PawnToTrack = PawnToTrack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.ClearTargetAcquisitionTimer
// (Public, BlueprintCallable, BlueprintEvent)

void ATrap_Floor_Turret_C::ClearTargetAcquisitionTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "ClearTargetAcquisitionTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.ClearFiringTimer
// (Public, BlueprintCallable, BlueprintEvent)

void ATrap_Floor_Turret_C::ClearFiringTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "ClearFiringTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.SetFiringTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ATrap_Floor_Turret_C::SetFiringTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "SetFiringTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.AttemptAcquireTarget
// (Public, BlueprintCallable, BlueprintEvent)

void ATrap_Floor_Turret_C::AttemptAcquireTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "AttemptAcquireTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.IsValidTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPawn*                        PotentialTarget                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IncludeSimpleRangeCheck                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IncludeObstructionCheck                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bValidTarget                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ATrap_Floor_Turret_C::IsValidTarget(class AFortPawn* PotentialTarget, bool IncludeSimpleRangeCheck, bool IncludeObstructionCheck, bool* bValidTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "IsValidTarget");

	Params::Trap_Floor_Turret_C_IsValidTarget Parms{};

	Parms.PotentialTarget = PotentialTarget;
	Parms.IncludeSimpleRangeCheck = IncludeSimpleRangeCheck;
	Parms.IncludeObstructionCheck = IncludeObstructionCheck;

	UObject::ProcessEvent(Func, &Parms);

	if (bValidTarget != nullptr)
		*bValidTarget = Parms.bValidTarget;
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.IsPawnInsideYawLimits
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPawn*                        Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInsideYawLimits                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ATrap_Floor_Turret_C::IsPawnInsideYawLimits(class AFortPawn* Pawn, bool* bInsideYawLimits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "IsPawnInsideYawLimits");

	Params::Trap_Floor_Turret_C_IsPawnInsideYawLimits Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);

	if (bInsideYawLimits != nullptr)
		*bInsideYawLimits = Parms.bInsideYawLimits;
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.IsPawnInsidePitchLimits
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPawn*                        Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInsideYawLimits                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ATrap_Floor_Turret_C::IsPawnInsidePitchLimits(class AFortPawn* Pawn, bool* bInsideYawLimits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "IsPawnInsidePitchLimits");

	Params::Trap_Floor_Turret_C_IsPawnInsidePitchLimits Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);

	if (bInsideYawLimits != nullptr)
		*bInsideYawLimits = Parms.bInsideYawLimits;
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.SetTargetAcquisitionTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ATrap_Floor_Turret_C::SetTargetAcquisitionTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "SetTargetAcquisitionTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.OnRep_IsDeployed
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ATrap_Floor_Turret_C::OnRep_IsDeployed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "OnRep_IsDeployed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.OnNewPotentialTargetTouched
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPawn*                        PotentialTargetPawn                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrap_Floor_Turret_C::OnNewPotentialTargetTouched(class AFortPawn* PotentialTargetPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "OnNewPotentialTargetTouched");

	Params::Trap_Floor_Turret_C_OnNewPotentialTargetTouched Parms{};

	Parms.PotentialTargetPawn = PotentialTargetPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.OnPotentialTargetUntouched
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPawn*                        UntouchedPotentialTarget                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrap_Floor_Turret_C::OnPotentialTargetUntouched(class AFortPawn* UntouchedPotentialTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "OnPotentialTargetUntouched");

	Params::Trap_Floor_Turret_C_OnPotentialTargetUntouched Parms{};

	Parms.UntouchedPotentialTarget = UntouchedPotentialTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.AttemptFire
// (Public, BlueprintCallable, BlueprintEvent)

void ATrap_Floor_Turret_C::AttemptFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "AttemptFire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.SpawnTracer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HitLocation_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrap_Floor_Turret_C::SpawnTracer(const struct FVector& HitLocation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "SpawnTracer");

	Params::Trap_Floor_Turret_C_SpawnTracer Parms{};

	Parms.HitLocation_0 = std::move(HitLocation_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.ShouldFire
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldFire_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ATrap_Floor_Turret_C::ShouldFire(bool* ShouldFire_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "ShouldFire");

	Params::Trap_Floor_Turret_C_ShouldFire Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShouldFire_0 != nullptr)
		*ShouldFire_0 = Parms.ShouldFire_0;
}


// Function Trap_Floor_Turret.Trap_Floor_Turret_C.SpawnImpactEffects
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HitLocation_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrap_Floor_Turret_C::SpawnImpactEffects(const struct FVector& HitLocation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Trap_Floor_Turret_C", "SpawnImpactEffects");

	Params::Trap_Floor_Turret_C_SpawnImpactEffects Parms{};

	Parms.HitLocation_0 = std::move(HitLocation_0);

	UObject::ProcessEvent(Func, &Parms);
}

}


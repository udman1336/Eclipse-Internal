#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaChallengeTreeEntry

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AthenaChallengeTreeEntry.AthenaChallengeTreeEntry_C.ExecuteUbergraph_AthenaChallengeTreeEntry
// 0x0048 (0x0048 - 0x0000)
struct AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              CallFunc_GetRewardToShow_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bExpanded;                            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortChallengeBundleInfo*               CallFunc_GetChallengeBundleInfo_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortChallengeBundleInfo*               K2Node_Event_Bundle;                               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortChallengeBundleCategoryInfo*       K2Node_Event_Schedule;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemExpanded_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue1;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry) == 0x000008, "Wrong alignment on AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry");
static_assert(sizeof(AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry) == 0x000048, "Wrong size on AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry");
static_assert(offsetof(AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry, EntryPoint) == 0x000000, "Member 'AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry, CallFunc_GetRewardToShow_ReturnValue) == 0x000008, "Member 'AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry::CallFunc_GetRewardToShow_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry, K2Node_Event_bExpanded) == 0x000010, "Member 'AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry::K2Node_Event_bExpanded' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000014, "Member 'AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry, CallFunc_GetChallengeBundleInfo_ReturnValue) == 0x000018, "Member 'AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry::CallFunc_GetChallengeBundleInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry, CallFunc_GetContext_ReturnValue) == 0x000028, "Member 'AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry, K2Node_Event_Bundle) == 0x000030, "Member 'AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry::K2Node_Event_Bundle' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry, K2Node_Event_Schedule) == 0x000038, "Member 'AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry::K2Node_Event_Schedule' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry, CallFunc_IsItemExpanded_ReturnValue) == 0x000040, "Member 'AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry::CallFunc_IsItemExpanded_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry, CallFunc_Conv_BoolToInt_ReturnValue1) == 0x000044, "Member 'AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry::CallFunc_Conv_BoolToInt_ReturnValue1' has a wrong offset!");

// Function AthenaChallengeTreeEntry.AthenaChallengeTreeEntry_C.ExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaChallengeTreeEntry_C_ExpansionChanged final
{
public:
	bool                                          bExpanded;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaChallengeTreeEntry_C_ExpansionChanged) == 0x000001, "Wrong alignment on AthenaChallengeTreeEntry_C_ExpansionChanged");
static_assert(sizeof(AthenaChallengeTreeEntry_C_ExpansionChanged) == 0x000001, "Wrong size on AthenaChallengeTreeEntry_C_ExpansionChanged");
static_assert(offsetof(AthenaChallengeTreeEntry_C_ExpansionChanged, bExpanded) == 0x000000, "Member 'AthenaChallengeTreeEntry_C_ExpansionChanged::bExpanded' has a wrong offset!");

// Function AthenaChallengeTreeEntry.AthenaChallengeTreeEntry_C.SetupAsChallengeBundle
// 0x0008 (0x0008 - 0x0000)
struct AthenaChallengeTreeEntry_C_SetupAsChallengeBundle final
{
public:
	class UFortChallengeBundleInfo*               Bundle;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeTreeEntry_C_SetupAsChallengeBundle) == 0x000008, "Wrong alignment on AthenaChallengeTreeEntry_C_SetupAsChallengeBundle");
static_assert(sizeof(AthenaChallengeTreeEntry_C_SetupAsChallengeBundle) == 0x000008, "Wrong size on AthenaChallengeTreeEntry_C_SetupAsChallengeBundle");
static_assert(offsetof(AthenaChallengeTreeEntry_C_SetupAsChallengeBundle, Bundle) == 0x000000, "Member 'AthenaChallengeTreeEntry_C_SetupAsChallengeBundle::Bundle' has a wrong offset!");

// Function AthenaChallengeTreeEntry.AthenaChallengeTreeEntry_C.SetupAsChallengeBundleSchedule
// 0x0008 (0x0008 - 0x0000)
struct AthenaChallengeTreeEntry_C_SetupAsChallengeBundleSchedule final
{
public:
	class UFortChallengeBundleCategoryInfo*       Schedule;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeTreeEntry_C_SetupAsChallengeBundleSchedule) == 0x000008, "Wrong alignment on AthenaChallengeTreeEntry_C_SetupAsChallengeBundleSchedule");
static_assert(sizeof(AthenaChallengeTreeEntry_C_SetupAsChallengeBundleSchedule) == 0x000008, "Wrong size on AthenaChallengeTreeEntry_C_SetupAsChallengeBundleSchedule");
static_assert(offsetof(AthenaChallengeTreeEntry_C_SetupAsChallengeBundleSchedule, Schedule) == 0x000000, "Member 'AthenaChallengeTreeEntry_C_SetupAsChallengeBundleSchedule::Schedule' has a wrong offset!");

// Function AthenaChallengeTreeEntry.AthenaChallengeTreeEntry_C.UpdateHeaderCategoryStyle
// 0x0020 (0x0020 - 0x0000)
struct AthenaChallengeTreeEntry_C_UpdateHeaderCategoryStyle final
{
public:
	class UFortChallengeBundleCategoryInfo*       CategoryInfo;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UFortChallengeBundleInfo*>       CallFunc_GetChallengeBundleInfos_ReturnValue;      // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	class UFortChallengeBundleInfo*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeTreeEntry_C_UpdateHeaderCategoryStyle) == 0x000008, "Wrong alignment on AthenaChallengeTreeEntry_C_UpdateHeaderCategoryStyle");
static_assert(sizeof(AthenaChallengeTreeEntry_C_UpdateHeaderCategoryStyle) == 0x000020, "Wrong size on AthenaChallengeTreeEntry_C_UpdateHeaderCategoryStyle");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateHeaderCategoryStyle, CategoryInfo) == 0x000000, "Member 'AthenaChallengeTreeEntry_C_UpdateHeaderCategoryStyle::CategoryInfo' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateHeaderCategoryStyle, CallFunc_GetChallengeBundleInfos_ReturnValue) == 0x000008, "Member 'AthenaChallengeTreeEntry_C_UpdateHeaderCategoryStyle::CallFunc_GetChallengeBundleInfos_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateHeaderCategoryStyle, CallFunc_Array_Get_Item) == 0x000018, "Member 'AthenaChallengeTreeEntry_C_UpdateHeaderCategoryStyle::CallFunc_Array_Get_Item' has a wrong offset!");

// Function AthenaChallengeTreeEntry.AthenaChallengeTreeEntry_C.UpdateBundleStyle
// 0x0048 (0x0048 - 0x0000)
struct AthenaChallengeTreeEntry_C_UpdateBundleStyle final
{
public:
	class UFortChallengeBundleInfo*               BundleInfo;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_IsUnlocked_LockedReason;                  // 0x0008(0x0018)()
	bool                                          CallFunc_IsUnlocked_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0028(0x0018)()
	bool                                          CallFunc_IsCompleted_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaChallengeTreeEntry_C_UpdateBundleStyle) == 0x000008, "Wrong alignment on AthenaChallengeTreeEntry_C_UpdateBundleStyle");
static_assert(sizeof(AthenaChallengeTreeEntry_C_UpdateBundleStyle) == 0x000048, "Wrong size on AthenaChallengeTreeEntry_C_UpdateBundleStyle");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleStyle, BundleInfo) == 0x000000, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleStyle::BundleInfo' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleStyle, CallFunc_IsUnlocked_LockedReason) == 0x000008, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleStyle::CallFunc_IsUnlocked_LockedReason' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleStyle, CallFunc_IsUnlocked_ReturnValue) == 0x000020, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleStyle::CallFunc_IsUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleStyle, CallFunc_TextToUpper_ReturnValue) == 0x000028, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleStyle::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleStyle, CallFunc_IsCompleted_ReturnValue) == 0x000040, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleStyle::CallFunc_IsCompleted_ReturnValue' has a wrong offset!");

// Function AthenaChallengeTreeEntry.AthenaChallengeTreeEntry_C.UpdateBundleData
// 0x0130 (0x0130 - 0x0000)
struct AthenaChallengeTreeEntry_C_UpdateBundleData final
{
public:
	class UFortChallengeBundleInfo*               BundleInfo;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_HasQuestReward_OutRecievedCount;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_HasQuestReward_OutTotalCount;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasQuestReward_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortChallengeBundleItemDefinition*     CallFunc_GetBundleDefinition_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetShortNameNumber_ReturnValue;           // 0x0020(0x0018)()
	class FText                                   CallFunc_GetShortName_ReturnValue;                 // 0x0038(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0090(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x00A8(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_GetAchievedCount_OutTotalAchievedCount;   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAchievedCount_OutTotalRequiredCount;   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAchievedCount_OutAchievedPercent;      // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAchievedCount_OutThresholdPercent;     // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ZeroConstructor, ReferenceParm)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0110(0x0018)()
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeTreeEntry_C_UpdateBundleData) == 0x000008, "Wrong alignment on AthenaChallengeTreeEntry_C_UpdateBundleData");
static_assert(sizeof(AthenaChallengeTreeEntry_C_UpdateBundleData) == 0x000130, "Wrong size on AthenaChallengeTreeEntry_C_UpdateBundleData");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleData, BundleInfo) == 0x000000, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleData::BundleInfo' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleData, Temp_bool_Variable) == 0x000008, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleData, CallFunc_HasQuestReward_OutRecievedCount) == 0x00000C, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleData::CallFunc_HasQuestReward_OutRecievedCount' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleData, CallFunc_HasQuestReward_OutTotalCount) == 0x000010, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleData::CallFunc_HasQuestReward_OutTotalCount' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleData, CallFunc_HasQuestReward_ReturnValue) == 0x000014, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleData::CallFunc_HasQuestReward_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleData, CallFunc_GetBundleDefinition_ReturnValue) == 0x000018, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleData::CallFunc_GetBundleDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleData, CallFunc_GetShortNameNumber_ReturnValue) == 0x000020, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleData::CallFunc_GetShortNameNumber_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleData, CallFunc_GetShortName_ReturnValue) == 0x000038, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleData::CallFunc_GetShortName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleData, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleData::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleData, CallFunc_TextToUpper_ReturnValue) == 0x000090, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleData::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleData, K2Node_MakeStruct_FormatArgumentData1) == 0x0000A8, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleData::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleData, CallFunc_GetAchievedCount_OutTotalAchievedCount) == 0x0000E8, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleData::CallFunc_GetAchievedCount_OutTotalAchievedCount' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleData, CallFunc_GetAchievedCount_OutTotalRequiredCount) == 0x0000EC, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleData::CallFunc_GetAchievedCount_OutTotalRequiredCount' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleData, CallFunc_GetAchievedCount_OutAchievedPercent) == 0x0000F0, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleData::CallFunc_GetAchievedCount_OutAchievedPercent' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleData, CallFunc_GetAchievedCount_OutThresholdPercent) == 0x0000F4, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleData::CallFunc_GetAchievedCount_OutThresholdPercent' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleData, K2Node_MakeArray_Array) == 0x0000F8, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleData, Temp_byte_Variable) == 0x000108, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleData::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleData, CallFunc_Format_ReturnValue) == 0x000110, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleData::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleData, Temp_byte_Variable1) == 0x000128, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleData::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateBundleData, K2Node_Select_Default) == 0x000129, "Member 'AthenaChallengeTreeEntry_C_UpdateBundleData::K2Node_Select_Default' has a wrong offset!");

// Function AthenaChallengeTreeEntry.AthenaChallengeTreeEntry_C.UpdateReward
// 0x0028 (0x0028 - 0x0000)
struct AthenaChallengeTreeEntry_C_UpdateReward final
{
public:
	class UFortChallengeBundleInfo*               CallFunc_GetChallengeBundleInfo_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortChallengeBundleInfo*               CallFunc_GetChallengeBundleInfo_ReturnValue1;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItem*                              CallFunc_GetRewardItem_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRewardThresholdAchieved_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItem*                              CallFunc_GetRewardToShow_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeTreeEntry_C_UpdateReward) == 0x000008, "Wrong alignment on AthenaChallengeTreeEntry_C_UpdateReward");
static_assert(sizeof(AthenaChallengeTreeEntry_C_UpdateReward) == 0x000028, "Wrong size on AthenaChallengeTreeEntry_C_UpdateReward");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateReward, CallFunc_GetChallengeBundleInfo_ReturnValue) == 0x000000, "Member 'AthenaChallengeTreeEntry_C_UpdateReward::CallFunc_GetChallengeBundleInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateReward, CallFunc_GetChallengeBundleInfo_ReturnValue1) == 0x000008, "Member 'AthenaChallengeTreeEntry_C_UpdateReward::CallFunc_GetChallengeBundleInfo_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateReward, CallFunc_GetRewardItem_ReturnValue) == 0x000010, "Member 'AthenaChallengeTreeEntry_C_UpdateReward::CallFunc_GetRewardItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateReward, CallFunc_IsRewardThresholdAchieved_ReturnValue) == 0x000018, "Member 'AthenaChallengeTreeEntry_C_UpdateReward::CallFunc_IsRewardThresholdAchieved_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateReward, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'AthenaChallengeTreeEntry_C_UpdateReward::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateReward, CallFunc_Conv_BoolToInt_ReturnValue) == 0x00001C, "Member 'AthenaChallengeTreeEntry_C_UpdateReward::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_UpdateReward, CallFunc_GetRewardToShow_ReturnValue) == 0x000020, "Member 'AthenaChallengeTreeEntry_C_UpdateReward::CallFunc_GetRewardToShow_ReturnValue' has a wrong offset!");

// Function AthenaChallengeTreeEntry.AthenaChallengeTreeEntry_C.GetRewardToShow
// 0x0040 (0x0040 - 0x0000)
struct AthenaChallengeTreeEntry_C_GetRewardToShow final
{
public:
	class UFortItem*                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortChallengeBundleInfo*               CallFunc_GetChallengeBundleInfo_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItem*                              CallFunc_CreateTemporaryItemInstanceBP_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_IsUnlocked_LockedReason;                  // 0x0018(0x0018)()
	bool                                          CallFunc_IsUnlocked_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              CallFunc_GetRewardItem_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeTreeEntry_C_GetRewardToShow) == 0x000008, "Wrong alignment on AthenaChallengeTreeEntry_C_GetRewardToShow");
static_assert(sizeof(AthenaChallengeTreeEntry_C_GetRewardToShow) == 0x000040, "Wrong size on AthenaChallengeTreeEntry_C_GetRewardToShow");
static_assert(offsetof(AthenaChallengeTreeEntry_C_GetRewardToShow, ReturnValue) == 0x000000, "Member 'AthenaChallengeTreeEntry_C_GetRewardToShow::ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_GetRewardToShow, CallFunc_GetChallengeBundleInfo_ReturnValue) == 0x000008, "Member 'AthenaChallengeTreeEntry_C_GetRewardToShow::CallFunc_GetChallengeBundleInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_GetRewardToShow, CallFunc_CreateTemporaryItemInstanceBP_ReturnValue) == 0x000010, "Member 'AthenaChallengeTreeEntry_C_GetRewardToShow::CallFunc_CreateTemporaryItemInstanceBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_GetRewardToShow, CallFunc_IsUnlocked_LockedReason) == 0x000018, "Member 'AthenaChallengeTreeEntry_C_GetRewardToShow::CallFunc_IsUnlocked_LockedReason' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_GetRewardToShow, CallFunc_IsUnlocked_ReturnValue) == 0x000030, "Member 'AthenaChallengeTreeEntry_C_GetRewardToShow::CallFunc_IsUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeTreeEntry_C_GetRewardToShow, CallFunc_GetRewardItem_ReturnValue) == 0x000038, "Member 'AthenaChallengeTreeEntry_C_GetRewardToShow::CallFunc_GetRewardItem_ReturnValue' has a wrong offset!");

}


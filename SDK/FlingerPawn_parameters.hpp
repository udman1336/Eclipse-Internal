#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FlingerPawn

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "ElementalEnum_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function FlingerPawn.FlingerPawn_C.ExecuteUbergraph_FlingerPawn
// 0x14C0 (0x14C0 - 0x0000)
struct FlingerPawn_C_ExecuteUbergraph_FlingerPawn final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0xB];                                        // 0x0005(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam;                // 0x0010(0x0080)(IsPlainOldData, NoDestructor)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam1;               // 0x0090(0x0080)(IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0114(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable1;                             // 0x0124(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable12;                              // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable1;                             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable12;                            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable123;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0174(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue1;                // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable1234;                          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable12;                            // 0x0190(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue12;                    // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue1;     // 0x01A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x01B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue12;          // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CA[0x6];                                      // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAIPawn*                            K2Node_Event_EnemySpawned;                         // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortProjectileBase*                    K2Node_Event_ProjectileThatSpawnedThisEnemy;       // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_ActorWhoAsked;                        // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortProjectileBase*                    K2Node_Event_Projectile;                           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortProjectileBase*                    K2Node_Event_FailedProjectile;                     // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_PushMomentum;                         // 0x01F8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_PushDuration;                         // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_OwningFlinger;                        // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_PawnThatDied;                         // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_StartPos;                             // 0x0218(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_MidPos;                               // 0x0224(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_EndPos;                               // 0x0230(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_LowWall;                              // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_MidWall;                              // 0x023D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_FullWall;                             // 0x023E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_WindowWall;                           // 0x023F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_SpecialAttack;                        // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Swoop1;                               // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Soul_Suck;                            // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Portal1;                              // 0x0243(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Swoop;                                // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_SoulSuckMelee;                        // 0x0245(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Portal;                               // 0x0246(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_247[0x1];                                      // 0x0247(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_BuildingPart;                         // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBTTask_BlueprintBase*                  K2Node_Event_Task;                                 // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_DesiredMoveLocation;                  // 0x0258(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Debug;                                // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Portal_Available_;                    // 0x0265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_SuccessfulHit;                        // 0x0266(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Success;                              // 0x0267(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABuildingActor*                         K2Node_Event_BuildingActor1;                       // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABuildingActor*>                 K2Node_Event_BuildingActorList1;                   // 0x0270(0x0010)(ZeroConstructor, ReferenceParm)
	class ABuildingActor*                         K2Node_Event_BuildingActor;                        // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABuildingActor*>                 K2Node_Event_BuildingActorList;                    // 0x0288(0x0010)(ZeroConstructor, ReferenceParm)
	class AActor*                                 K2Node_Event_BT;                                   // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collide_;                             // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Rift_Portals_C*                      K2Node_DynamicCast_AsB_Rift_Portals;               // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0x3];                                      // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x02B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x02C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue12;        // 0x02CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x02D8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue; // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue12;    // 0x02F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x02FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0308(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0314(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue1; // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0328(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue12; // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0340(0x0030)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_Damage12;                             // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags12;                         // 0x0378(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum12;                           // 0x0398(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_HitInfo12;                            // 0x03A8(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              K2Node_Event_InstigatedBy12;                       // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser12;                       // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext12;                      // 0x0440(0x0018)()
	class FName                                   CallFunc_SetFNameBasedOnHitDirection_NameResult;   // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayLocalAnimMontage_ReturnValue;         // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0468(0x0008)(NoDestructor)
	class UFortAIEncounterInfo*                   CallFunc_GetEncounterInfo_ReturnValue;             // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAIEncounterInfo*                   CallFunc_GetEncounterInfo_ReturnValue1;            // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage1;                              // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484[0x4];                                      // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags1;                          // 0x0488(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum1;                            // 0x04A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B4[0x4];                                      // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_HitInfo1;                             // 0x04B8(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy1;                        // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser1;                        // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext1;                       // 0x0550(0x0018)()
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType1234567;          // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_569[0x7];                                      // 0x0569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters1234567;         // 0x0570(0x00B8)(ContainsInstancedReference)
	struct FHitResult                             CallFunc_GetHitResult_ReturnValue;                 // 0x0628(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_GetHitResult_ReturnValue1;                // 0x06B0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EPhysicalSurface                              CallFunc_GetFortPhysicalSurface_ReturnValue;       // 0x0738(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0739(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x073A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73B[0x1];                                      // 0x073B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x073C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0744(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0750(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x075C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0768(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_774[0x4];                                      // 0x0774(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0788(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0798(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x079C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x07A0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x07AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetImpactPhysicalSurfaceSound_ReturnValue; // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit1;             // 0x07C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap1;          // 0x07C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C2[0x2];                                      // 0x07C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time1;                     // 0x07C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance1;                 // 0x07C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location1;                 // 0x07CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint1;              // 0x07D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal1;                   // 0x07E4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal1;             // 0x07F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7FC[0x4];                                      // 0x07FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat1;                  // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor1;                 // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent1;             // 0x0810(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName1;              // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem1;                  // 0x0820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex1;                // 0x0824(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart1;               // 0x0828(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd1;                 // 0x0834(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0840(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_84C[0x4];                                      // 0x084C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue1;      // 0x0858(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0860(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_864[0x4];                                      // 0x0864(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x0868(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x0888(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_894[0x4];                                      // 0x0894(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x0898(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              K2Node_Event_InstigatedBy;                         // 0x0920(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x0930(0x0018)()
	uint8                                         Pad_948[0x8];                                      // 0x0948(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0950(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit12;            // 0x0980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap12;         // 0x0981(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_982[0x2];                                      // 0x0982(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time12;                    // 0x0984(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance12;                // 0x0988(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location12;                // 0x098C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint12;             // 0x0998(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal12;                  // 0x09A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal12;            // 0x09B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BC[0x4];                                      // 0x09BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat12;                 // 0x09C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor12;                // 0x09C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent12;            // 0x09D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName12;             // 0x09D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem12;                 // 0x09E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex12;               // 0x09E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart12;              // 0x09E8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd12;                // 0x09F4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0A00(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0A0C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0A18(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A24[0x4];                                      // 0x0A24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue12;     // 0x0A28(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType123456;           // 0x0A30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A31[0x7];                                      // 0x0A31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters123456;          // 0x0A38(0x00B8)(ContainsInstancedReference)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType12345;            // 0x0AF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AF1[0x7];                                      // 0x0AF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters12345;           // 0x0AF8(0x00B8)(ContainsInstancedReference)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0BB0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue1;        // 0x0BB8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType1234;             // 0x0BC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC1[0x7];                                      // 0x0BC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters1234;            // 0x0BC8(0x00B8)(ContainsInstancedReference)
	class UMaterialInstanceDynamic*               CallFunc_GetPawnMID_ReturnValue;                   // 0x0C80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryActivateAbilitiesByTag_ReturnValue;    // 0x0C88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0C89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x0C8A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0C8B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C8C[0x4];                                      // 0x0C8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0C90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVisualEffectQuality_ReturnValue;       // 0x0C98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0C9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue123;                   // 0x0C9D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1234;                  // 0x0C9E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue12345;                 // 0x0C9F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0CA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue123456;                // 0x0CA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA2[0x2];                                      // 0x0CA2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0CA4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0CB0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0CBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue12;       // 0x0CC0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0CC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1234567;               // 0x0CCC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CCD[0x3];                                      // 0x0CCD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0CD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD4[0x4];                                      // 0x0CD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue123;      // 0x0CD8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0CE0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue12345678;              // 0x0CEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CED[0x3];                                      // 0x0CED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue1;       // 0x0CF0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0CFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x0D00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue1;           // 0x0D04(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0D10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin1;               // 0x0D14(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent1;            // 0x0D20(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius1;         // 0x0D2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0D30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue12;          // 0x0D34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue123;         // 0x0D38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0D3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue12;      // 0x0D40(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue12;        // 0x0D4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue1;                       // 0x0D50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue123;       // 0x0D54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1234;        // 0x0D58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5C[0x4];                                      // 0x0D5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam12;              // 0x0D60(0x0080)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Lerp_ReturnValue1;                        // 0x0DE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE4[0x4];                                      // 0x0DE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FParticleSysParam>              K2Node_MakeArray_Array;                            // 0x0DE8(0x0010)(ZeroConstructor, ReferenceParm)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1234;      // 0x0DF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue12345;       // 0x0DFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue1;                      // 0x0E00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x0E04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E05[0x3];                                      // 0x0E05(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue12345;     // 0x0E08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0E0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E0D[0x3];                                      // 0x0E0D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam123;             // 0x0E10(0x0080)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0E90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E91[0x7];                                      // 0x0E91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FParticleSysParam>              K2Node_MakeArray_Array1;                           // 0x0E98(0x0010)(ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue123;   // 0x0EA8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue123;     // 0x0EB4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue1234;     // 0x0EC0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue12;                      // 0x0EC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue123456789;             // 0x0ECC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ECD[0x3];                                      // 0x0ECD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable123;                           // 0x0ED0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_AddComponent_ReturnValue;                 // 0x0F00(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0F08(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue12345678910;           // 0x0F90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue123;         // 0x0F91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F92[0x2];                                      // 0x0F92(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue12;          // 0x0F94(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue1;    // 0x0FA0(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue123;         // 0x0FB0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue12;   // 0x0FBC(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FCC[0x4];                                      // 0x0FCC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0FD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0FD8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0FE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0FE8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0FF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0FF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FF5[0x3];                                      // 0x0FF5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0FF8(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x1080(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_108C[0x4];                                     // 0x108C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x1090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x1098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1099[0x3];                                     // 0x1099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue123;                     // 0x109C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x10A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x10A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A2[0x2];                                     // 0x10A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x10A4(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue123;       // 0x10B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x10BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable1234;                          // 0x10C8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x10D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x10DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x10E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x10E4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue1;                      // 0x10F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1234;      // 0x10FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue1234;    // 0x1108(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue123456;    // 0x1114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x1118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x111C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x1120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x1124(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable12345;                         // 0x1130(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue12;                     // 0x1140(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x114C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X12;                          // 0x1158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y12;                          // 0x115C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z12;                          // 0x1160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x1164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1165[0x3];                                     // 0x1165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x1168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType123;              // 0x116C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_116D[0x3];                                     // 0x116D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters123;             // 0x1170(0x00B8)(ContainsInstancedReference)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x1228(0x000C)(IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x1234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1235[0x3];                                     // 0x1235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x1238(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x1244(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select1_Default;                            // 0x1250(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select12_Default;                           // 0x1260(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select123_Default;                          // 0x1270(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType12;               // 0x1280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1281[0x7];                                     // 0x1281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters12;              // 0x1288(0x00B8)(ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue1234567891011;         // 0x1340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue123456789101112;       // 0x1341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType1;                // 0x1342(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1343[0x5];                                     // 0x1343(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters1;               // 0x1348(0x00B8)(ContainsInstancedReference)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType;                 // 0x1400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1401[0x7];                                     // 0x1401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters;                // 0x1408(0x00B8)(ContainsInstancedReference)
};
static_assert(alignof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn) == 0x000010, "Wrong alignment on FlingerPawn_C_ExecuteUbergraph_FlingerPawn");
static_assert(sizeof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn) == 0x0014C0, "Wrong size on FlingerPawn_C_ExecuteUbergraph_FlingerPawn");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, EntryPoint) == 0x000000, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::EntryPoint' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, Temp_bool_Variable) == 0x000004, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_MakeStruct_ParticleSysParam) == 0x000010, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_MakeStruct_ParticleSysParam' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_MakeStruct_ParticleSysParam1) == 0x000090, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_MakeStruct_ParticleSysParam1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, Temp_bool_Variable1) == 0x000110, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_HasAuthority_ReturnValue) == 0x000111, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, Temp_struct_Variable) == 0x000114, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, Temp_struct_Variable1) == 0x000124, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, Temp_float_Variable) == 0x000134, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000138, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, Temp_bool_Variable12) == 0x000139, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::Temp_bool_Variable12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, Temp_object_Variable) == 0x000140, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, Temp_object_Variable1) == 0x000148, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, Temp_object_Variable12) == 0x000150, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::Temp_object_Variable12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_IsDedicatedServer_ReturnValue) == 0x000158, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, Temp_object_Variable123) == 0x000160, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::Temp_object_Variable123' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000168, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_IsValid_ReturnValue) == 0x000170, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000174, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_HasAuthority_ReturnValue1) == 0x000180, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_HasAuthority_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, Temp_object_Variable1234) == 0x000188, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::Temp_object_Variable1234' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, Temp_struct_Variable12) == 0x000190, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::Temp_struct_Variable12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, Temp_bool_Has_Been_Initd_Variable) == 0x0001A0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, Temp_bool_IsClosed_Variable) == 0x0001A1, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_IsValid_ReturnValue1) == 0x0001A2, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_IsValid_ReturnValue12) == 0x0001A3, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_IsValid_ReturnValue12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, Temp_byte_Variable) == 0x0001A4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_K2_GetComponentLocation_ReturnValue1) == 0x0001A8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_K2_GetComponentLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_K2_GetComponentScale_ReturnValue) == 0x0001B4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0001C0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_IsDedicatedServer_ReturnValue1) == 0x0001C8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_IsDedicatedServer_ReturnValue12) == 0x0001C9, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_IsDedicatedServer_ReturnValue12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_EnemySpawned) == 0x0001D0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_EnemySpawned' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_ProjectileThatSpawnedThisEnemy) == 0x0001D8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_ProjectileThatSpawnedThisEnemy' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_ActorWhoAsked) == 0x0001E0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_ActorWhoAsked' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Projectile) == 0x0001E8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Projectile' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_FailedProjectile) == 0x0001F0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_FailedProjectile' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_PushMomentum) == 0x0001F8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_PushMomentum' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_PushDuration) == 0x000204, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_PushDuration' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_OwningFlinger) == 0x000208, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_OwningFlinger' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_PawnThatDied) == 0x000210, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_PawnThatDied' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_StartPos) == 0x000218, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_StartPos' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_MidPos) == 0x000224, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_MidPos' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_EndPos) == 0x000230, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_EndPos' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_LowWall) == 0x00023C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_LowWall' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_MidWall) == 0x00023D, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_MidWall' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_FullWall) == 0x00023E, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_FullWall' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_WindowWall) == 0x00023F, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_WindowWall' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_SpecialAttack) == 0x000240, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_SpecialAttack' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Swoop1) == 0x000241, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Swoop1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Soul_Suck) == 0x000242, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Soul_Suck' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Portal1) == 0x000243, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Portal1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Swoop) == 0x000244, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Swoop' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_SoulSuckMelee) == 0x000245, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_SoulSuckMelee' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Portal) == 0x000246, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Portal' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_BuildingPart) == 0x000248, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_BuildingPart' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Task) == 0x000250, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Task' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_DesiredMoveLocation) == 0x000258, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_DesiredMoveLocation' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Debug) == 0x000264, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Debug' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Portal_Available_) == 0x000265, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Portal_Available_' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_SuccessfulHit) == 0x000266, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_SuccessfulHit' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Success) == 0x000267, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Success' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_BuildingActor1) == 0x000268, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_BuildingActor1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_BuildingActorList1) == 0x000270, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_BuildingActorList1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_BuildingActor) == 0x000280, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_BuildingActor' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_BuildingActorList) == 0x000288, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_BuildingActorList' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_BT) == 0x000298, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_BT' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Collide_) == 0x0002A0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Collide_' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_DynamicCast_AsB_Rift_Portals) == 0x0002A8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_DynamicCast_AsB_Rift_Portals' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_DynamicCast_bSuccess) == 0x0002B0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0002B4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x0002C0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_K2_GetActorLocation_ReturnValue12) == 0x0002CC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_K2_GetActorLocation_ReturnValue12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0002D8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue) == 0x0002E8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_K2_GetComponentLocation_ReturnValue12) == 0x0002F0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_K2_GetComponentLocation_ReturnValue12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0002FC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000308, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Normal_ReturnValue) == 0x000314, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue1) == 0x000320, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000328, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue12) == 0x000338, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_MakeTransform_ReturnValue) == 0x000340, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Damage12) == 0x000370, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Damage12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_DamageTags12) == 0x000378, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_DamageTags12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Momentum12) == 0x000398, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Momentum12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_HitInfo12) == 0x0003A8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_HitInfo12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_InstigatedBy12) == 0x000430, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_InstigatedBy12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_DamageCauser12) == 0x000438, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_DamageCauser12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_EffectContext12) == 0x000440, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_EffectContext12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_SetFNameBasedOnHitDirection_NameResult) == 0x000458, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_SetFNameBasedOnHitDirection_NameResult' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_PlayLocalAnimMontage_ReturnValue) == 0x000460, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_PlayLocalAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_K2_SetTimer_ReturnValue) == 0x000468, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetEncounterInfo_ReturnValue) == 0x000470, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetEncounterInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetEncounterInfo_ReturnValue1) == 0x000478, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetEncounterInfo_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Damage1) == 0x000480, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Damage1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_DamageTags1) == 0x000488, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_DamageTags1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Momentum1) == 0x0004A8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Momentum1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_HitInfo1) == 0x0004B8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_HitInfo1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_InstigatedBy1) == 0x000540, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_InstigatedBy1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_DamageCauser1) == 0x000548, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_DamageCauser1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_EffectContext1) == 0x000550, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_EffectContext1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_GameplayCueEvent_EventType1234567) == 0x000568, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_GameplayCueEvent_EventType1234567' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_GameplayCueEvent_Parameters1234567) == 0x000570, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_GameplayCueEvent_Parameters1234567' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetHitResult_ReturnValue) == 0x000628, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetHitResult_ReturnValue1) == 0x0006B0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetHitResult_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetFortPhysicalSurface_ReturnValue) == 0x000738, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetFortPhysicalSurface_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_bBlockingHit) == 0x000739, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_bInitialOverlap) == 0x00073A, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_Time) == 0x00073C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_Distance) == 0x000740, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_Location) == 0x000744, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_ImpactPoint) == 0x000750, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_Normal) == 0x00075C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_ImpactNormal) == 0x000768, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_PhysMat) == 0x000778, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_HitActor) == 0x000780, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_HitComponent) == 0x000788, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_HitBoneName) == 0x000790, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_HitItem) == 0x000798, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_FaceIndex) == 0x00079C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_TraceStart) == 0x0007A0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_TraceEnd) == 0x0007AC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetImpactPhysicalSurfaceSound_ReturnValue) == 0x0007B8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetImpactPhysicalSurfaceSound_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_bBlockingHit1) == 0x0007C0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_bBlockingHit1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_bInitialOverlap1) == 0x0007C1, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_bInitialOverlap1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_Time1) == 0x0007C4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_Time1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_Distance1) == 0x0007C8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_Distance1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_Location1) == 0x0007CC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_Location1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_ImpactPoint1) == 0x0007D8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_ImpactPoint1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_Normal1) == 0x0007E4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_Normal1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_ImpactNormal1) == 0x0007F0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_ImpactNormal1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_PhysMat1) == 0x000800, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_PhysMat1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_HitActor1) == 0x000808, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_HitActor1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_HitComponent1) == 0x000810, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_HitComponent1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_HitBoneName1) == 0x000818, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_HitBoneName1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_HitItem1) == 0x000820, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_HitItem1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_FaceIndex1) == 0x000824, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_FaceIndex1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_TraceStart1) == 0x000828, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_TraceStart1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_TraceEnd1) == 0x000834, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_TraceEnd1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_MakeRotFromX_ReturnValue) == 0x000840, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Select_Default) == 0x000850, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_SpawnEmitterAtLocation_ReturnValue1) == 0x000858, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_SpawnEmitterAtLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Damage) == 0x000860, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_DamageTags) == 0x000868, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_Momentum) == 0x000888, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_HitInfo) == 0x000898, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_InstigatedBy) == 0x000920, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_DamageCauser) == 0x000928, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Event_EffectContext) == 0x000930, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetSocketTransform_ReturnValue) == 0x000950, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_bBlockingHit12) == 0x000980, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_bBlockingHit12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_bInitialOverlap12) == 0x000981, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_bInitialOverlap12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_Time12) == 0x000984, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_Time12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_Distance12) == 0x000988, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_Distance12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_Location12) == 0x00098C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_Location12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_ImpactPoint12) == 0x000998, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_ImpactPoint12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_Normal12) == 0x0009A4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_Normal12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_ImpactNormal12) == 0x0009B0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_ImpactNormal12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_PhysMat12) == 0x0009C0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_PhysMat12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_HitActor12) == 0x0009C8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_HitActor12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_HitComponent12) == 0x0009D0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_HitComponent12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_HitBoneName12) == 0x0009D8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_HitBoneName12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_HitItem12) == 0x0009E0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_HitItem12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_FaceIndex12) == 0x0009E4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_FaceIndex12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_TraceStart12) == 0x0009E8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_TraceStart12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakHitResult_TraceEnd12) == 0x0009F4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakHitResult_TraceEnd12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakTransform_Location) == 0x000A00, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakTransform_Rotation) == 0x000A0C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakTransform_Scale) == 0x000A18, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_SpawnEmitterAtLocation_ReturnValue12) == 0x000A28, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_SpawnEmitterAtLocation_ReturnValue12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_GameplayCueEvent_EventType123456) == 0x000A30, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_GameplayCueEvent_EventType123456' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_GameplayCueEvent_Parameters123456) == 0x000A38, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_GameplayCueEvent_Parameters123456' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_GameplayCueEvent_EventType12345) == 0x000AF0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_GameplayCueEvent_EventType12345' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_GameplayCueEvent_Parameters12345) == 0x000AF8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_GameplayCueEvent_Parameters12345' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000BB0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_SpawnEmitterAttached_ReturnValue1) == 0x000BB8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_SpawnEmitterAttached_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_GameplayCueEvent_EventType1234) == 0x000BC0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_GameplayCueEvent_EventType1234' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_GameplayCueEvent_Parameters1234) == 0x000BC8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_GameplayCueEvent_Parameters1234' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetPawnMID_ReturnValue) == 0x000C80, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetPawnMID_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_TryActivateAbilitiesByTag_ReturnValue) == 0x000C88, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_TryActivateAbilitiesByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Not_PreBool_ReturnValue) == 0x000C89, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Not_PreBool_ReturnValue1) == 0x000C8A, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BooleanAND_ReturnValue) == 0x000C8B, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetGameUserSettings_ReturnValue) == 0x000C90, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetVisualEffectQuality_ReturnValue) == 0x000C98, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetVisualEffectQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000C9C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_IsValid_ReturnValue123) == 0x000C9D, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_IsValid_ReturnValue123' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_IsValid_ReturnValue1234) == 0x000C9E, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_IsValid_ReturnValue1234' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_IsValid_ReturnValue12345) == 0x000C9F, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_IsValid_ReturnValue12345' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_SwitchInteger_CmpSuccess) == 0x000CA0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_IsValid_ReturnValue123456) == 0x000CA1, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_IsValid_ReturnValue123456' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetComponentBounds_Origin) == 0x000CA4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetComponentBounds_BoxExtent) == 0x000CB0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetComponentBounds_SphereRadius) == 0x000CBC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_SpawnEmitterAttached_ReturnValue12) == 0x000CC0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_SpawnEmitterAttached_ReturnValue12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000CC8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_IsValid_ReturnValue1234567) == 0x000CCC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_IsValid_ReturnValue1234567' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000CD0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_SpawnEmitterAttached_ReturnValue123) == 0x000CD8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_SpawnEmitterAttached_ReturnValue123' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetSocketLocation_ReturnValue) == 0x000CE0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_IsValid_ReturnValue12345678) == 0x000CEC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_IsValid_ReturnValue12345678' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Subtract_VectorVector_ReturnValue1) == 0x000CF0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Subtract_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_VSize_ReturnValue) == 0x000CFC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x000D00, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetSocketLocation_ReturnValue1) == 0x000D04, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetSocketLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Lerp_ReturnValue) == 0x000D10, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetComponentBounds_Origin1) == 0x000D14, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetComponentBounds_Origin1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetComponentBounds_BoxExtent1) == 0x000D20, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetComponentBounds_BoxExtent1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetComponentBounds_SphereRadius1) == 0x000D2C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetComponentBounds_SphereRadius1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000D30, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Divide_FloatFloat_ReturnValue12) == 0x000D34, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Divide_FloatFloat_ReturnValue12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Divide_FloatFloat_ReturnValue123) == 0x000D38, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Divide_FloatFloat_ReturnValue123' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_FClamp_ReturnValue) == 0x000D3C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Subtract_VectorVector_ReturnValue12) == 0x000D40, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Subtract_VectorVector_ReturnValue12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Multiply_FloatFloat_ReturnValue12) == 0x000D4C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Multiply_FloatFloat_ReturnValue12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_VSize_ReturnValue1) == 0x000D50, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_VSize_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Multiply_FloatFloat_ReturnValue123) == 0x000D54, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Multiply_FloatFloat_ReturnValue123' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Divide_FloatFloat_ReturnValue1234) == 0x000D58, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Divide_FloatFloat_ReturnValue1234' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_MakeStruct_ParticleSysParam12) == 0x000D60, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_MakeStruct_ParticleSysParam12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Lerp_ReturnValue1) == 0x000DE0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Lerp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_MakeArray_Array) == 0x000DE8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Multiply_FloatFloat_ReturnValue1234) == 0x000DF8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Multiply_FloatFloat_ReturnValue1234' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Divide_FloatFloat_ReturnValue12345) == 0x000DFC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Divide_FloatFloat_ReturnValue12345' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_FClamp_ReturnValue1) == 0x000E00, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_FClamp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_DoesSocketExist_ReturnValue) == 0x000E04, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Multiply_FloatFloat_ReturnValue12345) == 0x000E08, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Multiply_FloatFloat_ReturnValue12345' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BooleanOR_ReturnValue) == 0x000E0C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_MakeStruct_ParticleSysParam123) == 0x000E10, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_MakeStruct_ParticleSysParam123' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BooleanAND_ReturnValue1) == 0x000E90, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_MakeArray_Array1) == 0x000E98, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_K2_GetComponentLocation_ReturnValue123) == 0x000EA8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_K2_GetComponentLocation_ReturnValue123' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Subtract_VectorVector_ReturnValue123) == 0x000EB4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Subtract_VectorVector_ReturnValue123' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_SpawnEmitterAttached_ReturnValue1234) == 0x000EC0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_SpawnEmitterAttached_ReturnValue1234' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_VSize_ReturnValue12) == 0x000EC8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_VSize_ReturnValue12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_IsValid_ReturnValue123456789) == 0x000ECC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_IsValid_ReturnValue123456789' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, Temp_struct_Variable123) == 0x000ED0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::Temp_struct_Variable123' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_AddComponent_ReturnValue) == 0x000F00, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000F08, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_IsValid_ReturnValue12345678910) == 0x000F90, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_IsValid_ReturnValue12345678910' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_IsDedicatedServer_ReturnValue123) == 0x000F91, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_IsDedicatedServer_ReturnValue123' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetSocketLocation_ReturnValue12) == 0x000F94, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetSocketLocation_ReturnValue12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Conv_VectorToLinearColor_ReturnValue1) == 0x000FA0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Conv_VectorToLinearColor_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetSocketLocation_ReturnValue123) == 0x000FB0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetSocketLocation_ReturnValue123' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Conv_VectorToLinearColor_ReturnValue12) == 0x000FBC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Conv_VectorToLinearColor_ReturnValue12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000FD0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000FD8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_ComponentBoundEvent_OtherActor) == 0x000FE0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_ComponentBoundEvent_OtherComp) == 0x000FE8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000FF0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_ComponentBoundEvent_bFromSweep) == 0x000FF4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_ComponentBoundEvent_SweepResult) == 0x000FF8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GetVelocity_ReturnValue) == 0x001080, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_DynamicCast_AsFort_Pawn) == 0x001090, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_DynamicCast_bSuccess1) == 0x001098, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_VSize_ReturnValue123) == 0x00109C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_VSize_ReturnValue123' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0010A0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Greater_ByteByte_ReturnValue) == 0x0010A1, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0010A4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_K2_GetActorLocation_ReturnValue123) == 0x0010B0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_K2_GetActorLocation_ReturnValue123' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0010BC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, Temp_struct_Variable1234) == 0x0010C8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::Temp_struct_Variable1234' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakVector_X) == 0x0010D8, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakVector_Y) == 0x0010DC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakVector_Z) == 0x0010E0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_MakeVector_ReturnValue) == 0x0010E4, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Normal_ReturnValue1) == 0x0010F0, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Normal_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_K2_GetActorLocation_ReturnValue1234) == 0x0010FC, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_K2_GetActorLocation_ReturnValue1234' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Subtract_VectorVector_ReturnValue1234) == 0x001108, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Subtract_VectorVector_ReturnValue1234' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Multiply_FloatFloat_ReturnValue123456) == 0x001114, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Multiply_FloatFloat_ReturnValue123456' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakVector_X1) == 0x001118, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakVector_Y1) == 0x00111C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakVector_Z1) == 0x001120, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_MakeVector_ReturnValue1) == 0x001124, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, Temp_struct_Variable12345) == 0x001130, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::Temp_struct_Variable12345' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Normal_ReturnValue12) == 0x001140, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Normal_ReturnValue12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Cross_VectorVector_ReturnValue) == 0x00114C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakVector_X12) == 0x001158, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakVector_X12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakVector_Y12) == 0x00115C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakVector_Y12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_BreakVector_Z12) == 0x001160, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_BreakVector_Z12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x001164, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_SelectFloat_ReturnValue) == 0x001168, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_GameplayCueEvent_EventType123) == 0x00116C, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_GameplayCueEvent_EventType123' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_GameplayCueEvent_Parameters123) == 0x001170, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_GameplayCueEvent_Parameters123' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_MakeRotator_ReturnValue) == 0x001228, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_SwitchEnum_CmpSuccess) == 0x001234, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x001238, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x001244, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Select1_Default) == 0x001250, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Select12_Default) == 0x001260, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Select12_Default' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_Select123_Default) == 0x001270, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_Select123_Default' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_GameplayCueEvent_EventType12) == 0x001280, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_GameplayCueEvent_EventType12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_GameplayCueEvent_Parameters12) == 0x001288, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_GameplayCueEvent_Parameters12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_IsValid_ReturnValue1234567891011) == 0x001340, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_IsValid_ReturnValue1234567891011' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, CallFunc_IsValid_ReturnValue123456789101112) == 0x001341, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::CallFunc_IsValid_ReturnValue123456789101112' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_GameplayCueEvent_EventType1) == 0x001342, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_GameplayCueEvent_EventType1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_GameplayCueEvent_Parameters1) == 0x001348, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_GameplayCueEvent_Parameters1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_GameplayCueEvent_EventType) == 0x001400, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_GameplayCueEvent_EventType' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ExecuteUbergraph_FlingerPawn, K2Node_GameplayCueEvent_Parameters) == 0x001408, "Member 'FlingerPawn_C_ExecuteUbergraph_FlingerPawn::K2Node_GameplayCueEvent_Parameters' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.GameplayCue.Damage.Shielded
// 0x00C0 (0x00C0 - 0x0000)
struct FlingerPawn_C_GameplayCue_Damage_Shielded final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(FlingerPawn_C_GameplayCue_Damage_Shielded) == 0x000008, "Wrong alignment on FlingerPawn_C_GameplayCue_Damage_Shielded");
static_assert(sizeof(FlingerPawn_C_GameplayCue_Damage_Shielded) == 0x0000C0, "Wrong size on FlingerPawn_C_GameplayCue_Damage_Shielded");
static_assert(offsetof(FlingerPawn_C_GameplayCue_Damage_Shielded, EventType) == 0x000000, "Member 'FlingerPawn_C_GameplayCue_Damage_Shielded::EventType' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_GameplayCue_Damage_Shielded, Parameters) == 0x000008, "Member 'FlingerPawn_C_GameplayCue_Damage_Shielded::Parameters' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.GameplayCue.Shield.Destroyed
// 0x00C0 (0x00C0 - 0x0000)
struct FlingerPawn_C_GameplayCue_Shield_Destroyed final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(FlingerPawn_C_GameplayCue_Shield_Destroyed) == 0x000008, "Wrong alignment on FlingerPawn_C_GameplayCue_Shield_Destroyed");
static_assert(sizeof(FlingerPawn_C_GameplayCue_Shield_Destroyed) == 0x0000C0, "Wrong size on FlingerPawn_C_GameplayCue_Shield_Destroyed");
static_assert(offsetof(FlingerPawn_C_GameplayCue_Shield_Destroyed, EventType) == 0x000000, "Member 'FlingerPawn_C_GameplayCue_Shield_Destroyed::EventType' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_GameplayCue_Shield_Destroyed, Parameters) == 0x000008, "Member 'FlingerPawn_C_GameplayCue_Shield_Destroyed::Parameters' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.GameplayCue.Shield.Reapplied
// 0x00C0 (0x00C0 - 0x0000)
struct FlingerPawn_C_GameplayCue_Shield_Reapplied final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(FlingerPawn_C_GameplayCue_Shield_Reapplied) == 0x000008, "Wrong alignment on FlingerPawn_C_GameplayCue_Shield_Reapplied");
static_assert(sizeof(FlingerPawn_C_GameplayCue_Shield_Reapplied) == 0x0000C0, "Wrong size on FlingerPawn_C_GameplayCue_Shield_Reapplied");
static_assert(offsetof(FlingerPawn_C_GameplayCue_Shield_Reapplied, EventType) == 0x000000, "Member 'FlingerPawn_C_GameplayCue_Shield_Reapplied::EventType' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_GameplayCue_Shield_Reapplied, Parameters) == 0x000008, "Member 'FlingerPawn_C_GameplayCue_Shield_Reapplied::Parameters' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.GameplayCue.GameplayModifiers.OnLowHealth.Enrage
// 0x00C0 (0x00C0 - 0x0000)
struct FlingerPawn_C_GameplayCue_GameplayModifiers_OnLowHealth_Enrage final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(FlingerPawn_C_GameplayCue_GameplayModifiers_OnLowHealth_Enrage) == 0x000008, "Wrong alignment on FlingerPawn_C_GameplayCue_GameplayModifiers_OnLowHealth_Enrage");
static_assert(sizeof(FlingerPawn_C_GameplayCue_GameplayModifiers_OnLowHealth_Enrage) == 0x0000C0, "Wrong size on FlingerPawn_C_GameplayCue_GameplayModifiers_OnLowHealth_Enrage");
static_assert(offsetof(FlingerPawn_C_GameplayCue_GameplayModifiers_OnLowHealth_Enrage, EventType) == 0x000000, "Member 'FlingerPawn_C_GameplayCue_GameplayModifiers_OnLowHealth_Enrage::EventType' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_GameplayCue_GameplayModifiers_OnLowHealth_Enrage, Parameters) == 0x000008, "Member 'FlingerPawn_C_GameplayCue_GameplayModifiers_OnLowHealth_Enrage::Parameters' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct FlingerPawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(FlingerPawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on FlingerPawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(FlingerPawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on FlingerPawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(FlingerPawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'FlingerPawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'FlingerPawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'FlingerPawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'FlingerPawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'FlingerPawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'FlingerPawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.GameplayCue.NPC.Flinger.Ranged.Grab.NPC
// 0x00C0 (0x00C0 - 0x0000)
struct FlingerPawn_C_GameplayCue_NPC_Flinger_Ranged_Grab_NPC final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(FlingerPawn_C_GameplayCue_NPC_Flinger_Ranged_Grab_NPC) == 0x000008, "Wrong alignment on FlingerPawn_C_GameplayCue_NPC_Flinger_Ranged_Grab_NPC");
static_assert(sizeof(FlingerPawn_C_GameplayCue_NPC_Flinger_Ranged_Grab_NPC) == 0x0000C0, "Wrong size on FlingerPawn_C_GameplayCue_NPC_Flinger_Ranged_Grab_NPC");
static_assert(offsetof(FlingerPawn_C_GameplayCue_NPC_Flinger_Ranged_Grab_NPC, EventType) == 0x000000, "Member 'FlingerPawn_C_GameplayCue_NPC_Flinger_Ranged_Grab_NPC::EventType' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_GameplayCue_NPC_Flinger_Ranged_Grab_NPC, Parameters) == 0x000008, "Member 'FlingerPawn_C_GameplayCue_NPC_Flinger_Ranged_Grab_NPC::Parameters' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.GameplayCue.NPC.Ranged.Throw
// 0x00C0 (0x00C0 - 0x0000)
struct FlingerPawn_C_GameplayCue_NPC_Ranged_Throw final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(FlingerPawn_C_GameplayCue_NPC_Ranged_Throw) == 0x000008, "Wrong alignment on FlingerPawn_C_GameplayCue_NPC_Ranged_Throw");
static_assert(sizeof(FlingerPawn_C_GameplayCue_NPC_Ranged_Throw) == 0x0000C0, "Wrong size on FlingerPawn_C_GameplayCue_NPC_Ranged_Throw");
static_assert(offsetof(FlingerPawn_C_GameplayCue_NPC_Ranged_Throw, EventType) == 0x000000, "Member 'FlingerPawn_C_GameplayCue_NPC_Ranged_Throw::EventType' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_GameplayCue_NPC_Ranged_Throw, Parameters) == 0x000008, "Member 'FlingerPawn_C_GameplayCue_NPC_Ranged_Throw::Parameters' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.GameplayCue.NPC.Ranged.Grab
// 0x00C0 (0x00C0 - 0x0000)
struct FlingerPawn_C_GameplayCue_NPC_Ranged_Grab final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(FlingerPawn_C_GameplayCue_NPC_Ranged_Grab) == 0x000008, "Wrong alignment on FlingerPawn_C_GameplayCue_NPC_Ranged_Grab");
static_assert(sizeof(FlingerPawn_C_GameplayCue_NPC_Ranged_Grab) == 0x0000C0, "Wrong size on FlingerPawn_C_GameplayCue_NPC_Ranged_Grab");
static_assert(offsetof(FlingerPawn_C_GameplayCue_NPC_Ranged_Grab, EventType) == 0x000000, "Member 'FlingerPawn_C_GameplayCue_NPC_Ranged_Grab::EventType' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_GameplayCue_NPC_Ranged_Grab, Parameters) == 0x000008, "Member 'FlingerPawn_C_GameplayCue_NPC_Ranged_Grab::Parameters' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.OnDeathPlayEffects
// 0x00E8 (0x00E8 - 0x0000)
struct FlingerPawn_C_OnDeathPlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitInfo;                                           // 0x0038(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              InstigatedBy;                                      // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00D0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(FlingerPawn_C_OnDeathPlayEffects) == 0x000008, "Wrong alignment on FlingerPawn_C_OnDeathPlayEffects");
static_assert(sizeof(FlingerPawn_C_OnDeathPlayEffects) == 0x0000E8, "Wrong size on FlingerPawn_C_OnDeathPlayEffects");
static_assert(offsetof(FlingerPawn_C_OnDeathPlayEffects, Damage) == 0x000000, "Member 'FlingerPawn_C_OnDeathPlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDeathPlayEffects, DamageTags) == 0x000008, "Member 'FlingerPawn_C_OnDeathPlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDeathPlayEffects, Momentum) == 0x000028, "Member 'FlingerPawn_C_OnDeathPlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDeathPlayEffects, HitInfo) == 0x000038, "Member 'FlingerPawn_C_OnDeathPlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDeathPlayEffects, InstigatedBy) == 0x0000C0, "Member 'FlingerPawn_C_OnDeathPlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDeathPlayEffects, DamageCauser) == 0x0000C8, "Member 'FlingerPawn_C_OnDeathPlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDeathPlayEffects, EffectContext) == 0x0000D0, "Member 'FlingerPawn_C_OnDeathPlayEffects::EffectContext' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.GameplayCue.Impact.Physical.Creature
// 0x00C0 (0x00C0 - 0x0000)
struct FlingerPawn_C_GameplayCue_Impact_Physical_Creature final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(FlingerPawn_C_GameplayCue_Impact_Physical_Creature) == 0x000008, "Wrong alignment on FlingerPawn_C_GameplayCue_Impact_Physical_Creature");
static_assert(sizeof(FlingerPawn_C_GameplayCue_Impact_Physical_Creature) == 0x0000C0, "Wrong size on FlingerPawn_C_GameplayCue_Impact_Physical_Creature");
static_assert(offsetof(FlingerPawn_C_GameplayCue_Impact_Physical_Creature, EventType) == 0x000000, "Member 'FlingerPawn_C_GameplayCue_Impact_Physical_Creature::EventType' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_GameplayCue_Impact_Physical_Creature, Parameters) == 0x000008, "Member 'FlingerPawn_C_GameplayCue_Impact_Physical_Creature::Parameters' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.OnDeathServer
// 0x00E8 (0x00E8 - 0x0000)
struct FlingerPawn_C_OnDeathServer final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitInfo;                                           // 0x0038(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00D0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(FlingerPawn_C_OnDeathServer) == 0x000008, "Wrong alignment on FlingerPawn_C_OnDeathServer");
static_assert(sizeof(FlingerPawn_C_OnDeathServer) == 0x0000E8, "Wrong size on FlingerPawn_C_OnDeathServer");
static_assert(offsetof(FlingerPawn_C_OnDeathServer, Damage) == 0x000000, "Member 'FlingerPawn_C_OnDeathServer::Damage' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDeathServer, DamageTags) == 0x000008, "Member 'FlingerPawn_C_OnDeathServer::DamageTags' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDeathServer, Momentum) == 0x000028, "Member 'FlingerPawn_C_OnDeathServer::Momentum' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDeathServer, HitInfo) == 0x000038, "Member 'FlingerPawn_C_OnDeathServer::HitInfo' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDeathServer, InstigatedBy) == 0x0000C0, "Member 'FlingerPawn_C_OnDeathServer::InstigatedBy' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDeathServer, DamageCauser) == 0x0000C8, "Member 'FlingerPawn_C_OnDeathServer::DamageCauser' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDeathServer, EffectContext) == 0x0000D0, "Member 'FlingerPawn_C_OnDeathServer::EffectContext' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.OnDamagePlayEffects
// 0x00E8 (0x00E8 - 0x0000)
struct FlingerPawn_C_OnDamagePlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitInfo;                                           // 0x0038(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              InstigatedBy;                                      // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00D0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(FlingerPawn_C_OnDamagePlayEffects) == 0x000008, "Wrong alignment on FlingerPawn_C_OnDamagePlayEffects");
static_assert(sizeof(FlingerPawn_C_OnDamagePlayEffects) == 0x0000E8, "Wrong size on FlingerPawn_C_OnDamagePlayEffects");
static_assert(offsetof(FlingerPawn_C_OnDamagePlayEffects, Damage) == 0x000000, "Member 'FlingerPawn_C_OnDamagePlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDamagePlayEffects, DamageTags) == 0x000008, "Member 'FlingerPawn_C_OnDamagePlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDamagePlayEffects, Momentum) == 0x000028, "Member 'FlingerPawn_C_OnDamagePlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDamagePlayEffects, HitInfo) == 0x000038, "Member 'FlingerPawn_C_OnDamagePlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDamagePlayEffects, InstigatedBy) == 0x0000C0, "Member 'FlingerPawn_C_OnDamagePlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDamagePlayEffects, DamageCauser) == 0x0000C8, "Member 'FlingerPawn_C_OnDamagePlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_OnDamagePlayEffects, EffectContext) == 0x0000D0, "Member 'FlingerPawn_C_OnDamagePlayEffects::EffectContext' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.PortalCollision
// 0x0001 (0x0001 - 0x0000)
struct FlingerPawn_C_PortalCollision final
{
public:
	bool                                          Collide_;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_PortalCollision) == 0x000001, "Wrong alignment on FlingerPawn_C_PortalCollision");
static_assert(sizeof(FlingerPawn_C_PortalCollision) == 0x000001, "Wrong size on FlingerPawn_C_PortalCollision");
static_assert(offsetof(FlingerPawn_C_PortalCollision, Collide_) == 0x000000, "Member 'FlingerPawn_C_PortalCollision::Collide_' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.PortalGet
// 0x0020 (0x0020 - 0x0000)
struct FlingerPawn_C_PortalGet final
{
public:
	class ABuildingActor*                         BuildingActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABuildingActor*>                 BuildingActorList;                                 // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class AActor*                                 BT;                                                // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlingerPawn_C_PortalGet) == 0x000008, "Wrong alignment on FlingerPawn_C_PortalGet");
static_assert(sizeof(FlingerPawn_C_PortalGet) == 0x000020, "Wrong size on FlingerPawn_C_PortalGet");
static_assert(offsetof(FlingerPawn_C_PortalGet, BuildingActor) == 0x000000, "Member 'FlingerPawn_C_PortalGet::BuildingActor' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_PortalGet, BuildingActorList) == 0x000008, "Member 'FlingerPawn_C_PortalGet::BuildingActorList' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_PortalGet, BT) == 0x000018, "Member 'FlingerPawn_C_PortalGet::BT' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.PortalAdd
// 0x0018 (0x0018 - 0x0000)
struct FlingerPawn_C_PortalAdd final
{
public:
	class ABuildingActor*                         BuildingActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABuildingActor*>                 BuildingActorList;                                 // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(FlingerPawn_C_PortalAdd) == 0x000008, "Wrong alignment on FlingerPawn_C_PortalAdd");
static_assert(sizeof(FlingerPawn_C_PortalAdd) == 0x000018, "Wrong size on FlingerPawn_C_PortalAdd");
static_assert(offsetof(FlingerPawn_C_PortalAdd, BuildingActor) == 0x000000, "Member 'FlingerPawn_C_PortalAdd::BuildingActor' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_PortalAdd, BuildingActorList) == 0x000008, "Member 'FlingerPawn_C_PortalAdd::BuildingActorList' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.TakerSoulSuckSoundBegin
// 0x0001 (0x0001 - 0x0000)
struct FlingerPawn_C_TakerSoulSuckSoundBegin final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_TakerSoulSuckSoundBegin) == 0x000001, "Wrong alignment on FlingerPawn_C_TakerSoulSuckSoundBegin");
static_assert(sizeof(FlingerPawn_C_TakerSoulSuckSoundBegin) == 0x000001, "Wrong size on FlingerPawn_C_TakerSoulSuckSoundBegin");
static_assert(offsetof(FlingerPawn_C_TakerSoulSuckSoundBegin, Success) == 0x000000, "Member 'FlingerPawn_C_TakerSoulSuckSoundBegin::Success' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.TakerAttackFSM
// 0x0001 (0x0001 - 0x0000)
struct FlingerPawn_C_TakerAttackFSM final
{
public:
	bool                                          SuccessfulHit;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_TakerAttackFSM) == 0x000001, "Wrong alignment on FlingerPawn_C_TakerAttackFSM");
static_assert(sizeof(FlingerPawn_C_TakerAttackFSM) == 0x000001, "Wrong size on FlingerPawn_C_TakerAttackFSM");
static_assert(offsetof(FlingerPawn_C_TakerAttackFSM, SuccessfulHit) == 0x000000, "Member 'FlingerPawn_C_TakerAttackFSM::SuccessfulHit' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.IsTakerWallPortalAvailable
// 0x0001 (0x0001 - 0x0000)
struct FlingerPawn_C_IsTakerWallPortalAvailable final
{
public:
	bool                                          Portal_Available_;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_IsTakerWallPortalAvailable) == 0x000001, "Wrong alignment on FlingerPawn_C_IsTakerWallPortalAvailable");
static_assert(sizeof(FlingerPawn_C_IsTakerWallPortalAvailable) == 0x000001, "Wrong size on FlingerPawn_C_IsTakerWallPortalAvailable");
static_assert(offsetof(FlingerPawn_C_IsTakerWallPortalAvailable, Portal_Available_) == 0x000000, "Member 'FlingerPawn_C_IsTakerWallPortalAvailable::Portal_Available_' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.TakerWallPortalBehavior
// 0x0020 (0x0020 - 0x0000)
struct FlingerPawn_C_TakerWallPortalBehavior final
{
public:
	class AActor*                                 BuildingPart;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBTTask_BlueprintBase*                  Task;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DesiredMoveLocation;                               // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_TakerWallPortalBehavior) == 0x000008, "Wrong alignment on FlingerPawn_C_TakerWallPortalBehavior");
static_assert(sizeof(FlingerPawn_C_TakerWallPortalBehavior) == 0x000020, "Wrong size on FlingerPawn_C_TakerWallPortalBehavior");
static_assert(offsetof(FlingerPawn_C_TakerWallPortalBehavior, BuildingPart) == 0x000000, "Member 'FlingerPawn_C_TakerWallPortalBehavior::BuildingPart' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_TakerWallPortalBehavior, Task) == 0x000008, "Member 'FlingerPawn_C_TakerWallPortalBehavior::Task' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_TakerWallPortalBehavior, DesiredMoveLocation) == 0x000010, "Member 'FlingerPawn_C_TakerWallPortalBehavior::DesiredMoveLocation' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_TakerWallPortalBehavior, Debug) == 0x00001C, "Member 'FlingerPawn_C_TakerWallPortalBehavior::Debug' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.ResetTakerSpecialAttackTimer
// 0x0003 (0x0003 - 0x0000)
struct FlingerPawn_C_ResetTakerSpecialAttackTimer final
{
public:
	bool                                          Swoop;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SoulSuckMelee;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Portal;                                            // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_ResetTakerSpecialAttackTimer) == 0x000001, "Wrong alignment on FlingerPawn_C_ResetTakerSpecialAttackTimer");
static_assert(sizeof(FlingerPawn_C_ResetTakerSpecialAttackTimer) == 0x000003, "Wrong size on FlingerPawn_C_ResetTakerSpecialAttackTimer");
static_assert(offsetof(FlingerPawn_C_ResetTakerSpecialAttackTimer, Swoop) == 0x000000, "Member 'FlingerPawn_C_ResetTakerSpecialAttackTimer::Swoop' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ResetTakerSpecialAttackTimer, SoulSuckMelee) == 0x000001, "Member 'FlingerPawn_C_ResetTakerSpecialAttackTimer::SoulSuckMelee' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_ResetTakerSpecialAttackTimer, Portal) == 0x000002, "Member 'FlingerPawn_C_ResetTakerSpecialAttackTimer::Portal' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.VerifyTakerAttack
// 0x0004 (0x0004 - 0x0000)
struct FlingerPawn_C_VerifyTakerAttack final
{
public:
	bool                                          SpecialAttack;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Swoop;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Soul_Suck;                                         // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Portal;                                            // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_VerifyTakerAttack) == 0x000001, "Wrong alignment on FlingerPawn_C_VerifyTakerAttack");
static_assert(sizeof(FlingerPawn_C_VerifyTakerAttack) == 0x000004, "Wrong size on FlingerPawn_C_VerifyTakerAttack");
static_assert(offsetof(FlingerPawn_C_VerifyTakerAttack, SpecialAttack) == 0x000000, "Member 'FlingerPawn_C_VerifyTakerAttack::SpecialAttack' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_VerifyTakerAttack, Swoop) == 0x000001, "Member 'FlingerPawn_C_VerifyTakerAttack::Swoop' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_VerifyTakerAttack, Soul_Suck) == 0x000002, "Member 'FlingerPawn_C_VerifyTakerAttack::Soul_Suck' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_VerifyTakerAttack, Portal) == 0x000003, "Member 'FlingerPawn_C_VerifyTakerAttack::Portal' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.MantleStart
// 0x0028 (0x0028 - 0x0000)
struct FlingerPawn_C_MantleStart final
{
public:
	struct FVector                                StartPos;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MidPos;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndPos;                                            // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LowWall;                                           // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MidWall;                                           // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          FullWall;                                          // 0x0026(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WindowWall;                                        // 0x0027(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_MantleStart) == 0x000004, "Wrong alignment on FlingerPawn_C_MantleStart");
static_assert(sizeof(FlingerPawn_C_MantleStart) == 0x000028, "Wrong size on FlingerPawn_C_MantleStart");
static_assert(offsetof(FlingerPawn_C_MantleStart, StartPos) == 0x000000, "Member 'FlingerPawn_C_MantleStart::StartPos' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_MantleStart, MidPos) == 0x00000C, "Member 'FlingerPawn_C_MantleStart::MidPos' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_MantleStart, EndPos) == 0x000018, "Member 'FlingerPawn_C_MantleStart::EndPos' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_MantleStart, LowWall) == 0x000024, "Member 'FlingerPawn_C_MantleStart::LowWall' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_MantleStart, MidWall) == 0x000025, "Member 'FlingerPawn_C_MantleStart::MidWall' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_MantleStart, FullWall) == 0x000026, "Member 'FlingerPawn_C_MantleStart::FullWall' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_MantleStart, WindowWall) == 0x000027, "Member 'FlingerPawn_C_MantleStart::WindowWall' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.FlingerEnemyDied
// 0x0008 (0x0008 - 0x0000)
struct FlingerPawn_C_FlingerEnemyDied final
{
public:
	class APawn*                                  PawnThatDied;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlingerPawn_C_FlingerEnemyDied) == 0x000008, "Wrong alignment on FlingerPawn_C_FlingerEnemyDied");
static_assert(sizeof(FlingerPawn_C_FlingerEnemyDied) == 0x000008, "Wrong size on FlingerPawn_C_FlingerEnemyDied");
static_assert(offsetof(FlingerPawn_C_FlingerEnemyDied, PawnThatDied) == 0x000000, "Member 'FlingerPawn_C_FlingerEnemyDied::PawnThatDied' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.AlertEnemySpawnedByFlinger
// 0x0018 (0x0018 - 0x0000)
struct FlingerPawn_C_AlertEnemySpawnedByFlinger final
{
public:
	struct FVector                                PushMomentum_0;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PushDuration_0;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  OwningFlinger;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlingerPawn_C_AlertEnemySpawnedByFlinger) == 0x000008, "Wrong alignment on FlingerPawn_C_AlertEnemySpawnedByFlinger");
static_assert(sizeof(FlingerPawn_C_AlertEnemySpawnedByFlinger) == 0x000018, "Wrong size on FlingerPawn_C_AlertEnemySpawnedByFlinger");
static_assert(offsetof(FlingerPawn_C_AlertEnemySpawnedByFlinger, PushMomentum_0) == 0x000000, "Member 'FlingerPawn_C_AlertEnemySpawnedByFlinger::PushMomentum_0' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_AlertEnemySpawnedByFlinger, PushDuration_0) == 0x00000C, "Member 'FlingerPawn_C_AlertEnemySpawnedByFlinger::PushDuration_0' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_AlertEnemySpawnedByFlinger, OwningFlinger) == 0x000010, "Member 'FlingerPawn_C_AlertEnemySpawnedByFlinger::OwningFlinger' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.FlingerEnemyFailedToSpawn
// 0x0008 (0x0008 - 0x0000)
struct FlingerPawn_C_FlingerEnemyFailedToSpawn final
{
public:
	class AFortProjectileBase*                    FailedProjectile;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlingerPawn_C_FlingerEnemyFailedToSpawn) == 0x000008, "Wrong alignment on FlingerPawn_C_FlingerEnemyFailedToSpawn");
static_assert(sizeof(FlingerPawn_C_FlingerEnemyFailedToSpawn) == 0x000008, "Wrong size on FlingerPawn_C_FlingerEnemyFailedToSpawn");
static_assert(offsetof(FlingerPawn_C_FlingerEnemyFailedToSpawn, FailedProjectile) == 0x000000, "Member 'FlingerPawn_C_FlingerEnemyFailedToSpawn::FailedProjectile' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.FlingerThrewAProjectileContainingAnEnemy
// 0x0008 (0x0008 - 0x0000)
struct FlingerPawn_C_FlingerThrewAProjectileContainingAnEnemy final
{
public:
	class AFortProjectileBase*                    Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlingerPawn_C_FlingerThrewAProjectileContainingAnEnemy) == 0x000008, "Wrong alignment on FlingerPawn_C_FlingerThrewAProjectileContainingAnEnemy");
static_assert(sizeof(FlingerPawn_C_FlingerThrewAProjectileContainingAnEnemy) == 0x000008, "Wrong size on FlingerPawn_C_FlingerThrewAProjectileContainingAnEnemy");
static_assert(offsetof(FlingerPawn_C_FlingerThrewAProjectileContainingAnEnemy, Projectile) == 0x000000, "Member 'FlingerPawn_C_FlingerThrewAProjectileContainingAnEnemy::Projectile' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.CanFlingerSpawnAnEnemy
// 0x0008 (0x0008 - 0x0000)
struct FlingerPawn_C_CanFlingerSpawnAnEnemy final
{
public:
	class AActor*                                 ActorWhoAsked;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlingerPawn_C_CanFlingerSpawnAnEnemy) == 0x000008, "Wrong alignment on FlingerPawn_C_CanFlingerSpawnAnEnemy");
static_assert(sizeof(FlingerPawn_C_CanFlingerSpawnAnEnemy) == 0x000008, "Wrong size on FlingerPawn_C_CanFlingerSpawnAnEnemy");
static_assert(offsetof(FlingerPawn_C_CanFlingerSpawnAnEnemy, ActorWhoAsked) == 0x000000, "Member 'FlingerPawn_C_CanFlingerSpawnAnEnemy::ActorWhoAsked' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.FlingerSpawnedAnEnemy
// 0x0010 (0x0010 - 0x0000)
struct FlingerPawn_C_FlingerSpawnedAnEnemy final
{
public:
	class AFortAIPawn*                            EnemySpawned;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortProjectileBase*                    ProjectileThatSpawnedThisEnemy;                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlingerPawn_C_FlingerSpawnedAnEnemy) == 0x000008, "Wrong alignment on FlingerPawn_C_FlingerSpawnedAnEnemy");
static_assert(sizeof(FlingerPawn_C_FlingerSpawnedAnEnemy) == 0x000010, "Wrong size on FlingerPawn_C_FlingerSpawnedAnEnemy");
static_assert(offsetof(FlingerPawn_C_FlingerSpawnedAnEnemy, EnemySpawned) == 0x000000, "Member 'FlingerPawn_C_FlingerSpawnedAnEnemy::EnemySpawned' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_FlingerSpawnedAnEnemy, ProjectileThatSpawnedThisEnemy) == 0x000008, "Member 'FlingerPawn_C_FlingerSpawnedAnEnemy::ProjectileThatSpawnedThisEnemy' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.UserConstructionScript
// 0x0130 (0x0130 - 0x0000)
struct FlingerPawn_C_UserConstructionScript final
{
public:
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable1;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable12;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable123;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable;                              // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_AddComponent_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0068(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0088(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_AttachTo_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ElementalEnum                                 Temp_byte_Variable;                                // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_113[0x5];                                      // 0x0113(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_UserConstructionScript) == 0x000010, "Wrong alignment on FlingerPawn_C_UserConstructionScript");
static_assert(sizeof(FlingerPawn_C_UserConstructionScript) == 0x000130, "Wrong size on FlingerPawn_C_UserConstructionScript");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, Temp_object_Variable) == 0x000000, "Member 'FlingerPawn_C_UserConstructionScript::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, Temp_object_Variable1) == 0x000008, "Member 'FlingerPawn_C_UserConstructionScript::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, Temp_object_Variable12) == 0x000010, "Member 'FlingerPawn_C_UserConstructionScript::Temp_object_Variable12' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, Temp_object_Variable123) == 0x000018, "Member 'FlingerPawn_C_UserConstructionScript::Temp_object_Variable123' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, Temp_struct_Variable) == 0x000020, "Member 'FlingerPawn_C_UserConstructionScript::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000050, "Member 'FlingerPawn_C_UserConstructionScript::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, CallFunc_GetOwner_ReturnValue) == 0x000058, "Member 'FlingerPawn_C_UserConstructionScript::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000060, "Member 'FlingerPawn_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, CallFunc_GetSocketLocation_ReturnValue) == 0x000068, "Member 'FlingerPawn_C_UserConstructionScript::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000074, "Member 'FlingerPawn_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'FlingerPawn_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000084, "Member 'FlingerPawn_C_UserConstructionScript::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000088, "Member 'FlingerPawn_C_UserConstructionScript::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, CallFunc_K2_AttachTo_ReturnValue) == 0x000110, "Member 'FlingerPawn_C_UserConstructionScript::CallFunc_K2_AttachTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, Temp_byte_Variable) == 0x000111, "Member 'FlingerPawn_C_UserConstructionScript::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000112, "Member 'FlingerPawn_C_UserConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, K2Node_Select_Default) == 0x000118, "Member 'FlingerPawn_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000120, "Member 'FlingerPawn_C_UserConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_UserConstructionScript, CallFunc_BooleanOR_ReturnValue) == 0x000121, "Member 'FlingerPawn_C_UserConstructionScript::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.StopDeathFX
// 0x0002 (0x0002 - 0x0000)
struct FlingerPawn_C_StopDeathFX final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_StopDeathFX) == 0x000001, "Wrong alignment on FlingerPawn_C_StopDeathFX");
static_assert(sizeof(FlingerPawn_C_StopDeathFX) == 0x000002, "Wrong size on FlingerPawn_C_StopDeathFX");
static_assert(offsetof(FlingerPawn_C_StopDeathFX, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'FlingerPawn_C_StopDeathFX::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlingerPawn_C_StopDeathFX, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'FlingerPawn_C_StopDeathFX::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.StopMaterialTimeline
// 0x0001 (0x0001 - 0x0000)
struct FlingerPawn_C_StopMaterialTimeline final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_StopMaterialTimeline) == 0x000001, "Wrong alignment on FlingerPawn_C_StopMaterialTimeline");
static_assert(sizeof(FlingerPawn_C_StopMaterialTimeline) == 0x000001, "Wrong size on FlingerPawn_C_StopMaterialTimeline");
static_assert(offsetof(FlingerPawn_C_StopMaterialTimeline, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'FlingerPawn_C_StopMaterialTimeline::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.OnReceiveSpawnGroup
// 0x0001 (0x0001 - 0x0000)
struct FlingerPawn_C_OnReceiveSpawnGroup final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_OnReceiveSpawnGroup) == 0x000001, "Wrong alignment on FlingerPawn_C_OnReceiveSpawnGroup");
static_assert(sizeof(FlingerPawn_C_OnReceiveSpawnGroup) == 0x000001, "Wrong size on FlingerPawn_C_OnReceiveSpawnGroup");
static_assert(offsetof(FlingerPawn_C_OnReceiveSpawnGroup, ReturnValue) == 0x000000, "Member 'FlingerPawn_C_OnReceiveSpawnGroup::ReturnValue' has a wrong offset!");

// Function FlingerPawn.FlingerPawn_C.IsReadyToReceiveNewSpawnGroup
// 0x0001 (0x0001 - 0x0000)
struct FlingerPawn_C_IsReadyToReceiveNewSpawnGroup final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlingerPawn_C_IsReadyToReceiveNewSpawnGroup) == 0x000001, "Wrong alignment on FlingerPawn_C_IsReadyToReceiveNewSpawnGroup");
static_assert(sizeof(FlingerPawn_C_IsReadyToReceiveNewSpawnGroup) == 0x000001, "Wrong size on FlingerPawn_C_IsReadyToReceiveNewSpawnGroup");
static_assert(offsetof(FlingerPawn_C_IsReadyToReceiveNewSpawnGroup, ReturnValue) == 0x000000, "Member 'FlingerPawn_C_IsReadyToReceiveNewSpawnGroup::ReturnValue' has a wrong offset!");

}


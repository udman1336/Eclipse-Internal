#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LinearTimecode

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct LinearTimecode.DropTimecode
// 0x0028 (0x0028 - 0x0000)
struct FDropTimecode final
{
public:
	int32                                         Hours;                                             // 0x0000(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Minutes;                                           // 0x0004(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Seconds;                                           // 0x0008(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Frame;                                             // 0x000C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Drop;                                              // 0x0010(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FrameRate;                                         // 0x0014(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Clock;                                             // 0x0018(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Color;                                             // 0x001C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Forward;                                           // 0x0020(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NewFrame;                                          // 0x0024(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDropTimecode) == 0x000004, "Wrong alignment on FDropTimecode");
static_assert(sizeof(FDropTimecode) == 0x000028, "Wrong size on FDropTimecode");
static_assert(offsetof(FDropTimecode, Hours) == 0x000000, "Member 'FDropTimecode::Hours' has a wrong offset!");
static_assert(offsetof(FDropTimecode, Minutes) == 0x000004, "Member 'FDropTimecode::Minutes' has a wrong offset!");
static_assert(offsetof(FDropTimecode, Seconds) == 0x000008, "Member 'FDropTimecode::Seconds' has a wrong offset!");
static_assert(offsetof(FDropTimecode, Frame) == 0x00000C, "Member 'FDropTimecode::Frame' has a wrong offset!");
static_assert(offsetof(FDropTimecode, Drop) == 0x000010, "Member 'FDropTimecode::Drop' has a wrong offset!");
static_assert(offsetof(FDropTimecode, FrameRate) == 0x000014, "Member 'FDropTimecode::FrameRate' has a wrong offset!");
static_assert(offsetof(FDropTimecode, Clock) == 0x000018, "Member 'FDropTimecode::Clock' has a wrong offset!");
static_assert(offsetof(FDropTimecode, Color) == 0x00001C, "Member 'FDropTimecode::Color' has a wrong offset!");
static_assert(offsetof(FDropTimecode, Forward) == 0x000020, "Member 'FDropTimecode::Forward' has a wrong offset!");
static_assert(offsetof(FDropTimecode, NewFrame) == 0x000024, "Member 'FDropTimecode::NewFrame' has a wrong offset!");

}


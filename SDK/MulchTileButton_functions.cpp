#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MulchTileButton

#include "Basic.hpp"

#include "MulchTileButton_classes.hpp"
#include "MulchTileButton_parameters.hpp"


namespace SDK
{

// Function MulchTileButton.MulchTileButton_C.ExecuteUbergraph_MulchTileButton
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMulchTileButton_C::ExecuteUbergraph_MulchTileButton(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MulchTileButton_C", "ExecuteUbergraph_MulchTileButton");

	Params::MulchTileButton_C_ExecuteUbergraph_MulchTileButton Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MulchTileButton.MulchTileButton_C.BndEvt__InputActionWidget_K2Node_ComponentBoundEvent_5_OnInputMethodChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bUsingGamepad                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMulchTileButton_C::BndEvt__InputActionWidget_K2Node_ComponentBoundEvent_5_OnInputMethodChanged__DelegateSignature(bool bUsingGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MulchTileButton_C", "BndEvt__InputActionWidget_K2Node_ComponentBoundEvent_5_OnInputMethodChanged__DelegateSignature");

	Params::MulchTileButton_C_BndEvt__InputActionWidget_K2Node_ComponentBoundEvent_5_OnInputMethodChanged__DelegateSignature Parms{};

	Parms.bUsingGamepad = bUsingGamepad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MulchTileButton.MulchTileButton_C.HandleItemChanged_BP
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItem*                        NewItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMulchTileButton_C::HandleItemChanged_BP(class UFortItem* NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MulchTileButton_C", "HandleItemChanged_BP");

	Params::MulchTileButton_C_HandleItemChanged_BP Parms{};

	Parms.NewItem = NewItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MulchTileButton.MulchTileButton_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UMulchTileButton_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MulchTileButton_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MulchTileButton.MulchTileButton_C.BndEvt__PopupMenuAnchor_K2Node_ComponentBoundEvent_0_OnMenuOpenChangedEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bIsOpen                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMulchTileButton_C::BndEvt__PopupMenuAnchor_K2Node_ComponentBoundEvent_0_OnMenuOpenChangedEvent__DelegateSignature(bool bIsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MulchTileButton_C", "BndEvt__PopupMenuAnchor_K2Node_ComponentBoundEvent_0_OnMenuOpenChangedEvent__DelegateSignature");

	Params::MulchTileButton_C_BndEvt__PopupMenuAnchor_K2Node_ComponentBoundEvent_0_OnMenuOpenChangedEvent__DelegateSignature Parms{};

	Parms.bIsOpen = bIsOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MulchTileButton.MulchTileButton_C.UpdateInputActionWrapperVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UMulchTileButton_C::UpdateInputActionWrapperVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MulchTileButton_C", "UpdateInputActionWrapperVisibility");

	UObject::ProcessEvent(Func, nullptr);
}

}


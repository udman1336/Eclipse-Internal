#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LegalInfo

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass LegalInfo.LegalInfo_C
// 0x0040 (0x0430 - 0x03F0)
class ULegalInfo_C final : public UFortActivatablePanel
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03F0(0x0008)(Transient, DuplicateTransient)
	class UCommonBorder*                          BorderTouch;                                       // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      CloseButton;                                       // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  CommonWidgetSwitcher_0;                            // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalTabList_C*                   LegalOptions;                                      // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULightbox_C*                            Lightbox;                                          // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_1;                                         // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Title;                                             // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_LegalInfo(int32 EntryPoint);
	void Close();
	void BndEvt__LegalOptions_K2Node_ComponentBoundEvent_101_OnTabButtonCreated__DelegateSignature(class FName TabId, class UCommonButton* TabButton);
	void BndEvt__CommonWidgetSwitcher_0_K2Node_ComponentBoundEvent_68_OnActiveWidgetChanged__DelegateSignature(class UWidget* ActiveWidget, int32 ActiveWidgetIndex);
	void BndEvt__CloseButton_K2Node_ComponentBoundEvent_34_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void Construct();
	void On_Scroll_Down(bool* Passthrough);
	struct FEventReply On_BorderTouch_MouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LegalInfo_C">();
	}
	static class ULegalInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULegalInfo_C>();
	}
};
static_assert(alignof(ULegalInfo_C) == 0x000008, "Wrong alignment on ULegalInfo_C");
static_assert(sizeof(ULegalInfo_C) == 0x000430, "Wrong size on ULegalInfo_C");
static_assert(offsetof(ULegalInfo_C, UberGraphFrame) == 0x0003F0, "Member 'ULegalInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ULegalInfo_C, BorderTouch) == 0x0003F8, "Member 'ULegalInfo_C::BorderTouch' has a wrong offset!");
static_assert(offsetof(ULegalInfo_C, CloseButton) == 0x000400, "Member 'ULegalInfo_C::CloseButton' has a wrong offset!");
static_assert(offsetof(ULegalInfo_C, CommonWidgetSwitcher_0) == 0x000408, "Member 'ULegalInfo_C::CommonWidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(ULegalInfo_C, LegalOptions) == 0x000410, "Member 'ULegalInfo_C::LegalOptions' has a wrong offset!");
static_assert(offsetof(ULegalInfo_C, Lightbox) == 0x000418, "Member 'ULegalInfo_C::Lightbox' has a wrong offset!");
static_assert(offsetof(ULegalInfo_C, SizeBox_1) == 0x000420, "Member 'ULegalInfo_C::SizeBox_1' has a wrong offset!");
static_assert(offsetof(ULegalInfo_C, Title) == 0x000428, "Member 'ULegalInfo_C::Title' has a wrong offset!");

}


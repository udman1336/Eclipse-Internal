#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: XpBoostDailyBonus

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass XpBoostDailyBonus.XpBoostDailyBonus_C
// 0x0038 (0x0290 - 0x0258)
class UXpBoostDailyBonus_C final : public UFortPlayerTrackerBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0258(0x0008)(Transient, DuplicateTransient)
	class UCommonTextBlock*                       Boost;                                             // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortSZAwareImage*                      BoostIcon;                                         // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsBoosted;                                         // 0x0270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   Boost_Amount_Changed;                              // 0x0278(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         Current_Boost_Amount;                              // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_XpBoostDailyBonus(int32 EntryPoint);
	void OnPlayerInfoChanged(const struct FFortTeamMemberInfo& NewInfo);
	void Update_Daily_Bonus();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"XpBoostDailyBonus_C">();
	}
	static class UXpBoostDailyBonus_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UXpBoostDailyBonus_C>();
	}
};
static_assert(alignof(UXpBoostDailyBonus_C) == 0x000008, "Wrong alignment on UXpBoostDailyBonus_C");
static_assert(sizeof(UXpBoostDailyBonus_C) == 0x000290, "Wrong size on UXpBoostDailyBonus_C");
static_assert(offsetof(UXpBoostDailyBonus_C, UberGraphFrame) == 0x000258, "Member 'UXpBoostDailyBonus_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UXpBoostDailyBonus_C, Boost) == 0x000260, "Member 'UXpBoostDailyBonus_C::Boost' has a wrong offset!");
static_assert(offsetof(UXpBoostDailyBonus_C, BoostIcon) == 0x000268, "Member 'UXpBoostDailyBonus_C::BoostIcon' has a wrong offset!");
static_assert(offsetof(UXpBoostDailyBonus_C, IsBoosted) == 0x000270, "Member 'UXpBoostDailyBonus_C::IsBoosted' has a wrong offset!");
static_assert(offsetof(UXpBoostDailyBonus_C, Boost_Amount_Changed) == 0x000278, "Member 'UXpBoostDailyBonus_C::Boost_Amount_Changed' has a wrong offset!");
static_assert(offsetof(UXpBoostDailyBonus_C, Current_Boost_Amount) == 0x000288, "Member 'UXpBoostDailyBonus_C::Current_Boost_Amount' has a wrong offset!");

}


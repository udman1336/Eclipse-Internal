#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScoreDetailsRow

#include "Basic.hpp"


namespace SDK::Params
{

// Function ScoreDetailsRow.ScoreDetailsRow_C.UpdateRow
// 0x0048 (0x0048 - 0x0000)
struct ScoreDetailsRow_C_UpdateRow final
{
public:
	class FText                                   PlayerName_0;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         TotalScore_0;                                      // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Combat_0;                                          // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Building_0;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Utility_0;                                         // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue1;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue12;            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue12;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue123;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue123;           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_TextText_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ScoreDetailsRow_C_UpdateRow) == 0x000008, "Wrong alignment on ScoreDetailsRow_C_UpdateRow");
static_assert(sizeof(ScoreDetailsRow_C_UpdateRow) == 0x000048, "Wrong size on ScoreDetailsRow_C_UpdateRow");
static_assert(offsetof(ScoreDetailsRow_C_UpdateRow, PlayerName_0) == 0x000000, "Member 'ScoreDetailsRow_C_UpdateRow::PlayerName_0' has a wrong offset!");
static_assert(offsetof(ScoreDetailsRow_C_UpdateRow, TotalScore_0) == 0x000018, "Member 'ScoreDetailsRow_C_UpdateRow::TotalScore_0' has a wrong offset!");
static_assert(offsetof(ScoreDetailsRow_C_UpdateRow, Combat_0) == 0x00001C, "Member 'ScoreDetailsRow_C_UpdateRow::Combat_0' has a wrong offset!");
static_assert(offsetof(ScoreDetailsRow_C_UpdateRow, Building_0) == 0x000020, "Member 'ScoreDetailsRow_C_UpdateRow::Building_0' has a wrong offset!");
static_assert(offsetof(ScoreDetailsRow_C_UpdateRow, Utility_0) == 0x000024, "Member 'ScoreDetailsRow_C_UpdateRow::Utility_0' has a wrong offset!");
static_assert(offsetof(ScoreDetailsRow_C_UpdateRow, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000028, "Member 'ScoreDetailsRow_C_UpdateRow::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScoreDetailsRow_C_UpdateRow, CallFunc_NotEqual_IntInt_ReturnValue1) == 0x000029, "Member 'ScoreDetailsRow_C_UpdateRow::CallFunc_NotEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ScoreDetailsRow_C_UpdateRow, CallFunc_NotEqual_IntInt_ReturnValue12) == 0x00002A, "Member 'ScoreDetailsRow_C_UpdateRow::CallFunc_NotEqual_IntInt_ReturnValue12' has a wrong offset!");
static_assert(offsetof(ScoreDetailsRow_C_UpdateRow, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00002C, "Member 'ScoreDetailsRow_C_UpdateRow::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScoreDetailsRow_C_UpdateRow, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x000030, "Member 'ScoreDetailsRow_C_UpdateRow::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ScoreDetailsRow_C_UpdateRow, CallFunc_Conv_IntToFloat_ReturnValue12) == 0x000034, "Member 'ScoreDetailsRow_C_UpdateRow::CallFunc_Conv_IntToFloat_ReturnValue12' has a wrong offset!");
static_assert(offsetof(ScoreDetailsRow_C_UpdateRow, CallFunc_NotEqual_IntInt_ReturnValue123) == 0x000038, "Member 'ScoreDetailsRow_C_UpdateRow::CallFunc_NotEqual_IntInt_ReturnValue123' has a wrong offset!");
static_assert(offsetof(ScoreDetailsRow_C_UpdateRow, CallFunc_Conv_IntToFloat_ReturnValue123) == 0x00003C, "Member 'ScoreDetailsRow_C_UpdateRow::CallFunc_Conv_IntToFloat_ReturnValue123' has a wrong offset!");
static_assert(offsetof(ScoreDetailsRow_C_UpdateRow, CallFunc_NotEqual_TextText_ReturnValue) == 0x000040, "Member 'ScoreDetailsRow_C_UpdateRow::CallFunc_NotEqual_TextText_ReturnValue' has a wrong offset!");

}


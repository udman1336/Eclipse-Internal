#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Mimic_Chest

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_Prj_Mimic_Chest.B_Prj_Mimic_Chest_C.ExecuteUbergraph_B_Prj_Mimic_Chest
// 0x0290 (0x0290 - 0x0000)
struct B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit1;                                 // 0x0008(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x009C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00B4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00F8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0104(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0118(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0xF];                                      // 0x0131(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0140(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_PushOffHitLocation_ReturnValue;           // 0x0170(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_AddComponent_ReturnValue;                 // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0188(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_196[0x2];                                      // 0x0196(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0198(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x01CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x01D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x01E4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x01F0(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest) == 0x000010, "Wrong alignment on B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest");
static_assert(sizeof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest) == 0x000290, "Wrong size on B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, EntryPoint) == 0x000000, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, K2Node_Event_Hit1) == 0x000008, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::K2Node_Event_Hit1' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_BreakHitResult_bBlockingHit) == 0x000090, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_BreakHitResult_bInitialOverlap) == 0x000091, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_BreakHitResult_Time) == 0x000094, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_BreakHitResult_Distance) == 0x000098, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_BreakHitResult_Location) == 0x00009C, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_BreakHitResult_ImpactPoint) == 0x0000A8, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_BreakHitResult_Normal) == 0x0000B4, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_BreakHitResult_ImpactNormal) == 0x0000C0, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_BreakHitResult_PhysMat) == 0x0000D0, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_BreakHitResult_HitActor) == 0x0000D8, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_BreakHitResult_HitComponent) == 0x0000E0, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_BreakHitResult_HitBoneName) == 0x0000E8, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_BreakHitResult_HitItem) == 0x0000F0, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_BreakHitResult_FaceIndex) == 0x0000F4, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_BreakHitResult_TraceStart) == 0x0000F8, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_BreakHitResult_TraceEnd) == 0x000104, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, K2Node_Event_Damage) == 0x000110, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, K2Node_Event_DamageType) == 0x000118, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, K2Node_Event_InstigatedBy) == 0x000120, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, K2Node_Event_DamageCauser) == 0x000128, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, Temp_bool_IsClosed_Variable) == 0x000130, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, Temp_struct_Variable) == 0x000140, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_PushOffHitLocation_ReturnValue) == 0x000170, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_PushOffHitLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_AddComponent_ReturnValue) == 0x000180, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000188, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, Temp_bool_Has_Been_Initd_Variable) == 0x000194, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, K2Node_Event_EndPlayReason) == 0x000195, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000198, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0001A8, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, K2Node_Event_MyComp) == 0x0001B0, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, K2Node_Event_Other) == 0x0001B8, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, K2Node_Event_OtherComp) == 0x0001C0, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, K2Node_Event_bSelfMoved) == 0x0001C8, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, K2Node_Event_HitLocation) == 0x0001CC, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, K2Node_Event_HitNormal) == 0x0001D8, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, K2Node_Event_NormalImpulse) == 0x0001E4, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, K2Node_Event_Hit) == 0x0001F0, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_Dot_VectorVector_ReturnValue) == 0x000278, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_DegAcos_ReturnValue) == 0x00027C, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, K2Node_DynamicCast_AsFort_Pawn) == 0x000280, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, K2Node_DynamicCast_bSuccess) == 0x000288, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest, CallFunc_Less_FloatFloat_ReturnValue) == 0x000289, "Member 'B_Prj_Mimic_Chest_C_ExecuteUbergraph_B_Prj_Mimic_Chest::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function B_Prj_Mimic_Chest.B_Prj_Mimic_Chest_C.ReceiveHit
// 0x00C8 (0x00C8 - 0x0000)
struct B_Prj_Mimic_Chest_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0040(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_Prj_Mimic_Chest_C_ReceiveHit) == 0x000008, "Wrong alignment on B_Prj_Mimic_Chest_C_ReceiveHit");
static_assert(sizeof(B_Prj_Mimic_Chest_C_ReceiveHit) == 0x0000C8, "Wrong size on B_Prj_Mimic_Chest_C_ReceiveHit");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ReceiveHit, MyComp) == 0x000000, "Member 'B_Prj_Mimic_Chest_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ReceiveHit, Other) == 0x000008, "Member 'B_Prj_Mimic_Chest_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ReceiveHit, OtherComp) == 0x000010, "Member 'B_Prj_Mimic_Chest_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'B_Prj_Mimic_Chest_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'B_Prj_Mimic_Chest_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ReceiveHit, HitNormal) == 0x000028, "Member 'B_Prj_Mimic_Chest_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'B_Prj_Mimic_Chest_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ReceiveHit, Hit) == 0x000040, "Member 'B_Prj_Mimic_Chest_C_ReceiveHit::Hit' has a wrong offset!");

// Function B_Prj_Mimic_Chest.B_Prj_Mimic_Chest_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct B_Prj_Mimic_Chest_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_Mimic_Chest_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on B_Prj_Mimic_Chest_C_ReceiveEndPlay");
static_assert(sizeof(B_Prj_Mimic_Chest_C_ReceiveEndPlay) == 0x000001, "Wrong size on B_Prj_Mimic_Chest_C_ReceiveEndPlay");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'B_Prj_Mimic_Chest_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function B_Prj_Mimic_Chest.B_Prj_Mimic_Chest_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct B_Prj_Mimic_Chest_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_Mimic_Chest_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on B_Prj_Mimic_Chest_C_ReceiveAnyDamage");
static_assert(sizeof(B_Prj_Mimic_Chest_C_ReceiveAnyDamage) == 0x000020, "Wrong size on B_Prj_Mimic_Chest_C_ReceiveAnyDamage");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'B_Prj_Mimic_Chest_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'B_Prj_Mimic_Chest_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'B_Prj_Mimic_Chest_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(B_Prj_Mimic_Chest_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'B_Prj_Mimic_Chest_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function B_Prj_Mimic_Chest.B_Prj_Mimic_Chest_C.OnStop
// 0x0088 (0x0088 - 0x0000)
struct B_Prj_Mimic_Chest_C_OnStop final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_Prj_Mimic_Chest_C_OnStop) == 0x000008, "Wrong alignment on B_Prj_Mimic_Chest_C_OnStop");
static_assert(sizeof(B_Prj_Mimic_Chest_C_OnStop) == 0x000088, "Wrong size on B_Prj_Mimic_Chest_C_OnStop");
static_assert(offsetof(B_Prj_Mimic_Chest_C_OnStop, Hit) == 0x000000, "Member 'B_Prj_Mimic_Chest_C_OnStop::Hit' has a wrong offset!");

// Function B_Prj_Mimic_Chest.B_Prj_Mimic_Chest_C.TriggerMuzzleFlashFX
// 0x0004 (0x0004 - 0x0000)
struct B_Prj_Mimic_Chest_C_TriggerMuzzleFlashFX final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_Mimic_Chest_C_TriggerMuzzleFlashFX) == 0x000004, "Wrong alignment on B_Prj_Mimic_Chest_C_TriggerMuzzleFlashFX");
static_assert(sizeof(B_Prj_Mimic_Chest_C_TriggerMuzzleFlashFX) == 0x000004, "Wrong size on B_Prj_Mimic_Chest_C_TriggerMuzzleFlashFX");
static_assert(offsetof(B_Prj_Mimic_Chest_C_TriggerMuzzleFlashFX, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'B_Prj_Mimic_Chest_C_TriggerMuzzleFlashFX::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function B_Prj_Mimic_Chest.B_Prj_Mimic_Chest_C.OnRep_MuzzleFlashCounter
// 0x0001 (0x0001 - 0x0000)
struct B_Prj_Mimic_Chest_C_OnRep_MuzzleFlashCounter final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Prj_Mimic_Chest_C_OnRep_MuzzleFlashCounter) == 0x000001, "Wrong alignment on B_Prj_Mimic_Chest_C_OnRep_MuzzleFlashCounter");
static_assert(sizeof(B_Prj_Mimic_Chest_C_OnRep_MuzzleFlashCounter) == 0x000001, "Wrong size on B_Prj_Mimic_Chest_C_OnRep_MuzzleFlashCounter");
static_assert(offsetof(B_Prj_Mimic_Chest_C_OnRep_MuzzleFlashCounter, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'B_Prj_Mimic_Chest_C_OnRep_MuzzleFlashCounter::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function B_Prj_Mimic_Chest.B_Prj_Mimic_Chest_C.SpawnBottleRocket
// 0x0080 (0x0080 - 0x0000)
struct B_Prj_Mimic_Chest_C_SpawnBottleRocket final
{
public:
	struct FFortGameplayEffectContainerSpec       EffectContainerSpec;                               // 0x0000(0x0080)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(B_Prj_Mimic_Chest_C_SpawnBottleRocket) == 0x000008, "Wrong alignment on B_Prj_Mimic_Chest_C_SpawnBottleRocket");
static_assert(sizeof(B_Prj_Mimic_Chest_C_SpawnBottleRocket) == 0x000080, "Wrong size on B_Prj_Mimic_Chest_C_SpawnBottleRocket");
static_assert(offsetof(B_Prj_Mimic_Chest_C_SpawnBottleRocket, EffectContainerSpec) == 0x000000, "Member 'B_Prj_Mimic_Chest_C_SpawnBottleRocket::EffectContainerSpec' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Pickups

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Pickups.B_Pickups_C
// 0x02E0 (0x0648 - 0x0368)
class AB_Pickups_C final : public AFortPickupEffect
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0368(0x0008)(Transient, DuplicateTransient)
	class USpotLightComponent*                    SpotLight;                                         // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Background;                                        // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MobileSelectedTL_LerpInteactoIcon_8CCBA6F546C36FE169C12097586D7DC6; // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MobileSelectedTL_LerpObject_8CCBA6F546C36FE169C12097586D7DC6; // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            MobileSelectedTL__Direction_8CCBA6F546C36FE169C12097586D7DC6; // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     MobileSelectedTL;                                  // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Pivot_Offset;                                      // 0x03A0(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation_Bias;                                     // 0x03AC(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   Static_Mesh_Pickup;                                // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Skeletal_Mesh_Pickup;                              // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSkeletalMesh;                                    // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Is_a_Backpack;                                     // 0x03C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CA[0x6];                                      // 0x03CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    SkeletalOrStaticMeshAssetPrimitive;                // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentElementIndex;                               // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       midArray;                                          // 0x03E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInterface*>             CurrentMaterial;                                   // 0x03F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInterface*>             CurrentParentMaterial;                             // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          MaterialParentIsValid;                             // 0x0410(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UParticleSystem>         BackpackParticleSystem;                            // 0x0418(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         Tick_Accumulation;                                 // 0x0440(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed_After_Being_picked_up;                       // 0x0444(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Tossed;                                            // 0x0448(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Activate_Rarity_Particle_Systems;                  // 0x0449(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44A[0x6];                                      // 0x044A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       Mesh_MIDs;                                         // 0x0450(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FLinearColor                           Rarity_Color;                                      // 0x0460(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rarity_Level;                                      // 0x0470(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 Sweep_Brightness;                                  // 0x0478(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<float>                                 Sweep_Speed;                                       // 0x0488(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         Component_Radius__Scaled_;                         // 0x0498(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Component_Radius_Multiplier;                       // 0x049C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 Sparkle_Spawn_Rate__Ground_;                       // 0x04A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FLinearColor>                   Outline_Rarity_Colors;                             // 0x04B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         Component_Radius;                                  // 0x04C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Picked_Up_Delay_Before_Glow;                       // 0x04C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Picked_Up_Fade_In_Time;                            // 0x04C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Picked_Up_Hold_Time;                               // 0x04CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Picked_Up_Fade_Out_Time;                           // 0x04D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Picked_Up_Sweep_Speed;                             // 0x04D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBluglo;                                          // 0x04D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D9[0x7];                                      // 0x04D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UParticleSystem>         BlugloParticleSystem;                              // 0x04E0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UParticleSystem*                        Picked_Up_Trail_PS;                                // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 Sparkle_Spawn_Rate__Picked_Up_;                    // 0x0510(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<float>                                 Lifetime__Picked_Up_;                              // 0x0520(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          IsLootGiftForOthers;                               // 0x0530(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_531[0x7];                                      // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackEffect*                   PickupForceFeedback;                               // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UParticleSystem>         Violentium_Idle_FX;                                // 0x0540(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          Is_Violentium;                                     // 0x0568(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_569[0x7];                                      // 0x0569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 MIDsNeedingRelease;                                // 0x0570(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInterface*>             MaterialToRestoreAfterRelease;                     // 0x0580(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class FString>                         Names_of_Materials_And_Parents_Exempt_from_Repartening; // 0x0590(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<bool>                                  Array_Check;                                       // 0x05A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         Max_Draw_Distance_StW;                             // 0x05B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_Draw_Distance_Athena;                          // 0x05B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_Draw_Distance_Bacchus;                         // 0x05B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasUniqueMaterialIds;                              // 0x05BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BD[0x3];                                      // 0x05BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 Sweep_Brightness_Test;                             // 0x05C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInterface*>             Materials_to_Restore_After_Release;                // 0x05D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UParticleSystemComponent*               BackgroundParticleSystem;                          // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   BackgroundRarityColors;                            // 0x05E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         ViewDistance;                                      // 0x05F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Random_Rotation;                                   // 0x05FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MobileSelectedOffset;                              // 0x0600(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MobileSelectedScale;                               // 0x060C(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MobileInteractIcon;                                // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MobileInteractIconLocation;                        // 0x0620(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MobileInteractIconScale;                           // 0x062C(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MobileInteractionMaterial;                         // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PickedUp;                                          // 0x0640(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_B_Pickups(int32 EntryPoint);
	void DisableBacchusHighlight();
	void EnableBacchusHighlight();
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void OnPickedUp();
	void OnTossed();
	void ReceiveTick(float DeltaSeconds);
	void OnAboutToEnterBackpack(class AFortPawn* PickupTarget);
	void OnLoaded_E6CB94744AD5E69A7AE15B925703AA9F(class UObject* Loaded);
	void OnLoaded_8EE257FB4892F606952F3B9974CE26D4(class UObject* Loaded);
	void OnLoaded_545E96BB48C612EC956D439BF0008DCB(class UObject* Loaded);
	void MobileSelectedTL__UpdateFunc();
	void MobileSelectedTL__FinishedFunc();
	void UserConstructionScript();
	void SetRarityColor();
	void SpawnPickedUpTrailPS();
	void SetHologramPickedUpParams(bool Tier_0);
	void ScaleHologramTimingsForPvP();
	void ReleaseStretchMIDs();
	void DestroyBackgroundVisualComponents();
	void SetupLight();
	void SetHiddenBackgroundVisualComponents(bool Hidden);
	void SetupBaseMIDs();
	void SetupStretchMIDs();
	void Unique_Material_MIDs();
	void SetInitialHologramParams(class UMaterialInstanceDynamic* Mid);
	void SetActiveBackgroundParticleSystem(bool Active, bool Reset);
	void SetInitialBGRaysParams(class UMaterialInstanceDynamic* Mid);
	void SetVisibleMobileInteractIcon(bool Visible);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Pickups_C">();
	}
	static class AB_Pickups_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Pickups_C>();
	}
};
static_assert(alignof(AB_Pickups_C) == 0x000008, "Wrong alignment on AB_Pickups_C");
static_assert(sizeof(AB_Pickups_C) == 0x000648, "Wrong size on AB_Pickups_C");
static_assert(offsetof(AB_Pickups_C, UberGraphFrame) == 0x000368, "Member 'AB_Pickups_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, SpotLight) == 0x000370, "Member 'AB_Pickups_C::SpotLight' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Background) == 0x000378, "Member 'AB_Pickups_C::Background' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Root) == 0x000380, "Member 'AB_Pickups_C::Root' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, MobileSelectedTL_LerpInteactoIcon_8CCBA6F546C36FE169C12097586D7DC6) == 0x000388, "Member 'AB_Pickups_C::MobileSelectedTL_LerpInteactoIcon_8CCBA6F546C36FE169C12097586D7DC6' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, MobileSelectedTL_LerpObject_8CCBA6F546C36FE169C12097586D7DC6) == 0x00038C, "Member 'AB_Pickups_C::MobileSelectedTL_LerpObject_8CCBA6F546C36FE169C12097586D7DC6' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, MobileSelectedTL__Direction_8CCBA6F546C36FE169C12097586D7DC6) == 0x000390, "Member 'AB_Pickups_C::MobileSelectedTL__Direction_8CCBA6F546C36FE169C12097586D7DC6' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, MobileSelectedTL) == 0x000398, "Member 'AB_Pickups_C::MobileSelectedTL' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Pivot_Offset) == 0x0003A0, "Member 'AB_Pickups_C::Pivot_Offset' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Rotation_Bias) == 0x0003AC, "Member 'AB_Pickups_C::Rotation_Bias' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Static_Mesh_Pickup) == 0x0003B8, "Member 'AB_Pickups_C::Static_Mesh_Pickup' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Skeletal_Mesh_Pickup) == 0x0003C0, "Member 'AB_Pickups_C::Skeletal_Mesh_Pickup' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, IsSkeletalMesh) == 0x0003C8, "Member 'AB_Pickups_C::IsSkeletalMesh' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Is_a_Backpack) == 0x0003C9, "Member 'AB_Pickups_C::Is_a_Backpack' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, SkeletalOrStaticMeshAssetPrimitive) == 0x0003D0, "Member 'AB_Pickups_C::SkeletalOrStaticMeshAssetPrimitive' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, CurrentElementIndex) == 0x0003D8, "Member 'AB_Pickups_C::CurrentElementIndex' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, midArray) == 0x0003E0, "Member 'AB_Pickups_C::midArray' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, CurrentMaterial) == 0x0003F0, "Member 'AB_Pickups_C::CurrentMaterial' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, CurrentParentMaterial) == 0x000400, "Member 'AB_Pickups_C::CurrentParentMaterial' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, MaterialParentIsValid) == 0x000410, "Member 'AB_Pickups_C::MaterialParentIsValid' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, BackpackParticleSystem) == 0x000418, "Member 'AB_Pickups_C::BackpackParticleSystem' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Tick_Accumulation) == 0x000440, "Member 'AB_Pickups_C::Tick_Accumulation' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Speed_After_Being_picked_up) == 0x000444, "Member 'AB_Pickups_C::Speed_After_Being_picked_up' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Tossed) == 0x000448, "Member 'AB_Pickups_C::Tossed' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Activate_Rarity_Particle_Systems) == 0x000449, "Member 'AB_Pickups_C::Activate_Rarity_Particle_Systems' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Mesh_MIDs) == 0x000450, "Member 'AB_Pickups_C::Mesh_MIDs' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Rarity_Color) == 0x000460, "Member 'AB_Pickups_C::Rarity_Color' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Rarity_Level) == 0x000470, "Member 'AB_Pickups_C::Rarity_Level' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Sweep_Brightness) == 0x000478, "Member 'AB_Pickups_C::Sweep_Brightness' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Sweep_Speed) == 0x000488, "Member 'AB_Pickups_C::Sweep_Speed' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Component_Radius__Scaled_) == 0x000498, "Member 'AB_Pickups_C::Component_Radius__Scaled_' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Component_Radius_Multiplier) == 0x00049C, "Member 'AB_Pickups_C::Component_Radius_Multiplier' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Sparkle_Spawn_Rate__Ground_) == 0x0004A0, "Member 'AB_Pickups_C::Sparkle_Spawn_Rate__Ground_' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Outline_Rarity_Colors) == 0x0004B0, "Member 'AB_Pickups_C::Outline_Rarity_Colors' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Component_Radius) == 0x0004C0, "Member 'AB_Pickups_C::Component_Radius' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Picked_Up_Delay_Before_Glow) == 0x0004C4, "Member 'AB_Pickups_C::Picked_Up_Delay_Before_Glow' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Picked_Up_Fade_In_Time) == 0x0004C8, "Member 'AB_Pickups_C::Picked_Up_Fade_In_Time' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Picked_Up_Hold_Time) == 0x0004CC, "Member 'AB_Pickups_C::Picked_Up_Hold_Time' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Picked_Up_Fade_Out_Time) == 0x0004D0, "Member 'AB_Pickups_C::Picked_Up_Fade_Out_Time' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Picked_Up_Sweep_Speed) == 0x0004D4, "Member 'AB_Pickups_C::Picked_Up_Sweep_Speed' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, IsBluglo) == 0x0004D8, "Member 'AB_Pickups_C::IsBluglo' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, BlugloParticleSystem) == 0x0004E0, "Member 'AB_Pickups_C::BlugloParticleSystem' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Picked_Up_Trail_PS) == 0x000508, "Member 'AB_Pickups_C::Picked_Up_Trail_PS' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Sparkle_Spawn_Rate__Picked_Up_) == 0x000510, "Member 'AB_Pickups_C::Sparkle_Spawn_Rate__Picked_Up_' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Lifetime__Picked_Up_) == 0x000520, "Member 'AB_Pickups_C::Lifetime__Picked_Up_' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, IsLootGiftForOthers) == 0x000530, "Member 'AB_Pickups_C::IsLootGiftForOthers' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, PickupForceFeedback) == 0x000538, "Member 'AB_Pickups_C::PickupForceFeedback' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Violentium_Idle_FX) == 0x000540, "Member 'AB_Pickups_C::Violentium_Idle_FX' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Is_Violentium) == 0x000568, "Member 'AB_Pickups_C::Is_Violentium' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, MIDsNeedingRelease) == 0x000570, "Member 'AB_Pickups_C::MIDsNeedingRelease' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, MaterialToRestoreAfterRelease) == 0x000580, "Member 'AB_Pickups_C::MaterialToRestoreAfterRelease' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Names_of_Materials_And_Parents_Exempt_from_Repartening) == 0x000590, "Member 'AB_Pickups_C::Names_of_Materials_And_Parents_Exempt_from_Repartening' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Array_Check) == 0x0005A0, "Member 'AB_Pickups_C::Array_Check' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Max_Draw_Distance_StW) == 0x0005B0, "Member 'AB_Pickups_C::Max_Draw_Distance_StW' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Max_Draw_Distance_Athena) == 0x0005B4, "Member 'AB_Pickups_C::Max_Draw_Distance_Athena' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Max_Draw_Distance_Bacchus) == 0x0005B8, "Member 'AB_Pickups_C::Max_Draw_Distance_Bacchus' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, HasUniqueMaterialIds) == 0x0005BC, "Member 'AB_Pickups_C::HasUniqueMaterialIds' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Sweep_Brightness_Test) == 0x0005C0, "Member 'AB_Pickups_C::Sweep_Brightness_Test' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Materials_to_Restore_After_Release) == 0x0005D0, "Member 'AB_Pickups_C::Materials_to_Restore_After_Release' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, BackgroundParticleSystem) == 0x0005E0, "Member 'AB_Pickups_C::BackgroundParticleSystem' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, BackgroundRarityColors) == 0x0005E8, "Member 'AB_Pickups_C::BackgroundRarityColors' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, ViewDistance) == 0x0005F8, "Member 'AB_Pickups_C::ViewDistance' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, Random_Rotation) == 0x0005FC, "Member 'AB_Pickups_C::Random_Rotation' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, MobileSelectedOffset) == 0x000600, "Member 'AB_Pickups_C::MobileSelectedOffset' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, MobileSelectedScale) == 0x00060C, "Member 'AB_Pickups_C::MobileSelectedScale' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, MobileInteractIcon) == 0x000618, "Member 'AB_Pickups_C::MobileInteractIcon' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, MobileInteractIconLocation) == 0x000620, "Member 'AB_Pickups_C::MobileInteractIconLocation' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, MobileInteractIconScale) == 0x00062C, "Member 'AB_Pickups_C::MobileInteractIconScale' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, MobileInteractionMaterial) == 0x000638, "Member 'AB_Pickups_C::MobileInteractionMaterial' has a wrong offset!");
static_assert(offsetof(AB_Pickups_C, PickedUp) == 0x000640, "Member 'AB_Pickups_C::PickedUp' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProjectileHuskLobber

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ProjectileHuskLobber.ProjectileHuskLobber_C.ExecuteUbergraph_ProjectileHuskLobber
// 0x01E0 (0x01E0 - 0x0000)
struct ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0004(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x0044(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit1;                                 // 0x0050(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x00D8(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_162[0x2];                                      // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x016C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0178(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0184(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0190(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01C8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber) == 0x000008, "Wrong alignment on ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber");
static_assert(sizeof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber) == 0x0001E0, "Wrong size on ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, EntryPoint) == 0x000000, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::EntryPoint' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, K2Node_CustomEvent_Location) == 0x000004, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, K2Node_Event_MyComp) == 0x000010, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, K2Node_Event_Other) == 0x000018, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, K2Node_Event_OtherComp) == 0x000020, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, K2Node_Event_bSelfMoved) == 0x000028, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, K2Node_Event_HitLocation) == 0x00002C, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, K2Node_Event_HitNormal) == 0x000038, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, K2Node_Event_NormalImpulse) == 0x000044, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, K2Node_Event_Hit1) == 0x000050, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::K2Node_Event_Hit1' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, K2Node_Event_Hit) == 0x0000D8, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, CallFunc_BreakHitResult_bBlockingHit) == 0x000160, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, CallFunc_BreakHitResult_bInitialOverlap) == 0x000161, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, CallFunc_BreakHitResult_Time) == 0x000164, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, CallFunc_BreakHitResult_Distance) == 0x000168, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, CallFunc_BreakHitResult_Location) == 0x00016C, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, CallFunc_BreakHitResult_ImpactPoint) == 0x000178, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, CallFunc_BreakHitResult_Normal) == 0x000184, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, CallFunc_BreakHitResult_ImpactNormal) == 0x000190, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, CallFunc_BreakHitResult_PhysMat) == 0x0001A0, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, CallFunc_BreakHitResult_HitActor) == 0x0001A8, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, CallFunc_BreakHitResult_HitComponent) == 0x0001B0, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, CallFunc_BreakHitResult_HitBoneName) == 0x0001B8, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, CallFunc_BreakHitResult_HitItem) == 0x0001C0, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, CallFunc_BreakHitResult_FaceIndex) == 0x0001C4, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, CallFunc_BreakHitResult_TraceStart) == 0x0001C8, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber, CallFunc_BreakHitResult_TraceEnd) == 0x0001D4, "Member 'ProjectileHuskLobber_C_ExecuteUbergraph_ProjectileHuskLobber::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function ProjectileHuskLobber.ProjectileHuskLobber_C.OnShot
// 0x0088 (0x0088 - 0x0000)
struct ProjectileHuskLobber_C_OnShot final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ProjectileHuskLobber_C_OnShot) == 0x000008, "Wrong alignment on ProjectileHuskLobber_C_OnShot");
static_assert(sizeof(ProjectileHuskLobber_C_OnShot) == 0x000088, "Wrong size on ProjectileHuskLobber_C_OnShot");
static_assert(offsetof(ProjectileHuskLobber_C_OnShot, Hit) == 0x000000, "Member 'ProjectileHuskLobber_C_OnShot::Hit' has a wrong offset!");

// Function ProjectileHuskLobber.ProjectileHuskLobber_C.ProjectileShot_Event
// 0x000C (0x000C - 0x0000)
struct ProjectileHuskLobber_C_ProjectileShot_Event final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectileHuskLobber_C_ProjectileShot_Event) == 0x000004, "Wrong alignment on ProjectileHuskLobber_C_ProjectileShot_Event");
static_assert(sizeof(ProjectileHuskLobber_C_ProjectileShot_Event) == 0x00000C, "Wrong size on ProjectileHuskLobber_C_ProjectileShot_Event");
static_assert(offsetof(ProjectileHuskLobber_C_ProjectileShot_Event, Location) == 0x000000, "Member 'ProjectileHuskLobber_C_ProjectileShot_Event::Location' has a wrong offset!");

// Function ProjectileHuskLobber.ProjectileHuskLobber_C.ReceiveHit
// 0x00C8 (0x00C8 - 0x0000)
struct ProjectileHuskLobber_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0040(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ProjectileHuskLobber_C_ReceiveHit) == 0x000008, "Wrong alignment on ProjectileHuskLobber_C_ReceiveHit");
static_assert(sizeof(ProjectileHuskLobber_C_ReceiveHit) == 0x0000C8, "Wrong size on ProjectileHuskLobber_C_ReceiveHit");
static_assert(offsetof(ProjectileHuskLobber_C_ReceiveHit, MyComp) == 0x000000, "Member 'ProjectileHuskLobber_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ReceiveHit, Other) == 0x000008, "Member 'ProjectileHuskLobber_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ReceiveHit, OtherComp) == 0x000010, "Member 'ProjectileHuskLobber_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'ProjectileHuskLobber_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'ProjectileHuskLobber_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ReceiveHit, HitNormal) == 0x000028, "Member 'ProjectileHuskLobber_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'ProjectileHuskLobber_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ReceiveHit, Hit) == 0x000040, "Member 'ProjectileHuskLobber_C_ReceiveHit::Hit' has a wrong offset!");

// Function ProjectileHuskLobber.ProjectileHuskLobber_C.ImpactOnHit
// 0x00B0 (0x00B0 - 0x0000)
struct ProjectileHuskLobber_C_ImpactOnHit final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0034(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetInstigatorController_ReturnValue;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAIController*                      K2Node_DynamicCast_AsFort_AIController;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0074(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetGoalActor_ReturnValue;                 // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue;         // 0x0088(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectileHuskLobber_C_ImpactOnHit) == 0x000008, "Wrong alignment on ProjectileHuskLobber_C_ImpactOnHit");
static_assert(sizeof(ProjectileHuskLobber_C_ImpactOnHit) == 0x0000B0, "Wrong size on ProjectileHuskLobber_C_ImpactOnHit");
static_assert(offsetof(ProjectileHuskLobber_C_ImpactOnHit, HitLocation) == 0x000000, "Member 'ProjectileHuskLobber_C_ImpactOnHit::HitLocation' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ImpactOnHit, CallFunc_IsDedicatedServer_ReturnValue) == 0x00000C, "Member 'ProjectileHuskLobber_C_ImpactOnHit::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ImpactOnHit, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'ProjectileHuskLobber_C_ImpactOnHit::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ImpactOnHit, CallFunc_GetVelocity_ReturnValue) == 0x00001C, "Member 'ProjectileHuskLobber_C_ImpactOnHit::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ImpactOnHit, CallFunc_BreakVector_X) == 0x000028, "Member 'ProjectileHuskLobber_C_ImpactOnHit::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ImpactOnHit, CallFunc_BreakVector_Y) == 0x00002C, "Member 'ProjectileHuskLobber_C_ImpactOnHit::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ImpactOnHit, CallFunc_BreakVector_Z) == 0x000030, "Member 'ProjectileHuskLobber_C_ImpactOnHit::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ImpactOnHit, CallFunc_MakeVector_ReturnValue) == 0x000034, "Member 'ProjectileHuskLobber_C_ImpactOnHit::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ImpactOnHit, CallFunc_MakeVector_ReturnValue1) == 0x000040, "Member 'ProjectileHuskLobber_C_ImpactOnHit::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ImpactOnHit, CallFunc_GetInstigatorController_ReturnValue) == 0x000050, "Member 'ProjectileHuskLobber_C_ImpactOnHit::CallFunc_GetInstigatorController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ImpactOnHit, CallFunc_Normal_ReturnValue) == 0x000058, "Member 'ProjectileHuskLobber_C_ImpactOnHit::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ImpactOnHit, K2Node_DynamicCast_AsFort_AIController) == 0x000068, "Member 'ProjectileHuskLobber_C_ImpactOnHit::K2Node_DynamicCast_AsFort_AIController' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ImpactOnHit, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'ProjectileHuskLobber_C_ImpactOnHit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ImpactOnHit, CallFunc_Cross_VectorVector_ReturnValue) == 0x000074, "Member 'ProjectileHuskLobber_C_ImpactOnHit::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ImpactOnHit, CallFunc_GetGoalActor_ReturnValue) == 0x000080, "Member 'ProjectileHuskLobber_C_ImpactOnHit::CallFunc_GetGoalActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ImpactOnHit, CallFunc_MakeRotationFromAxes_ReturnValue) == 0x000088, "Member 'ProjectileHuskLobber_C_ImpactOnHit::CallFunc_MakeRotationFromAxes_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ImpactOnHit, K2Node_DynamicCast_AsFort_Pawn) == 0x000098, "Member 'ProjectileHuskLobber_C_ImpactOnHit::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ImpactOnHit, K2Node_DynamicCast_bSuccess1) == 0x0000A0, "Member 'ProjectileHuskLobber_C_ImpactOnHit::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(ProjectileHuskLobber_C_ImpactOnHit, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0000A8, "Member 'ProjectileHuskLobber_C_ImpactOnHit::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");

}


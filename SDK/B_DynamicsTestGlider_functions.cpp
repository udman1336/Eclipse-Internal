#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_DynamicsTestGlider

#include "Basic.hpp"

#include "B_DynamicsTestGlider_classes.hpp"
#include "B_DynamicsTestGlider_parameters.hpp"


namespace SDK
{

// Function B_DynamicsTestGlider.B_DynamicsTestGlider_C.ExecuteUbergraph_B_DynamicsTestGlider
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_DynamicsTestGlider_C::ExecuteUbergraph_B_DynamicsTestGlider(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_DynamicsTestGlider_C", "ExecuteUbergraph_B_DynamicsTestGlider");

	Params::B_DynamicsTestGlider_C_ExecuteUbergraph_B_DynamicsTestGlider Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_DynamicsTestGlider.B_DynamicsTestGlider_C.FireDynamics
// (BlueprintCallable, BlueprintEvent)

void AB_DynamicsTestGlider_C::FireDynamics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_DynamicsTestGlider_C", "FireDynamics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_DynamicsTestGlider.B_DynamicsTestGlider_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_DynamicsTestGlider_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_DynamicsTestGlider_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_DynamicsTestGlider.B_DynamicsTestGlider_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AB_DynamicsTestGlider_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_DynamicsTestGlider_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}


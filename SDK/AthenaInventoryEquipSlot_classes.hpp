#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaInventoryEquipSlot

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "CommonInput_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaInventoryEquipSlot.AthenaInventoryEquipSlot_C
// 0x0020 (0x0840 - 0x0820)
class UAthenaInventoryEquipSlot_C final : public UAthenaInventoryEquipButtonBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0820(0x0008)(Transient, DuplicateTransient)
	class UImage*                                 DropTarget;                                        // 0x0828(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemLocked;                                        // 0x0830(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsDragHovered;                                     // 0x0838(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_AthenaInventoryEquipSlot(int32 EntryPoint);
	void OnDragLeave(const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void OnInventoryItemSelected_Event_0(class UFortItem* Item);
	void OnDoubleClicked();
	void OnDeselected();
	void OnSelected();
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnClicked();
	void OnQuickbarContentsChanged_Event_0(EFortQuickBars QuickbarIndex, const TArray<int32>& ChangedSlots);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void RefreshItem();
	bool OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void OnDragDetected(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation** Operation);
	void TryAndShowDropTarget();
	bool IsDraggingEquipableItem();
	struct FEventReply OnPreviewMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	bool OnDragOver(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	bool CanEquipFortItem(class UObject* Object);
	void IsFocusOfDrop(bool* IsDragHovered_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaInventoryEquipSlot_C">();
	}
	static class UAthenaInventoryEquipSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaInventoryEquipSlot_C>();
	}
};
static_assert(alignof(UAthenaInventoryEquipSlot_C) == 0x000008, "Wrong alignment on UAthenaInventoryEquipSlot_C");
static_assert(sizeof(UAthenaInventoryEquipSlot_C) == 0x000840, "Wrong size on UAthenaInventoryEquipSlot_C");
static_assert(offsetof(UAthenaInventoryEquipSlot_C, UberGraphFrame) == 0x000820, "Member 'UAthenaInventoryEquipSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryEquipSlot_C, DropTarget) == 0x000828, "Member 'UAthenaInventoryEquipSlot_C::DropTarget' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryEquipSlot_C, ItemLocked) == 0x000830, "Member 'UAthenaInventoryEquipSlot_C::ItemLocked' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryEquipSlot_C, IsDragHovered) == 0x000838, "Member 'UAthenaInventoryEquipSlot_C::IsDragHovered' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Trap_Floor_Turret

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.ExecuteUbergraph_Trap_Floor_Turret
// 0x0A10 (0x0A10 - 0x0000)
struct Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters;                // 0x0008(0x00B8)(ContainsInstancedReference)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_EffectContextGetHitResult_ReturnValue;    // 0x00C8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_152[0x2];                                      // 0x0152(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x015C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0168(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0174(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0180(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D2[0xE];                                      // 0x01D2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam;                // 0x01E0(0x0080)(IsPlainOldData, NoDestructor)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_268[0x8];                                      // 0x0268(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam1;               // 0x0270(0x0080)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue12;                    // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x02F4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0300(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue1;       // 0x030C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_325[0x3];                                      // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x032C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue12;      // 0x033C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x0348(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0xC];                                      // 0x0354(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam12;              // 0x0360(0x0080)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue123;     // 0x03E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam123;             // 0x03F0(0x0080)(IsPlainOldData, NoDestructor)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam1234;            // 0x0470(0x0080)(IsPlainOldData, NoDestructor)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam12345;           // 0x04F0(0x0080)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue1;                // 0x0571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_572[0xE];                                      // 0x0572(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam123456;          // 0x0580(0x0080)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue12;               // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_601[0x7];                                      // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FParticleSysParam>              K2Node_MakeArray_Array;                            // 0x0608(0x0010)(ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0618(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0624(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue12;        // 0x0630(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue123;       // 0x063C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0648(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1234;      // 0x0658(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_664[0x4];                                      // 0x0664(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0668(0x0008)(NoDestructor)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0670(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue1;     // 0x0678(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_684[0x4];                                      // 0x0684(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0688(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0694(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType123;              // 0x0695(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_696[0x2];                                      // 0x0696(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters123;             // 0x0698(0x00B8)(ContainsInstancedReference)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType12;               // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_751[0x7];                                      // 0x0751(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters12;              // 0x0758(0x00B8)(ContainsInstancedReference)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum12_CmpSuccess;                    // 0x0811(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue123;                   // 0x0812(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_813[0x1];                                      // 0x0813(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue12;    // 0x0814(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0820(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue123;   // 0x0828(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0834(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0840(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_844[0x4];                                      // 0x0844(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  K2Node_Event_Pawn;                                 // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult;          // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_851[0x3];                                      // 0x0851(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY;              // 0x0854(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0858(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum123_CmpSuccess;                   // 0x085C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85D[0x3];                                      // 0x085D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent1;   // 0x0860(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor1;            // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp1;             // 0x0870(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex1;        // 0x0878(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x087C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87D[0x3];                                      // 0x087D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0880(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_911[0x7];                                      // 0x0911(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0918(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0920(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0928(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0930(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_934[0x4];                                      // 0x0934(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn1;                   // 0x0938(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0940(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType1;                // 0x0941(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_942[0x6];                                      // 0x0942(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters1;               // 0x0948(0x00B8)(ContainsInstancedReference)
	bool                                          K2Node_SwitchEnum1234_CmpSuccess;                  // 0x0A00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A01[0x3];                                      // 0x0A01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue12345;     // 0x0A04(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret) == 0x000010, "Wrong alignment on Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret");
static_assert(sizeof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret) == 0x000A10, "Wrong size on Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, EntryPoint) == 0x000000, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::EntryPoint' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_GameplayCueEvent_EventType) == 0x000004, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_GameplayCueEvent_EventType' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_GameplayCueEvent_Parameters) == 0x000008, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_GameplayCueEvent_Parameters' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_SwitchEnum_CmpSuccess) == 0x0000C0, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_EffectContextGetHitResult_ReturnValue) == 0x0000C8, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_EffectContextGetHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_BreakHitResult_bBlockingHit) == 0x000150, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_BreakHitResult_bInitialOverlap) == 0x000151, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_BreakHitResult_Time) == 0x000154, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_BreakHitResult_Distance) == 0x000158, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_BreakHitResult_Location) == 0x00015C, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_BreakHitResult_ImpactPoint) == 0x000168, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_BreakHitResult_Normal) == 0x000174, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_BreakHitResult_ImpactNormal) == 0x000180, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_BreakHitResult_PhysMat) == 0x000190, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_BreakHitResult_HitActor) == 0x000198, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_BreakHitResult_HitComponent) == 0x0001A0, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_BreakHitResult_HitBoneName) == 0x0001A8, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_BreakHitResult_HitItem) == 0x0001B0, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_BreakHitResult_FaceIndex) == 0x0001B4, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_BreakHitResult_TraceStart) == 0x0001B8, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_BreakHitResult_TraceEnd) == 0x0001C4, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_IsValid_ReturnValue) == 0x0001D0, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_IsValid_ReturnValue1) == 0x0001D1, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_MakeStruct_ParticleSysParam) == 0x0001E0, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_MakeStruct_ParticleSysParam' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000260, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_MakeStruct_ParticleSysParam1) == 0x000270, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_MakeStruct_ParticleSysParam1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_IsValid_ReturnValue12) == 0x0002F0, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_IsValid_ReturnValue12' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0002F4, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000300, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_Multiply_VectorVector_ReturnValue1) == 0x00030C, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_Multiply_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_BreakVector_X) == 0x000318, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_BreakVector_Y) == 0x00031C, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_BreakVector_Z) == 0x000320, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_HasAuthority_ReturnValue) == 0x000324, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000328, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_MakeVector_ReturnValue) == 0x00032C, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000338, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_Multiply_VectorVector_ReturnValue12) == 0x00033C, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_Multiply_VectorVector_ReturnValue12' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_MakeVector_ReturnValue1) == 0x000348, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_MakeStruct_ParticleSysParam12) == 0x000360, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_MakeStruct_ParticleSysParam12' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_Multiply_VectorVector_ReturnValue123) == 0x0003E0, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_Multiply_VectorVector_ReturnValue123' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_MakeStruct_ParticleSysParam123) == 0x0003F0, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_MakeStruct_ParticleSysParam123' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_MakeStruct_ParticleSysParam1234) == 0x000470, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_MakeStruct_ParticleSysParam1234' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_MakeStruct_ParticleSysParam12345) == 0x0004F0, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_MakeStruct_ParticleSysParam12345' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_IsDedicatedServer_ReturnValue) == 0x000570, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_HasAuthority_ReturnValue1) == 0x000571, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_HasAuthority_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_MakeStruct_ParticleSysParam123456) == 0x000580, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_MakeStruct_ParticleSysParam123456' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_HasAuthority_ReturnValue12) == 0x000600, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_HasAuthority_ReturnValue12' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_MakeArray_Array) == 0x000608, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000618, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000624, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_K2_GetActorLocation_ReturnValue12) == 0x000630, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_K2_GetActorLocation_ReturnValue12' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_K2_GetActorLocation_ReturnValue123) == 0x00063C, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_K2_GetActorLocation_ReturnValue123' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_CreateDelegate_OutputDelegate) == 0x000648, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_K2_GetActorLocation_ReturnValue1234) == 0x000658, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_K2_GetActorLocation_ReturnValue1234' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000668, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000670, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_K2_GetComponentLocation_ReturnValue1) == 0x000678, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_K2_GetComponentLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000688, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, Temp_float_Variable) == 0x000690, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000694, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_GameplayCueEvent_EventType123) == 0x000695, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_GameplayCueEvent_EventType123' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_GameplayCueEvent_Parameters123) == 0x000698, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_GameplayCueEvent_Parameters123' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_GameplayCueEvent_EventType12) == 0x000750, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_GameplayCueEvent_EventType12' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_GameplayCueEvent_Parameters12) == 0x000758, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_GameplayCueEvent_Parameters12' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_SwitchEnum1_CmpSuccess) == 0x000810, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_SwitchEnum12_CmpSuccess) == 0x000811, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_SwitchEnum12_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_IsValid_ReturnValue123) == 0x000812, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_IsValid_ReturnValue123' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_K2_GetComponentLocation_ReturnValue12) == 0x000814, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_K2_GetComponentLocation_ReturnValue12' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000820, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_K2_GetComponentLocation_ReturnValue123) == 0x000828, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_K2_GetComponentLocation_ReturnValue123' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000834, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_VSize_ReturnValue) == 0x000840, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_Event_Pawn) == 0x000848, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_Event_Pawn' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_EvaluateCurveTableRow_OutResult) == 0x000850, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_EvaluateCurveTableRow_OutResult' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_EvaluateCurveTableRow_OutXY) == 0x000854, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_EvaluateCurveTableRow_OutXY' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_FTrunc_ReturnValue) == 0x000858, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_SwitchEnum123_CmpSuccess) == 0x00085C, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_SwitchEnum123_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_ComponentBoundEvent_OverlappedComponent1) == 0x000860, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_ComponentBoundEvent_OverlappedComponent1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_ComponentBoundEvent_OtherActor1) == 0x000868, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_ComponentBoundEvent_OtherActor1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_ComponentBoundEvent_OtherComp1) == 0x000870, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_ComponentBoundEvent_OtherComp1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_ComponentBoundEvent_OtherBodyIndex1) == 0x000878, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_ComponentBoundEvent_OtherBodyIndex1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_ComponentBoundEvent_bFromSweep) == 0x00087C, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_ComponentBoundEvent_SweepResult) == 0x000880, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_DynamicCast_AsFort_Pawn) == 0x000908, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_DynamicCast_bSuccess) == 0x000910, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000918, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_ComponentBoundEvent_OtherActor) == 0x000920, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_ComponentBoundEvent_OtherComp) == 0x000928, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000930, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_DynamicCast_AsFort_Pawn1) == 0x000938, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_DynamicCast_AsFort_Pawn1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_DynamicCast_bSuccess1) == 0x000940, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_GameplayCueEvent_EventType1) == 0x000941, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_GameplayCueEvent_EventType1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_GameplayCueEvent_Parameters1) == 0x000948, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_GameplayCueEvent_Parameters1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, K2Node_SwitchEnum1234_CmpSuccess) == 0x000A00, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::K2Node_SwitchEnum1234_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret, CallFunc_K2_GetActorLocation_ReturnValue12345) == 0x000A04, "Member 'Trap_Floor_Turret_C_ExecuteUbergraph_Trap_Floor_Turret::CallFunc_K2_GetActorLocation_ReturnValue12345' has a wrong offset!");

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.GameplayCue.Impact.Physical
// 0x00C0 (0x00C0 - 0x0000)
struct Trap_Floor_Turret_C_GameplayCue_Impact_Physical final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(Trap_Floor_Turret_C_GameplayCue_Impact_Physical) == 0x000008, "Wrong alignment on Trap_Floor_Turret_C_GameplayCue_Impact_Physical");
static_assert(sizeof(Trap_Floor_Turret_C_GameplayCue_Impact_Physical) == 0x0000C0, "Wrong size on Trap_Floor_Turret_C_GameplayCue_Impact_Physical");
static_assert(offsetof(Trap_Floor_Turret_C_GameplayCue_Impact_Physical, EventType) == 0x000000, "Member 'Trap_Floor_Turret_C_GameplayCue_Impact_Physical::EventType' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_GameplayCue_Impact_Physical, Parameters) == 0x000008, "Member 'Trap_Floor_Turret_C_GameplayCue_Impact_Physical::Parameters' has a wrong offset!");

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.GameplayCue.Abilities.Activation.Generic.SentryGun
// 0x00C0 (0x00C0 - 0x0000)
struct Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Generic_SentryGun final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Generic_SentryGun) == 0x000008, "Wrong alignment on Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Generic_SentryGun");
static_assert(sizeof(Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Generic_SentryGun) == 0x0000C0, "Wrong size on Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Generic_SentryGun");
static_assert(offsetof(Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Generic_SentryGun, EventType) == 0x000000, "Member 'Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Generic_SentryGun::EventType' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Generic_SentryGun, Parameters) == 0x000008, "Member 'Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Generic_SentryGun::Parameters' has a wrong offset!");

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Trap_Floor_Turret_C_BndEvt__SightRadiusSphereComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.TriggerLaunchEffects
// 0x0008 (0x0008 - 0x0000)
struct Trap_Floor_Turret_C_TriggerLaunchEffects final
{
public:
	class AFortPlayerPawnAthena*                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trap_Floor_Turret_C_TriggerLaunchEffects) == 0x000008, "Wrong alignment on Trap_Floor_Turret_C_TriggerLaunchEffects");
static_assert(sizeof(Trap_Floor_Turret_C_TriggerLaunchEffects) == 0x000008, "Wrong size on Trap_Floor_Turret_C_TriggerLaunchEffects");
static_assert(offsetof(Trap_Floor_Turret_C_TriggerLaunchEffects, Pawn) == 0x000000, "Member 'Trap_Floor_Turret_C_TriggerLaunchEffects::Pawn' has a wrong offset!");

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.GameplayCue.Abilities.Activation.Traps.ActivateTrap
// 0x00C0 (0x00C0 - 0x0000)
struct Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Traps_ActivateTrap final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Traps_ActivateTrap) == 0x000008, "Wrong alignment on Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Traps_ActivateTrap");
static_assert(sizeof(Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Traps_ActivateTrap) == 0x0000C0, "Wrong size on Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Traps_ActivateTrap");
static_assert(offsetof(Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Traps_ActivateTrap, EventType) == 0x000000, "Member 'Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Traps_ActivateTrap::EventType' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Traps_ActivateTrap, Parameters) == 0x000008, "Member 'Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Traps_ActivateTrap::Parameters' has a wrong offset!");

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.GameplayCue.Abilities.Activation.Traps.ReloadBegin
// 0x00C0 (0x00C0 - 0x0000)
struct Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Traps_ReloadBegin final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Traps_ReloadBegin) == 0x000008, "Wrong alignment on Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Traps_ReloadBegin");
static_assert(sizeof(Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Traps_ReloadBegin) == 0x0000C0, "Wrong size on Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Traps_ReloadBegin");
static_assert(offsetof(Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Traps_ReloadBegin, EventType) == 0x000000, "Member 'Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Traps_ReloadBegin::EventType' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Traps_ReloadBegin, Parameters) == 0x000008, "Member 'Trap_Floor_Turret_C_GameplayCue_Abilities_Activation_Traps_ReloadBegin::Parameters' has a wrong offset!");

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.PerformGunRotation
// 0x0220 (0x0220 - 0x0000)
struct Trap_Floor_Turret_C_PerformGunRotation final
{
public:
	class AActor*                                 LookAtActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0074(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x008C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x00A4(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00B0(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue1;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x00C4(0x000C)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x00D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_BreakRotator_Roll1;                       // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch1;                      // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw1;                        // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcDesiredAngle_DesiredAngle;            // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcDesiredAngle_DesiredAngle1;           // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x016C(0x000C)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue1;                   // 0x0178(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult1;   // 0x0188(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 CallFunc_Conv_RotatorToString_ReturnValue;         // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Trap_Floor_Turret_C_PerformGunRotation) == 0x000010, "Wrong alignment on Trap_Floor_Turret_C_PerformGunRotation");
static_assert(sizeof(Trap_Floor_Turret_C_PerformGunRotation) == 0x000220, "Wrong size on Trap_Floor_Turret_C_PerformGunRotation");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, LookAtActor) == 0x000000, "Member 'Trap_Floor_Turret_C_PerformGunRotation::LookAtActor' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, DeltaTime) == 0x000008, "Member 'Trap_Floor_Turret_C_PerformGunRotation::DeltaTime' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_BreakTransform_Location) == 0x000050, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000074, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_BreakRotator_Roll) == 0x000080, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_BreakRotator_Pitch) == 0x000084, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_BreakRotator_Yaw) == 0x000088, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_InverseTransformDirection_ReturnValue) == 0x00008C, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_BreakVector_X) == 0x000098, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_BreakVector_Y) == 0x00009C, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_BreakVector_Z) == 0x0000A0, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_ComposeRotators_ReturnValue) == 0x0000A4, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_MakeVector2D_ReturnValue) == 0x0000B0, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_DegAtan2_ReturnValue) == 0x0000B8, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_VSize2D_ReturnValue) == 0x0000BC, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_DegAtan2_ReturnValue1) == 0x0000C0, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_DegAtan2_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_RInterpTo_ReturnValue) == 0x0000C4, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0000D0, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_BreakRotator_Roll1) == 0x000158, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_BreakRotator_Roll1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_BreakRotator_Pitch1) == 0x00015C, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_BreakRotator_Pitch1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_BreakRotator_Yaw1) == 0x000160, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_BreakRotator_Yaw1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_CalcDesiredAngle_DesiredAngle) == 0x000164, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_CalcDesiredAngle_DesiredAngle' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_CalcDesiredAngle_DesiredAngle1) == 0x000168, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_CalcDesiredAngle_DesiredAngle1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_MakeRotator_ReturnValue) == 0x00016C, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_RInterpTo_ReturnValue1) == 0x000178, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_RInterpTo_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_K2_SetRelativeRotation_SweepHitResult1) == 0x000188, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_K2_SetRelativeRotation_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_PerformGunRotation, CallFunc_Conv_RotatorToString_ReturnValue) == 0x000210, "Member 'Trap_Floor_Turret_C_PerformGunRotation::CallFunc_Conv_RotatorToString_ReturnValue' has a wrong offset!");

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.CalcDesiredAngle
// 0x0034 (0x0034 - 0x0000)
struct Trap_Floor_Turret_C_CalcDesiredAngle final
{
public:
	float                                         InitialRelativeAngle;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentRelativeAngle;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AngleOffset;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AngleClamp;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DesiredAngle;                                      // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Option_B___If_false__use_Option_A_Variable; // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ClampAngle_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Trap_Floor_Turret_C_CalcDesiredAngle) == 0x000004, "Wrong alignment on Trap_Floor_Turret_C_CalcDesiredAngle");
static_assert(sizeof(Trap_Floor_Turret_C_CalcDesiredAngle) == 0x000034, "Wrong size on Trap_Floor_Turret_C_CalcDesiredAngle");
static_assert(offsetof(Trap_Floor_Turret_C_CalcDesiredAngle, InitialRelativeAngle) == 0x000000, "Member 'Trap_Floor_Turret_C_CalcDesiredAngle::InitialRelativeAngle' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_CalcDesiredAngle, CurrentRelativeAngle) == 0x000004, "Member 'Trap_Floor_Turret_C_CalcDesiredAngle::CurrentRelativeAngle' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_CalcDesiredAngle, AngleOffset) == 0x000008, "Member 'Trap_Floor_Turret_C_CalcDesiredAngle::AngleOffset' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_CalcDesiredAngle, AngleClamp) == 0x00000C, "Member 'Trap_Floor_Turret_C_CalcDesiredAngle::AngleClamp' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_CalcDesiredAngle, DesiredAngle) == 0x000010, "Member 'Trap_Floor_Turret_C_CalcDesiredAngle::DesiredAngle' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_CalcDesiredAngle, Temp_bool_Variable) == 0x000014, "Member 'Trap_Floor_Turret_C_CalcDesiredAngle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_CalcDesiredAngle, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'Trap_Floor_Turret_C_CalcDesiredAngle::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_CalcDesiredAngle, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'Trap_Floor_Turret_C_CalcDesiredAngle::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_CalcDesiredAngle, CallFunc_Add_FloatFloat_ReturnValue1) == 0x000020, "Member 'Trap_Floor_Turret_C_CalcDesiredAngle::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_CalcDesiredAngle, Temp_bool_Option_B___If_false__use_Option_A_Variable) == 0x000024, "Member 'Trap_Floor_Turret_C_CalcDesiredAngle::Temp_bool_Option_B___If_false__use_Option_A_Variable' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_CalcDesiredAngle, CallFunc_ClampAngle_ReturnValue) == 0x000028, "Member 'Trap_Floor_Turret_C_CalcDesiredAngle::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_CalcDesiredAngle, K2Node_Select_Default) == 0x00002C, "Member 'Trap_Floor_Turret_C_CalcDesiredAngle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_CalcDesiredAngle, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'Trap_Floor_Turret_C_CalcDesiredAngle::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_CalcDesiredAngle, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000031, "Member 'Trap_Floor_Turret_C_CalcDesiredAngle::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_CalcDesiredAngle, CallFunc_BooleanOR_ReturnValue) == 0x000032, "Member 'Trap_Floor_Turret_C_CalcDesiredAngle::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.SetTrackingTarget
// 0x0010 (0x0010 - 0x0000)
struct Trap_Floor_Turret_C_SetTrackingTarget final
{
public:
	class AFortPawn*                              PawnToTrack;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Trap_Floor_Turret_C_SetTrackingTarget) == 0x000008, "Wrong alignment on Trap_Floor_Turret_C_SetTrackingTarget");
static_assert(sizeof(Trap_Floor_Turret_C_SetTrackingTarget) == 0x000010, "Wrong size on Trap_Floor_Turret_C_SetTrackingTarget");
static_assert(offsetof(Trap_Floor_Turret_C_SetTrackingTarget, PawnToTrack) == 0x000000, "Member 'Trap_Floor_Turret_C_SetTrackingTarget::PawnToTrack' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_SetTrackingTarget, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Trap_Floor_Turret_C_SetTrackingTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_SetTrackingTarget, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000009, "Member 'Trap_Floor_Turret_C_SetTrackingTarget::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_SetTrackingTarget, CallFunc_HasAuthority_ReturnValue) == 0x00000A, "Member 'Trap_Floor_Turret_C_SetTrackingTarget::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_SetTrackingTarget, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'Trap_Floor_Turret_C_SetTrackingTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.SetFiringTimer
// 0x0008 (0x0008 - 0x0000)
struct Trap_Floor_Turret_C_SetFiringTimer final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0000(0x0008)(NoDestructor)
};
static_assert(alignof(Trap_Floor_Turret_C_SetFiringTimer) == 0x000008, "Wrong alignment on Trap_Floor_Turret_C_SetFiringTimer");
static_assert(sizeof(Trap_Floor_Turret_C_SetFiringTimer) == 0x000008, "Wrong size on Trap_Floor_Turret_C_SetFiringTimer");
static_assert(offsetof(Trap_Floor_Turret_C_SetFiringTimer, CallFunc_K2_SetTimer_ReturnValue) == 0x000000, "Member 'Trap_Floor_Turret_C_SetFiringTimer::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.AttemptAcquireTarget
// 0x0038 (0x0038 - 0x0000)
struct Trap_Floor_Turret_C_AttemptAcquireTarget final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AFortPawn*                        Temp_object_Variable;                              // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidTarget_bValidTarget;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Trap_Floor_Turret_C_AttemptAcquireTarget) == 0x000008, "Wrong alignment on Trap_Floor_Turret_C_AttemptAcquireTarget");
static_assert(sizeof(Trap_Floor_Turret_C_AttemptAcquireTarget) == 0x000038, "Wrong size on Trap_Floor_Turret_C_AttemptAcquireTarget");
static_assert(offsetof(Trap_Floor_Turret_C_AttemptAcquireTarget, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Trap_Floor_Turret_C_AttemptAcquireTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_AttemptAcquireTarget, Temp_object_Variable) == 0x000008, "Member 'Trap_Floor_Turret_C_AttemptAcquireTarget::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_AttemptAcquireTarget, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'Trap_Floor_Turret_C_AttemptAcquireTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_AttemptAcquireTarget, CallFunc_Array_RemoveItem_ReturnValue) == 0x000014, "Member 'Trap_Floor_Turret_C_AttemptAcquireTarget::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_AttemptAcquireTarget, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Trap_Floor_Turret_C_AttemptAcquireTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_AttemptAcquireTarget, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'Trap_Floor_Turret_C_AttemptAcquireTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_AttemptAcquireTarget, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Trap_Floor_Turret_C_AttemptAcquireTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_AttemptAcquireTarget, CallFunc_Greater_IntInt_ReturnValue) == 0x000021, "Member 'Trap_Floor_Turret_C_AttemptAcquireTarget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_AttemptAcquireTarget, Temp_bool_True_if_break_was_hit_Variable) == 0x000022, "Member 'Trap_Floor_Turret_C_AttemptAcquireTarget::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_AttemptAcquireTarget, CallFunc_Array_Get_Item) == 0x000028, "Member 'Trap_Floor_Turret_C_AttemptAcquireTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_AttemptAcquireTarget, CallFunc_Array_Length_ReturnValue1) == 0x000030, "Member 'Trap_Floor_Turret_C_AttemptAcquireTarget::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_AttemptAcquireTarget, CallFunc_IsValidTarget_bValidTarget) == 0x000034, "Member 'Trap_Floor_Turret_C_AttemptAcquireTarget::CallFunc_IsValidTarget_bValidTarget' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_AttemptAcquireTarget, CallFunc_Less_IntInt_ReturnValue) == 0x000035, "Member 'Trap_Floor_Turret_C_AttemptAcquireTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_AttemptAcquireTarget, CallFunc_Not_PreBool_ReturnValue) == 0x000036, "Member 'Trap_Floor_Turret_C_AttemptAcquireTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_AttemptAcquireTarget, CallFunc_BooleanAND_ReturnValue) == 0x000037, "Member 'Trap_Floor_Turret_C_AttemptAcquireTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.IsValidTarget
// 0x0018 (0x0018 - 0x0000)
struct Trap_Floor_Turret_C_IsValidTarget final
{
public:
	class AFortPawn*                              PotentialTarget;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IncludeSimpleRangeCheck;                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IncludeObstructionCheck;                           // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bValidTarget;                                      // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortTeamAffiliation                          CallFunc_GetTeamAffiliation_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Trap_Floor_Turret_C_IsValidTarget) == 0x000008, "Wrong alignment on Trap_Floor_Turret_C_IsValidTarget");
static_assert(sizeof(Trap_Floor_Turret_C_IsValidTarget) == 0x000018, "Wrong size on Trap_Floor_Turret_C_IsValidTarget");
static_assert(offsetof(Trap_Floor_Turret_C_IsValidTarget, PotentialTarget) == 0x000000, "Member 'Trap_Floor_Turret_C_IsValidTarget::PotentialTarget' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsValidTarget, IncludeSimpleRangeCheck) == 0x000008, "Member 'Trap_Floor_Turret_C_IsValidTarget::IncludeSimpleRangeCheck' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsValidTarget, IncludeObstructionCheck) == 0x000009, "Member 'Trap_Floor_Turret_C_IsValidTarget::IncludeObstructionCheck' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsValidTarget, bValidTarget) == 0x00000A, "Member 'Trap_Floor_Turret_C_IsValidTarget::bValidTarget' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsValidTarget, CallFunc_IsValid_ReturnValue) == 0x00000B, "Member 'Trap_Floor_Turret_C_IsValidTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsValidTarget, CallFunc_GetTeamAffiliation_ReturnValue) == 0x00000C, "Member 'Trap_Floor_Turret_C_IsValidTarget::CallFunc_GetTeamAffiliation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsValidTarget, K2Node_SwitchEnum_CmpSuccess) == 0x00000D, "Member 'Trap_Floor_Turret_C_IsValidTarget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsValidTarget, CallFunc_IsDead_ReturnValue) == 0x00000E, "Member 'Trap_Floor_Turret_C_IsValidTarget::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsValidTarget, Temp_bool_Variable) == 0x00000F, "Member 'Trap_Floor_Turret_C_IsValidTarget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsValidTarget, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'Trap_Floor_Turret_C_IsValidTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.IsPawnInsideYawLimits
// 0x00A0 (0x00A0 - 0x0000)
struct Trap_Floor_Turret_C_IsPawnInsideYawLimits final
{
public:
	class AFortPawn*                              Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInsideYawLimits;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0024(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x006C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0078(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue1;                      // 0x0084(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Trap_Floor_Turret_C_IsPawnInsideYawLimits) == 0x000008, "Wrong alignment on Trap_Floor_Turret_C_IsPawnInsideYawLimits");
static_assert(sizeof(Trap_Floor_Turret_C_IsPawnInsideYawLimits) == 0x0000A0, "Wrong size on Trap_Floor_Turret_C_IsPawnInsideYawLimits");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsideYawLimits, Pawn) == 0x000000, "Member 'Trap_Floor_Turret_C_IsPawnInsideYawLimits::Pawn' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsideYawLimits, bInsideYawLimits) == 0x000008, "Member 'Trap_Floor_Turret_C_IsPawnInsideYawLimits::bInsideYawLimits' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsideYawLimits, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'Trap_Floor_Turret_C_IsPawnInsideYawLimits::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsideYawLimits, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'Trap_Floor_Turret_C_IsPawnInsideYawLimits::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsideYawLimits, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000024, "Member 'Trap_Floor_Turret_C_IsPawnInsideYawLimits::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsideYawLimits, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'Trap_Floor_Turret_C_IsPawnInsideYawLimits::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsideYawLimits, CallFunc_GetForwardVector_ReturnValue) == 0x00003C, "Member 'Trap_Floor_Turret_C_IsPawnInsideYawLimits::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsideYawLimits, CallFunc_BreakVector_X) == 0x000048, "Member 'Trap_Floor_Turret_C_IsPawnInsideYawLimits::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsideYawLimits, CallFunc_BreakVector_Y) == 0x00004C, "Member 'Trap_Floor_Turret_C_IsPawnInsideYawLimits::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsideYawLimits, CallFunc_BreakVector_Z) == 0x000050, "Member 'Trap_Floor_Turret_C_IsPawnInsideYawLimits::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsideYawLimits, CallFunc_BreakVector_X1) == 0x000054, "Member 'Trap_Floor_Turret_C_IsPawnInsideYawLimits::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsideYawLimits, CallFunc_BreakVector_Y1) == 0x000058, "Member 'Trap_Floor_Turret_C_IsPawnInsideYawLimits::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsideYawLimits, CallFunc_BreakVector_Z1) == 0x00005C, "Member 'Trap_Floor_Turret_C_IsPawnInsideYawLimits::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsideYawLimits, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'Trap_Floor_Turret_C_IsPawnInsideYawLimits::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsideYawLimits, CallFunc_MakeVector_ReturnValue1) == 0x00006C, "Member 'Trap_Floor_Turret_C_IsPawnInsideYawLimits::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsideYawLimits, CallFunc_Normal_ReturnValue) == 0x000078, "Member 'Trap_Floor_Turret_C_IsPawnInsideYawLimits::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsideYawLimits, CallFunc_Normal_ReturnValue1) == 0x000084, "Member 'Trap_Floor_Turret_C_IsPawnInsideYawLimits::CallFunc_Normal_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsideYawLimits, CallFunc_Dot_VectorVector_ReturnValue) == 0x000090, "Member 'Trap_Floor_Turret_C_IsPawnInsideYawLimits::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsideYawLimits, CallFunc_DegAcos_ReturnValue) == 0x000094, "Member 'Trap_Floor_Turret_C_IsPawnInsideYawLimits::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsideYawLimits, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000098, "Member 'Trap_Floor_Turret_C_IsPawnInsideYawLimits::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.IsPawnInsidePitchLimits
// 0x00B8 (0x00B8 - 0x0000)
struct Trap_Floor_Turret_C_IsPawnInsidePitchLimits final
{
public:
	class AFortPawn*                              Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInsideYawLimits;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0018(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0048(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0054(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue1;                // 0x006C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0074(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue1;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0084(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x0090(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue1;                      // 0x009C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits) == 0x000008, "Wrong alignment on Trap_Floor_Turret_C_IsPawnInsidePitchLimits");
static_assert(sizeof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits) == 0x0000B8, "Wrong size on Trap_Floor_Turret_C_IsPawnInsidePitchLimits");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits, Pawn) == 0x000000, "Member 'Trap_Floor_Turret_C_IsPawnInsidePitchLimits::Pawn' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits, bInsideYawLimits) == 0x000008, "Member 'Trap_Floor_Turret_C_IsPawnInsidePitchLimits::bInsideYawLimits' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'Trap_Floor_Turret_C_IsPawnInsidePitchLimits::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000018, "Member 'Trap_Floor_Turret_C_IsPawnInsidePitchLimits::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits, CallFunc_GetForwardVector_ReturnValue) == 0x000024, "Member 'Trap_Floor_Turret_C_IsPawnInsidePitchLimits::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000030, "Member 'Trap_Floor_Turret_C_IsPawnInsidePitchLimits::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits, CallFunc_BreakVector_X) == 0x00003C, "Member 'Trap_Floor_Turret_C_IsPawnInsidePitchLimits::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits, CallFunc_BreakVector_Y) == 0x000040, "Member 'Trap_Floor_Turret_C_IsPawnInsidePitchLimits::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits, CallFunc_BreakVector_Z) == 0x000044, "Member 'Trap_Floor_Turret_C_IsPawnInsidePitchLimits::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000048, "Member 'Trap_Floor_Turret_C_IsPawnInsidePitchLimits::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits, CallFunc_MakeVector2D_ReturnValue) == 0x000054, "Member 'Trap_Floor_Turret_C_IsPawnInsidePitchLimits::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits, CallFunc_BreakVector_X1) == 0x00005C, "Member 'Trap_Floor_Turret_C_IsPawnInsidePitchLimits::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits, CallFunc_BreakVector_Y1) == 0x000060, "Member 'Trap_Floor_Turret_C_IsPawnInsidePitchLimits::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits, CallFunc_BreakVector_Z1) == 0x000064, "Member 'Trap_Floor_Turret_C_IsPawnInsidePitchLimits::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits, CallFunc_VSize2D_ReturnValue) == 0x000068, "Member 'Trap_Floor_Turret_C_IsPawnInsidePitchLimits::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits, CallFunc_MakeVector2D_ReturnValue1) == 0x00006C, "Member 'Trap_Floor_Turret_C_IsPawnInsidePitchLimits::CallFunc_MakeVector2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits, CallFunc_MakeVector_ReturnValue) == 0x000074, "Member 'Trap_Floor_Turret_C_IsPawnInsidePitchLimits::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits, CallFunc_VSize2D_ReturnValue1) == 0x000080, "Member 'Trap_Floor_Turret_C_IsPawnInsidePitchLimits::CallFunc_VSize2D_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits, CallFunc_Normal_ReturnValue) == 0x000084, "Member 'Trap_Floor_Turret_C_IsPawnInsidePitchLimits::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits, CallFunc_MakeVector_ReturnValue1) == 0x000090, "Member 'Trap_Floor_Turret_C_IsPawnInsidePitchLimits::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits, CallFunc_Normal_ReturnValue1) == 0x00009C, "Member 'Trap_Floor_Turret_C_IsPawnInsidePitchLimits::CallFunc_Normal_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000A8, "Member 'Trap_Floor_Turret_C_IsPawnInsidePitchLimits::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits, CallFunc_DegAcos_ReturnValue) == 0x0000AC, "Member 'Trap_Floor_Turret_C_IsPawnInsidePitchLimits::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_IsPawnInsidePitchLimits, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000B0, "Member 'Trap_Floor_Turret_C_IsPawnInsidePitchLimits::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.SetTargetAcquisitionTimer
// 0x0008 (0x0008 - 0x0000)
struct Trap_Floor_Turret_C_SetTargetAcquisitionTimer final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0000(0x0008)(NoDestructor)
};
static_assert(alignof(Trap_Floor_Turret_C_SetTargetAcquisitionTimer) == 0x000008, "Wrong alignment on Trap_Floor_Turret_C_SetTargetAcquisitionTimer");
static_assert(sizeof(Trap_Floor_Turret_C_SetTargetAcquisitionTimer) == 0x000008, "Wrong size on Trap_Floor_Turret_C_SetTargetAcquisitionTimer");
static_assert(offsetof(Trap_Floor_Turret_C_SetTargetAcquisitionTimer, CallFunc_K2_SetTimer_ReturnValue) == 0x000000, "Member 'Trap_Floor_Turret_C_SetTargetAcquisitionTimer::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.OnRep_IsDeployed
// 0x0010 (0x0010 - 0x0000)
struct Trap_Floor_Turret_C_OnRep_IsDeployed final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Trap_Floor_Turret_C_OnRep_IsDeployed) == 0x000004, "Wrong alignment on Trap_Floor_Turret_C_OnRep_IsDeployed");
static_assert(sizeof(Trap_Floor_Turret_C_OnRep_IsDeployed) == 0x000010, "Wrong size on Trap_Floor_Turret_C_OnRep_IsDeployed");
static_assert(offsetof(Trap_Floor_Turret_C_OnRep_IsDeployed, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'Trap_Floor_Turret_C_OnRep_IsDeployed::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_OnRep_IsDeployed, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'Trap_Floor_Turret_C_OnRep_IsDeployed::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.OnNewPotentialTargetTouched
// 0x0010 (0x0010 - 0x0000)
struct Trap_Floor_Turret_C_OnNewPotentialTargetTouched final
{
public:
	class AFortPawn*                              PotentialTargetPawn;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidTarget_bValidTarget;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trap_Floor_Turret_C_OnNewPotentialTargetTouched) == 0x000008, "Wrong alignment on Trap_Floor_Turret_C_OnNewPotentialTargetTouched");
static_assert(sizeof(Trap_Floor_Turret_C_OnNewPotentialTargetTouched) == 0x000010, "Wrong size on Trap_Floor_Turret_C_OnNewPotentialTargetTouched");
static_assert(offsetof(Trap_Floor_Turret_C_OnNewPotentialTargetTouched, PotentialTargetPawn) == 0x000000, "Member 'Trap_Floor_Turret_C_OnNewPotentialTargetTouched::PotentialTargetPawn' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_OnNewPotentialTargetTouched, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Trap_Floor_Turret_C_OnNewPotentialTargetTouched::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_OnNewPotentialTargetTouched, CallFunc_IsValidTarget_bValidTarget) == 0x000009, "Member 'Trap_Floor_Turret_C_OnNewPotentialTargetTouched::CallFunc_IsValidTarget_bValidTarget' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_OnNewPotentialTargetTouched, CallFunc_IsValid_ReturnValue1) == 0x00000A, "Member 'Trap_Floor_Turret_C_OnNewPotentialTargetTouched::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_OnNewPotentialTargetTouched, CallFunc_Array_AddUnique_ReturnValue) == 0x00000C, "Member 'Trap_Floor_Turret_C_OnNewPotentialTargetTouched::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.OnPotentialTargetUntouched
// 0x0010 (0x0010 - 0x0000)
struct Trap_Floor_Turret_C_OnPotentialTargetUntouched final
{
public:
	class AFortPawn*                              UntouchedPotentialTarget;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Trap_Floor_Turret_C_OnPotentialTargetUntouched) == 0x000008, "Wrong alignment on Trap_Floor_Turret_C_OnPotentialTargetUntouched");
static_assert(sizeof(Trap_Floor_Turret_C_OnPotentialTargetUntouched) == 0x000010, "Wrong size on Trap_Floor_Turret_C_OnPotentialTargetUntouched");
static_assert(offsetof(Trap_Floor_Turret_C_OnPotentialTargetUntouched, UntouchedPotentialTarget) == 0x000000, "Member 'Trap_Floor_Turret_C_OnPotentialTargetUntouched::UntouchedPotentialTarget' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_OnPotentialTargetUntouched, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000008, "Member 'Trap_Floor_Turret_C_OnPotentialTargetUntouched::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_OnPotentialTargetUntouched, CallFunc_Array_RemoveItem_ReturnValue) == 0x000009, "Member 'Trap_Floor_Turret_C_OnPotentialTargetUntouched::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.AttemptFire
// 0x0028 (0x0028 - 0x0000)
struct Trap_Floor_Turret_C_AttemptFire final
{
public:
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryActivateAbilitiesByTag_ReturnValue;    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidTarget_bValidTarget;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldFire_ShouldFire;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Trap_Floor_Turret_C_AttemptFire) == 0x000008, "Wrong alignment on Trap_Floor_Turret_C_AttemptFire");
static_assert(sizeof(Trap_Floor_Turret_C_AttemptFire) == 0x000028, "Wrong size on Trap_Floor_Turret_C_AttemptFire");
static_assert(offsetof(Trap_Floor_Turret_C_AttemptFire, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000000, "Member 'Trap_Floor_Turret_C_AttemptFire::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_AttemptFire, CallFunc_TryActivateAbilitiesByTag_ReturnValue) == 0x000008, "Member 'Trap_Floor_Turret_C_AttemptFire::CallFunc_TryActivateAbilitiesByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_AttemptFire, CallFunc_IsValidTarget_bValidTarget) == 0x000009, "Member 'Trap_Floor_Turret_C_AttemptFire::CallFunc_IsValidTarget_bValidTarget' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_AttemptFire, CallFunc_Conv_BoolToString_ReturnValue) == 0x000010, "Member 'Trap_Floor_Turret_C_AttemptFire::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_AttemptFire, CallFunc_ShouldFire_ShouldFire) == 0x000020, "Member 'Trap_Floor_Turret_C_AttemptFire::CallFunc_ShouldFire_ShouldFire' has a wrong offset!");

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.SpawnTracer
// 0x0050 (0x0050 - 0x0000)
struct Trap_Floor_Turret_C_SpawnTracer final
{
public:
	struct FVector                                HitLocation_0;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortTracerBase*                        CallFunc_SpawnTracerFromPool_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0044(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trap_Floor_Turret_C_SpawnTracer) == 0x000008, "Wrong alignment on Trap_Floor_Turret_C_SpawnTracer");
static_assert(sizeof(Trap_Floor_Turret_C_SpawnTracer) == 0x000050, "Wrong size on Trap_Floor_Turret_C_SpawnTracer");
static_assert(offsetof(Trap_Floor_Turret_C_SpawnTracer, HitLocation_0) == 0x000000, "Member 'Trap_Floor_Turret_C_SpawnTracer::HitLocation_0' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_SpawnTracer, CallFunc_GetSocketLocation_ReturnValue) == 0x00000C, "Member 'Trap_Floor_Turret_C_SpawnTracer::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_SpawnTracer, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x000018, "Member 'Trap_Floor_Turret_C_SpawnTracer::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_SpawnTracer, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00001C, "Member 'Trap_Floor_Turret_C_SpawnTracer::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_SpawnTracer, CallFunc_VSize_ReturnValue) == 0x000028, "Member 'Trap_Floor_Turret_C_SpawnTracer::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_SpawnTracer, CallFunc_SpawnTracerFromPool_ReturnValue) == 0x000030, "Member 'Trap_Floor_Turret_C_SpawnTracer::CallFunc_SpawnTracerFromPool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_SpawnTracer, CallFunc_NormalizeToRange_ReturnValue) == 0x000038, "Member 'Trap_Floor_Turret_C_SpawnTracer::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_SpawnTracer, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'Trap_Floor_Turret_C_SpawnTracer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_SpawnTracer, CallFunc_FClamp_ReturnValue) == 0x000040, "Member 'Trap_Floor_Turret_C_SpawnTracer::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_SpawnTracer, CallFunc_VLerp_ReturnValue) == 0x000044, "Member 'Trap_Floor_Turret_C_SpawnTracer::CallFunc_VLerp_ReturnValue' has a wrong offset!");

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.ShouldFire
// 0x00A0 (0x00A0 - 0x0000)
struct Trap_Floor_Turret_C_ShouldFire final
{
public:
	bool                                          ShouldFire_0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0064(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0070(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x007C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0088(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Trap_Floor_Turret_C_ShouldFire) == 0x000010, "Wrong alignment on Trap_Floor_Turret_C_ShouldFire");
static_assert(sizeof(Trap_Floor_Turret_C_ShouldFire) == 0x0000A0, "Wrong size on Trap_Floor_Turret_C_ShouldFire");
static_assert(offsetof(Trap_Floor_Turret_C_ShouldFire, ShouldFire_0) == 0x000000, "Member 'Trap_Floor_Turret_C_ShouldFire::ShouldFire_0' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ShouldFire, CallFunc_GetSocketTransform_ReturnValue) == 0x000010, "Member 'Trap_Floor_Turret_C_ShouldFire::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ShouldFire, CallFunc_BreakTransform_Location) == 0x000040, "Member 'Trap_Floor_Turret_C_ShouldFire::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ShouldFire, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'Trap_Floor_Turret_C_ShouldFire::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ShouldFire, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'Trap_Floor_Turret_C_ShouldFire::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ShouldFire, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000064, "Member 'Trap_Floor_Turret_C_ShouldFire::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ShouldFire, CallFunc_GetForwardVector_ReturnValue) == 0x000070, "Member 'Trap_Floor_Turret_C_ShouldFire::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ShouldFire, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00007C, "Member 'Trap_Floor_Turret_C_ShouldFire::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ShouldFire, CallFunc_Normal_ReturnValue) == 0x000088, "Member 'Trap_Floor_Turret_C_ShouldFire::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ShouldFire, CallFunc_Dot_VectorVector_ReturnValue) == 0x000094, "Member 'Trap_Floor_Turret_C_ShouldFire::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_ShouldFire, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000098, "Member 'Trap_Floor_Turret_C_ShouldFire::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function Trap_Floor_Turret.Trap_Floor_Turret_C.SpawnImpactEffects
// 0x0038 (0x0038 - 0x0000)
struct Trap_Floor_Turret_C_SpawnImpactEffects final
{
public:
	struct FVector                                HitLocation_0;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0024(0x000C)(IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trap_Floor_Turret_C_SpawnImpactEffects) == 0x000008, "Wrong alignment on Trap_Floor_Turret_C_SpawnImpactEffects");
static_assert(sizeof(Trap_Floor_Turret_C_SpawnImpactEffects) == 0x000038, "Wrong size on Trap_Floor_Turret_C_SpawnImpactEffects");
static_assert(offsetof(Trap_Floor_Turret_C_SpawnImpactEffects, HitLocation_0) == 0x000000, "Member 'Trap_Floor_Turret_C_SpawnImpactEffects::HitLocation_0' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_SpawnImpactEffects, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'Trap_Floor_Turret_C_SpawnImpactEffects::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_SpawnImpactEffects, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000018, "Member 'Trap_Floor_Turret_C_SpawnImpactEffects::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_SpawnImpactEffects, CallFunc_MakeRotFromX_ReturnValue) == 0x000024, "Member 'Trap_Floor_Turret_C_SpawnImpactEffects::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trap_Floor_Turret_C_SpawnImpactEffects, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000030, "Member 'Trap_Floor_Turret_C_SpawnImpactEffects::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");

}


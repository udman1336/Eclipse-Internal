#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ProjectileTrajectory_Athena_SnapToGrid

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_ProjectileTrajectory_Athena_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ProjectileTrajectory_Athena_SnapToGrid.BP_ProjectileTrajectory_Athena_SnapToGrid_C
// 0x0058 (0x03B8 - 0x0360)
class ABP_ProjectileTrajectory_Athena_SnapToGrid_C final : public ABP_ProjectileTrajectory_Athena_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_ProjectileTrajectory_Athena_SnapToGrid_C; // 0x0360(0x0008)(Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Wall1;                                             // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ceiling;                                           // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Floor;                                             // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Wall4;                                             // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Wall3;                                             // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Wall2;                                             // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Building;                                          // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         GridSizeXY;                                        // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GridSizeZ;                                         // 0x03A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GridYOffset;                                       // 0x03A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastPointDist;                                     // 0x03AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GridZOffset;                                       // 0x03B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ProjectileTrajectory_Athena_SnapToGrid(int32 EntryPoint);
	void SetTrajectorySpline(TArray<struct FVector>& SplinePoints, TArray<struct FVector>& SplineTangents);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ProjectileTrajectory_Athena_SnapToGrid_C">();
	}
	static class ABP_ProjectileTrajectory_Athena_SnapToGrid_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ProjectileTrajectory_Athena_SnapToGrid_C>();
	}
};
static_assert(alignof(ABP_ProjectileTrajectory_Athena_SnapToGrid_C) == 0x000008, "Wrong alignment on ABP_ProjectileTrajectory_Athena_SnapToGrid_C");
static_assert(sizeof(ABP_ProjectileTrajectory_Athena_SnapToGrid_C) == 0x0003B8, "Wrong size on ABP_ProjectileTrajectory_Athena_SnapToGrid_C");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGrid_C, UberGraphFrame_BP_ProjectileTrajectory_Athena_SnapToGrid_C) == 0x000360, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGrid_C::UberGraphFrame_BP_ProjectileTrajectory_Athena_SnapToGrid_C' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGrid_C, Wall1) == 0x000368, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGrid_C::Wall1' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGrid_C, Ceiling) == 0x000370, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGrid_C::Ceiling' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGrid_C, Floor) == 0x000378, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGrid_C::Floor' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGrid_C, Wall4) == 0x000380, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGrid_C::Wall4' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGrid_C, Wall3) == 0x000388, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGrid_C::Wall3' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGrid_C, Wall2) == 0x000390, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGrid_C::Wall2' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGrid_C, Building) == 0x000398, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGrid_C::Building' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGrid_C, GridSizeXY) == 0x0003A0, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGrid_C::GridSizeXY' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGrid_C, GridSizeZ) == 0x0003A4, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGrid_C::GridSizeZ' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGrid_C, GridYOffset) == 0x0003A8, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGrid_C::GridYOffset' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGrid_C, LastPointDist) == 0x0003AC, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGrid_C::LastPointDist' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_Athena_SnapToGrid_C, GridZOffset) == 0x0003B0, "Member 'ABP_ProjectileTrajectory_Athena_SnapToGrid_C::GridZOffset' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortBTService_ForceNormalAILOD

#include "Basic.hpp"


namespace SDK::Params
{

// Function FortBTService_ForceNormalAILOD.FortBTService_ForceNormalAILOD_C.ExecuteUbergraph_FortBTService_ForceNormalAILOD
// 0x0038 (0x0038 - 0x0000)
struct FortBTService_ForceNormalAILOD_C_ExecuteUbergraph_FortBTService_ForceNormalAILOD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OwnerActor;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortAIController*                      K2Node_DynamicCast_AsFort_AIController;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OwnerActor1;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortAIController*                      K2Node_DynamicCast_AsFort_AIController1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FortBTService_ForceNormalAILOD_C_ExecuteUbergraph_FortBTService_ForceNormalAILOD) == 0x000008, "Wrong alignment on FortBTService_ForceNormalAILOD_C_ExecuteUbergraph_FortBTService_ForceNormalAILOD");
static_assert(sizeof(FortBTService_ForceNormalAILOD_C_ExecuteUbergraph_FortBTService_ForceNormalAILOD) == 0x000038, "Wrong size on FortBTService_ForceNormalAILOD_C_ExecuteUbergraph_FortBTService_ForceNormalAILOD");
static_assert(offsetof(FortBTService_ForceNormalAILOD_C_ExecuteUbergraph_FortBTService_ForceNormalAILOD, EntryPoint) == 0x000000, "Member 'FortBTService_ForceNormalAILOD_C_ExecuteUbergraph_FortBTService_ForceNormalAILOD::EntryPoint' has a wrong offset!");
static_assert(offsetof(FortBTService_ForceNormalAILOD_C_ExecuteUbergraph_FortBTService_ForceNormalAILOD, K2Node_Event_OwnerActor) == 0x000008, "Member 'FortBTService_ForceNormalAILOD_C_ExecuteUbergraph_FortBTService_ForceNormalAILOD::K2Node_Event_OwnerActor' has a wrong offset!");
static_assert(offsetof(FortBTService_ForceNormalAILOD_C_ExecuteUbergraph_FortBTService_ForceNormalAILOD, K2Node_DynamicCast_AsFort_AIController) == 0x000010, "Member 'FortBTService_ForceNormalAILOD_C_ExecuteUbergraph_FortBTService_ForceNormalAILOD::K2Node_DynamicCast_AsFort_AIController' has a wrong offset!");
static_assert(offsetof(FortBTService_ForceNormalAILOD_C_ExecuteUbergraph_FortBTService_ForceNormalAILOD, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'FortBTService_ForceNormalAILOD_C_ExecuteUbergraph_FortBTService_ForceNormalAILOD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FortBTService_ForceNormalAILOD_C_ExecuteUbergraph_FortBTService_ForceNormalAILOD, K2Node_Event_OwnerActor1) == 0x000020, "Member 'FortBTService_ForceNormalAILOD_C_ExecuteUbergraph_FortBTService_ForceNormalAILOD::K2Node_Event_OwnerActor1' has a wrong offset!");
static_assert(offsetof(FortBTService_ForceNormalAILOD_C_ExecuteUbergraph_FortBTService_ForceNormalAILOD, K2Node_DynamicCast_AsFort_AIController1) == 0x000028, "Member 'FortBTService_ForceNormalAILOD_C_ExecuteUbergraph_FortBTService_ForceNormalAILOD::K2Node_DynamicCast_AsFort_AIController1' has a wrong offset!");
static_assert(offsetof(FortBTService_ForceNormalAILOD_C_ExecuteUbergraph_FortBTService_ForceNormalAILOD, K2Node_DynamicCast_bSuccess1) == 0x000030, "Member 'FortBTService_ForceNormalAILOD_C_ExecuteUbergraph_FortBTService_ForceNormalAILOD::K2Node_DynamicCast_bSuccess1' has a wrong offset!");

// Function FortBTService_ForceNormalAILOD.FortBTService_ForceNormalAILOD_C.ReceiveActivation
// 0x0008 (0x0008 - 0x0000)
struct FortBTService_ForceNormalAILOD_C_ReceiveActivation final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortBTService_ForceNormalAILOD_C_ReceiveActivation) == 0x000008, "Wrong alignment on FortBTService_ForceNormalAILOD_C_ReceiveActivation");
static_assert(sizeof(FortBTService_ForceNormalAILOD_C_ReceiveActivation) == 0x000008, "Wrong size on FortBTService_ForceNormalAILOD_C_ReceiveActivation");
static_assert(offsetof(FortBTService_ForceNormalAILOD_C_ReceiveActivation, OwnerActor) == 0x000000, "Member 'FortBTService_ForceNormalAILOD_C_ReceiveActivation::OwnerActor' has a wrong offset!");

// Function FortBTService_ForceNormalAILOD.FortBTService_ForceNormalAILOD_C.ReceiveDeactivation
// 0x0008 (0x0008 - 0x0000)
struct FortBTService_ForceNormalAILOD_C_ReceiveDeactivation final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortBTService_ForceNormalAILOD_C_ReceiveDeactivation) == 0x000008, "Wrong alignment on FortBTService_ForceNormalAILOD_C_ReceiveDeactivation");
static_assert(sizeof(FortBTService_ForceNormalAILOD_C_ReceiveDeactivation) == 0x000008, "Wrong size on FortBTService_ForceNormalAILOD_C_ReceiveDeactivation");
static_assert(offsetof(FortBTService_ForceNormalAILOD_C_ReceiveDeactivation, OwnerActor) == 0x000000, "Member 'FortBTService_ForceNormalAILOD_C_ReceiveDeactivation::OwnerActor' has a wrong offset!");

}


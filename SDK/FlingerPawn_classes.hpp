#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FlingerPawn

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "ElementalEnum_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass FlingerPawn.FlingerPawn_C
// 0x0150 (0x1D30 - 0x1BE0)
class AFlingerPawn_C final : public AFortPawn_Flinger
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1BE0(0x0008)(Transient, DuplicateTransient)
	ETimelineDirection                            UpdateMaterialParamsTL__Direction_6C35BAD84D71F4DBDE216893257CE551; // 0x1BE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BE9[0x7];                                     // 0x1BE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     UpdateMaterialParamsTL;                            // 0x1BF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_ColorFadeOutTrack_FF5DFFCA47FEE11FBE8FFF9B5CFA3D28; // 0x1BF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_FadeInTrack_FF5DFFCA47FEE11FBE8FFF9B5CFA3D28; // 0x1BFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_FF5DFFCA47FEE11FBE8FFF9B5CFA3D28; // 0x1C00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C01[0x7];                                     // 0x1C01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x1C08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MontagePlayTime;                                   // 0x1C10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C14[0x4];                                     // 0x1C14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAIPawn*                            PawnHeldByFlinger;                                 // 0x1C18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_WasThisAMeleeStrike;                            // 0x1C20(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	ElementalEnum                                 ElementalType;                                     // 0x1C40(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_1C41[0x7];                                     // 0x1C41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               AmbientParticleEffect;                             // 0x1C48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ImpactMeleeSocket;                                 // 0x1C50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        ImpactParticles_Default;                           // 0x1C58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        ImpactParticles_Wood;                              // 0x1C60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        ImpactParticles_Stone;                             // 0x1C68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        ImpactParticles_Metal;                             // 0x1C70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        ImpactParticles_HumanFlesh;                        // 0x1C78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MeleeImpact_UseSocketTransforms;                   // 0x1C80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C81[0x7];                                     // 0x1C81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Impact_MeleeSocket;                                // 0x1C88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_NPCAbilityNonAttackRoar;                        // 0x1C90(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UParticleSystemComponent*               FlingerRangedFX;                                   // 0x1CB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FlingerRangedSkullFXTemplate;                      // 0x1CB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FlingerRangedHuskFXTemplate;                       // 0x1CC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Dynamic_Material_Instance;                         // 0x1CC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Death_Effects;                                     // 0x1CD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        HQ_Death_Particle_System;                          // 0x1CD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        LQ_Death_Particle_System;                          // 0x1CE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MID1;                                              // 0x1CE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              PawnBumpedByFlinger;                               // 0x1CF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PushDuration;                                      // 0x1CF8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PushYawAngle;                                      // 0x1CFC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PushVelocity;                                      // 0x1D00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isEnraged;                                         // 0x1D04(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D05[0x3];                                     // 0x1D05(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Dynamic_Material_Instance_Accessory_1;             // 0x1D08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AShielderSpringArm_C*                   ShieldArm;                                         // 0x1D10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 ShieldSkeletalMesh;                                // 0x1D18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Slow_Shackle_Scale;                                // 0x1D20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_FlingerPawn(int32 EntryPoint);
	void GameplayCue_Damage_Shielded(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Shield_Destroyed(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Shield_Reapplied(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_GameplayModifiers_OnLowHealth_Enrage(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void OnFinishedEncounterSpawn();
	void OnStartedEncounterSpawn();
	void BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void SpawnDeathFX();
	void GameplayCue_NPC_Flinger_Ranged_Grab_NPC(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_NPC_Ranged_Throw(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_NPC_Ranged_Grab(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void GameplayCue_Impact_Physical_Creature(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void ReceiveBeginPlay();
	void AdditiveHitReactDelay();
	void OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void PortalCollision(bool Collide_);
	void PortalFX();
	void PortalGet(class ABuildingActor* BuildingActor, TArray<class ABuildingActor*>& BuildingActorList, class AActor* BT);
	void TakerSoulSuckInterrupted();
	void PortalClear();
	void PortalAdd(class ABuildingActor* BuildingActor, TArray<class ABuildingActor*>& BuildingActorList);
	void TakerSoulSuckSoundEnd();
	void TakerSoulSuckSoundBegin(bool Success);
	void TakerAttackFSM(bool SuccessfulHit);
	void IsTakerWallPortalAvailable(bool Portal_Available_);
	void TakerWallPortalBehavior(class AActor* BuildingPart, class UBTTask_BlueprintBase* Task, const struct FVector& DesiredMoveLocation, bool Debug);
	void EndTakerSwoopAttack();
	void BeginTakerSwoopAttack();
	void ResetTakerSpecialAttackTimer(bool Swoop, bool SoulSuckMelee, bool Portal);
	void VerifyTakerAttack(bool SpecialAttack, bool Swoop, bool Soul_Suck, bool Portal);
	void HuskEvadeStart();
	void MantleEnd();
	void MantleStart(const struct FVector& StartPos, const struct FVector& MidPos, const struct FVector& EndPos, bool LowWall, bool MidWall, bool FullWall, bool WindowWall);
	void FlingerEnemyDied(class APawn* PawnThatDied);
	void AlertEnemySpawnedByFlinger(const struct FVector& PushMomentum_0, float PushDuration_0, class APawn* OwningFlinger);
	void FlingerEnemyFailedToSpawn(class AFortProjectileBase* FailedProjectile);
	void FlingerThrewAProjectileContainingAnEnemy(class AFortProjectileBase* Projectile);
	void FlingerCan_tSpawnAnEnemy();
	void FlingerCanSpawnAnEnemy();
	void CanFlingerSpawnAnEnemy(class AActor* ActorWhoAsked);
	void FlingerSpawnedAnEnemy(class AFortAIPawn* EnemySpawned, class AFortProjectileBase* ProjectileThatSpawnedThisEnemy);
	void UpdateMaterialParamsTL__UpdateFunc();
	void UpdateMaterialParamsTL__FinishedFunc();
	void Timeline_0__Spawn__EventFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void UserConstructionScript();
	void StopDeathFX();
	void StopMaterialTimeline();
	bool OnReceiveSpawnGroup();
	bool IsReadyToReceiveNewSpawnGroup();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FlingerPawn_C">();
	}
	static class AFlingerPawn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFlingerPawn_C>();
	}
};
static_assert(alignof(AFlingerPawn_C) == 0x000010, "Wrong alignment on AFlingerPawn_C");
static_assert(sizeof(AFlingerPawn_C) == 0x001D30, "Wrong size on AFlingerPawn_C");
static_assert(offsetof(AFlingerPawn_C, UberGraphFrame) == 0x001BE0, "Member 'AFlingerPawn_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, UpdateMaterialParamsTL__Direction_6C35BAD84D71F4DBDE216893257CE551) == 0x001BE8, "Member 'AFlingerPawn_C::UpdateMaterialParamsTL__Direction_6C35BAD84D71F4DBDE216893257CE551' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, UpdateMaterialParamsTL) == 0x001BF0, "Member 'AFlingerPawn_C::UpdateMaterialParamsTL' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, Timeline_0_ColorFadeOutTrack_FF5DFFCA47FEE11FBE8FFF9B5CFA3D28) == 0x001BF8, "Member 'AFlingerPawn_C::Timeline_0_ColorFadeOutTrack_FF5DFFCA47FEE11FBE8FFF9B5CFA3D28' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, Timeline_0_FadeInTrack_FF5DFFCA47FEE11FBE8FFF9B5CFA3D28) == 0x001BFC, "Member 'AFlingerPawn_C::Timeline_0_FadeInTrack_FF5DFFCA47FEE11FBE8FFF9B5CFA3D28' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, Timeline_0__Direction_FF5DFFCA47FEE11FBE8FFF9B5CFA3D28) == 0x001C00, "Member 'AFlingerPawn_C::Timeline_0__Direction_FF5DFFCA47FEE11FBE8FFF9B5CFA3D28' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, Timeline_0) == 0x001C08, "Member 'AFlingerPawn_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, MontagePlayTime) == 0x001C10, "Member 'AFlingerPawn_C::MontagePlayTime' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, PawnHeldByFlinger) == 0x001C18, "Member 'AFlingerPawn_C::PawnHeldByFlinger' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, TC_WasThisAMeleeStrike) == 0x001C20, "Member 'AFlingerPawn_C::TC_WasThisAMeleeStrike' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, ElementalType) == 0x001C40, "Member 'AFlingerPawn_C::ElementalType' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, AmbientParticleEffect) == 0x001C48, "Member 'AFlingerPawn_C::AmbientParticleEffect' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, ImpactMeleeSocket) == 0x001C50, "Member 'AFlingerPawn_C::ImpactMeleeSocket' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, ImpactParticles_Default) == 0x001C58, "Member 'AFlingerPawn_C::ImpactParticles_Default' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, ImpactParticles_Wood) == 0x001C60, "Member 'AFlingerPawn_C::ImpactParticles_Wood' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, ImpactParticles_Stone) == 0x001C68, "Member 'AFlingerPawn_C::ImpactParticles_Stone' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, ImpactParticles_Metal) == 0x001C70, "Member 'AFlingerPawn_C::ImpactParticles_Metal' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, ImpactParticles_HumanFlesh) == 0x001C78, "Member 'AFlingerPawn_C::ImpactParticles_HumanFlesh' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, MeleeImpact_UseSocketTransforms) == 0x001C80, "Member 'AFlingerPawn_C::MeleeImpact_UseSocketTransforms' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, Impact_MeleeSocket) == 0x001C88, "Member 'AFlingerPawn_C::Impact_MeleeSocket' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, TC_NPCAbilityNonAttackRoar) == 0x001C90, "Member 'AFlingerPawn_C::TC_NPCAbilityNonAttackRoar' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, FlingerRangedFX) == 0x001CB0, "Member 'AFlingerPawn_C::FlingerRangedFX' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, FlingerRangedSkullFXTemplate) == 0x001CB8, "Member 'AFlingerPawn_C::FlingerRangedSkullFXTemplate' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, FlingerRangedHuskFXTemplate) == 0x001CC0, "Member 'AFlingerPawn_C::FlingerRangedHuskFXTemplate' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, Dynamic_Material_Instance) == 0x001CC8, "Member 'AFlingerPawn_C::Dynamic_Material_Instance' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, Death_Effects) == 0x001CD0, "Member 'AFlingerPawn_C::Death_Effects' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, HQ_Death_Particle_System) == 0x001CD8, "Member 'AFlingerPawn_C::HQ_Death_Particle_System' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, LQ_Death_Particle_System) == 0x001CE0, "Member 'AFlingerPawn_C::LQ_Death_Particle_System' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, MID1) == 0x001CE8, "Member 'AFlingerPawn_C::MID1' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, PawnBumpedByFlinger) == 0x001CF0, "Member 'AFlingerPawn_C::PawnBumpedByFlinger' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, PushDuration) == 0x001CF8, "Member 'AFlingerPawn_C::PushDuration' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, PushYawAngle) == 0x001CFC, "Member 'AFlingerPawn_C::PushYawAngle' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, PushVelocity) == 0x001D00, "Member 'AFlingerPawn_C::PushVelocity' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, isEnraged) == 0x001D04, "Member 'AFlingerPawn_C::isEnraged' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, Dynamic_Material_Instance_Accessory_1) == 0x001D08, "Member 'AFlingerPawn_C::Dynamic_Material_Instance_Accessory_1' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, ShieldArm) == 0x001D10, "Member 'AFlingerPawn_C::ShieldArm' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, ShieldSkeletalMesh) == 0x001D18, "Member 'AFlingerPawn_C::ShieldSkeletalMesh' has a wrong offset!");
static_assert(offsetof(AFlingerPawn_C, Slow_Shackle_Scale) == 0x001D20, "Member 'AFlingerPawn_C::Slow_Shackle_Scale' has a wrong offset!");

}


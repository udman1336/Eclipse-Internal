#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengeBundleCategoryHeader

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ChallengeBundleCategoryHeader.ChallengeBundleCategoryHeader_C
// 0x0048 (0x0418 - 0x03D0)
class UChallengeBundleCategoryHeader_C final : public UFortChallengeBundleWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03D0(0x0008)(Transient, DuplicateTransient)
	class UImage*                                 BattlePassImage;                                   // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                BoundBreakSpacer;                                  // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          BundleCategoryBorderCB;                            // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       BundleCategoryName;                                // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                IconSpacer;                                        // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LockedIcon;                                        // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               VerticalSizeSB;                                    // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IconBreakBounds;                                   // 0x0410(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ChallengeBundleCategoryHeader(int32 EntryPoint);
	void OnBundleUpdated();
	void PreConstruct(bool IsDesignTime);
	void UpdateBundle();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ChallengeBundleCategoryHeader_C">();
	}
	static class UChallengeBundleCategoryHeader_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChallengeBundleCategoryHeader_C>();
	}
};
static_assert(alignof(UChallengeBundleCategoryHeader_C) == 0x000008, "Wrong alignment on UChallengeBundleCategoryHeader_C");
static_assert(sizeof(UChallengeBundleCategoryHeader_C) == 0x000418, "Wrong size on UChallengeBundleCategoryHeader_C");
static_assert(offsetof(UChallengeBundleCategoryHeader_C, UberGraphFrame) == 0x0003D0, "Member 'UChallengeBundleCategoryHeader_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UChallengeBundleCategoryHeader_C, BattlePassImage) == 0x0003D8, "Member 'UChallengeBundleCategoryHeader_C::BattlePassImage' has a wrong offset!");
static_assert(offsetof(UChallengeBundleCategoryHeader_C, BoundBreakSpacer) == 0x0003E0, "Member 'UChallengeBundleCategoryHeader_C::BoundBreakSpacer' has a wrong offset!");
static_assert(offsetof(UChallengeBundleCategoryHeader_C, BundleCategoryBorderCB) == 0x0003E8, "Member 'UChallengeBundleCategoryHeader_C::BundleCategoryBorderCB' has a wrong offset!");
static_assert(offsetof(UChallengeBundleCategoryHeader_C, BundleCategoryName) == 0x0003F0, "Member 'UChallengeBundleCategoryHeader_C::BundleCategoryName' has a wrong offset!");
static_assert(offsetof(UChallengeBundleCategoryHeader_C, IconSpacer) == 0x0003F8, "Member 'UChallengeBundleCategoryHeader_C::IconSpacer' has a wrong offset!");
static_assert(offsetof(UChallengeBundleCategoryHeader_C, LockedIcon) == 0x000400, "Member 'UChallengeBundleCategoryHeader_C::LockedIcon' has a wrong offset!");
static_assert(offsetof(UChallengeBundleCategoryHeader_C, VerticalSizeSB) == 0x000408, "Member 'UChallengeBundleCategoryHeader_C::VerticalSizeSB' has a wrong offset!");
static_assert(offsetof(UChallengeBundleCategoryHeader_C, IconBreakBounds) == 0x000410, "Member 'UChallengeBundleCategoryHeader_C::IconBreakBounds' has a wrong offset!");

}


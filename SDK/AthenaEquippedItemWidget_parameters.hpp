#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaEquippedItemWidget

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteUI_structs.hpp"


namespace SDK::Params
{

// Function AthenaEquippedItemWidget.AthenaEquippedItemWidget_C.ExecuteUbergraph_AthenaEquippedItemWidget
// 0x02A0 (0x02A0 - 0x0000)
struct AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable12;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable123;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEquippedWeaponDisplay                        Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable12;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable123;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1234;                            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_ResourceCount1;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWeaponRanged*                      K2Node_Event_RangedWeapon;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWorldItemDefinition*               K2Node_Event_Item12;                               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0038(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_GetItemDefinitionSmallPreviewImageBrush_ReturnValue; // 0x0058(0x0088)()
	int32                                         CallFunc_GetBulletsPerClip_ReturnValue;            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortResourceItemDefinition*            K2Node_Event_Item1;                                // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ResourceCount;                        // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue1;              // 0x00F8(0x0018)()
	struct FSlateBrush                            CallFunc_GetItemDefinitionSmallPreviewImageBrush_ReturnValue1; // 0x0110(0x0088)()
	EEquippedWeaponDisplay                        K2Node_Event_Mode;                                 // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHasAmmo;                             // 0x019B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_Event_MagazineAmmoCount;                    // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_BackupAmmoCount;                      // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalRemaining;                       // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetRemainingAmmoText_CurrentAmmoText;     // 0x01A8(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetCurrentAmmoText_CurrentAmmoText;       // 0x01C8(0x0018)()
	float                                         K2Node_Select1_Default;                            // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue12;             // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select12_Default;                           // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Remaining;                            // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue12;             // 0x01F0(0x0018)()
	class AFortWeapon*                            K2Node_Event_Weapon;                               // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWeaponItemDefinition*              K2Node_Event_Item;                                 // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            CallFunc_GetItemDefinitionSmallPreviewImageBrush_ReturnValue12; // 0x0218(0x0088)()
};
static_assert(alignof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget) == 0x000008, "Wrong alignment on AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget");
static_assert(sizeof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget) == 0x0002A0, "Wrong size on AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, EntryPoint) == 0x000000, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, Temp_float_Variable) == 0x000004, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, Temp_float_Variable1) == 0x000008, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, Temp_bool_Variable) == 0x00000C, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, Temp_float_Variable12) == 0x000010, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::Temp_float_Variable12' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, Temp_float_Variable123) == 0x000014, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::Temp_float_Variable123' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, Temp_byte_Variable) == 0x000018, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, Temp_byte_Variable1) == 0x000019, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, Temp_byte_Variable12) == 0x00001A, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::Temp_byte_Variable12' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, Temp_byte_Variable123) == 0x00001B, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::Temp_byte_Variable123' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, Temp_byte_Variable1234) == 0x00001C, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::Temp_byte_Variable1234' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, Temp_bool_Variable1) == 0x00001D, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, K2Node_Event_ResourceCount1) == 0x000020, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::K2Node_Event_ResourceCount1' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, K2Node_Event_RangedWeapon) == 0x000028, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::K2Node_Event_RangedWeapon' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, K2Node_Event_Item12) == 0x000030, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::K2Node_Event_Item12' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, CallFunc_Conv_IntToText_ReturnValue) == 0x000038, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, CallFunc_GetItemDefinitionSmallPreviewImageBrush_ReturnValue) == 0x000058, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::CallFunc_GetItemDefinitionSmallPreviewImageBrush_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, CallFunc_GetBulletsPerClip_ReturnValue) == 0x0000E0, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::CallFunc_GetBulletsPerClip_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, CallFunc_Greater_IntInt_ReturnValue) == 0x0000E4, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, K2Node_Event_Item1) == 0x0000E8, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::K2Node_Event_Item1' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, K2Node_Event_ResourceCount) == 0x0000F0, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::K2Node_Event_ResourceCount' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, CallFunc_Conv_IntToText_ReturnValue1) == 0x0000F8, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::CallFunc_Conv_IntToText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, CallFunc_GetItemDefinitionSmallPreviewImageBrush_ReturnValue1) == 0x000110, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::CallFunc_GetItemDefinitionSmallPreviewImageBrush_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, K2Node_Event_Mode) == 0x000198, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::K2Node_Event_Mode' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, K2Node_SwitchEnum_CmpSuccess) == 0x000199, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, K2Node_Select_Default) == 0x00019A, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, K2Node_Event_bHasAmmo) == 0x00019B, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::K2Node_Event_bHasAmmo' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, K2Node_Event_MagazineAmmoCount) == 0x00019C, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::K2Node_Event_MagazineAmmoCount' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, K2Node_Event_BackupAmmoCount) == 0x0001A0, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::K2Node_Event_BackupAmmoCount' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, K2Node_Event_TotalRemaining) == 0x0001A4, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::K2Node_Event_TotalRemaining' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, CallFunc_GetRemainingAmmoText_CurrentAmmoText) == 0x0001A8, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::CallFunc_GetRemainingAmmoText_CurrentAmmoText' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, CallFunc_Greater_IntInt_ReturnValue1) == 0x0001C0, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, CallFunc_GetCurrentAmmoText_CurrentAmmoText) == 0x0001C8, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::CallFunc_GetCurrentAmmoText_CurrentAmmoText' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, K2Node_Select1_Default) == 0x0001E0, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, CallFunc_Greater_IntInt_ReturnValue12) == 0x0001E4, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::CallFunc_Greater_IntInt_ReturnValue12' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, K2Node_Select12_Default) == 0x0001E8, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::K2Node_Select12_Default' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, K2Node_Event_Remaining) == 0x0001EC, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::K2Node_Event_Remaining' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, CallFunc_Conv_IntToText_ReturnValue12) == 0x0001F0, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::CallFunc_Conv_IntToText_ReturnValue12' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, K2Node_Event_Weapon) == 0x000208, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::K2Node_Event_Weapon' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, K2Node_Event_Item) == 0x000210, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::K2Node_Event_Item' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget, CallFunc_GetItemDefinitionSmallPreviewImageBrush_ReturnValue12) == 0x000218, "Member 'AthenaEquippedItemWidget_C_ExecuteUbergraph_AthenaEquippedItemWidget::CallFunc_GetItemDefinitionSmallPreviewImageBrush_ReturnValue12' has a wrong offset!");

// Function AthenaEquippedItemWidget.AthenaEquippedItemWidget_C.UtilityItemTypeChanged
// 0x0010 (0x0010 - 0x0000)
struct AthenaEquippedItemWidget_C_UtilityItemTypeChanged final
{
public:
	class AFortWeapon*                            Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWeaponItemDefinition*              Item;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaEquippedItemWidget_C_UtilityItemTypeChanged) == 0x000008, "Wrong alignment on AthenaEquippedItemWidget_C_UtilityItemTypeChanged");
static_assert(sizeof(AthenaEquippedItemWidget_C_UtilityItemTypeChanged) == 0x000010, "Wrong size on AthenaEquippedItemWidget_C_UtilityItemTypeChanged");
static_assert(offsetof(AthenaEquippedItemWidget_C_UtilityItemTypeChanged, Weapon) == 0x000000, "Member 'AthenaEquippedItemWidget_C_UtilityItemTypeChanged::Weapon' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_UtilityItemTypeChanged, Item) == 0x000008, "Member 'AthenaEquippedItemWidget_C_UtilityItemTypeChanged::Item' has a wrong offset!");

// Function AthenaEquippedItemWidget.AthenaEquippedItemWidget_C.UtilityItemCountChanged
// 0x0004 (0x0004 - 0x0000)
struct AthenaEquippedItemWidget_C_UtilityItemCountChanged final
{
public:
	int32                                         Remaining;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaEquippedItemWidget_C_UtilityItemCountChanged) == 0x000004, "Wrong alignment on AthenaEquippedItemWidget_C_UtilityItemCountChanged");
static_assert(sizeof(AthenaEquippedItemWidget_C_UtilityItemCountChanged) == 0x000004, "Wrong size on AthenaEquippedItemWidget_C_UtilityItemCountChanged");
static_assert(offsetof(AthenaEquippedItemWidget_C_UtilityItemCountChanged, Remaining) == 0x000000, "Member 'AthenaEquippedItemWidget_C_UtilityItemCountChanged::Remaining' has a wrong offset!");

// Function AthenaEquippedItemWidget.AthenaEquippedItemWidget_C.AmmoChanged
// 0x000C (0x000C - 0x0000)
struct AthenaEquippedItemWidget_C_AmmoChanged final
{
public:
	int32                                         MagazineAmmoCount_0;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BackupAmmoCount;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalRemaining;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaEquippedItemWidget_C_AmmoChanged) == 0x000004, "Wrong alignment on AthenaEquippedItemWidget_C_AmmoChanged");
static_assert(sizeof(AthenaEquippedItemWidget_C_AmmoChanged) == 0x00000C, "Wrong size on AthenaEquippedItemWidget_C_AmmoChanged");
static_assert(offsetof(AthenaEquippedItemWidget_C_AmmoChanged, MagazineAmmoCount_0) == 0x000000, "Member 'AthenaEquippedItemWidget_C_AmmoChanged::MagazineAmmoCount_0' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_AmmoChanged, BackupAmmoCount) == 0x000004, "Member 'AthenaEquippedItemWidget_C_AmmoChanged::BackupAmmoCount' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_AmmoChanged, TotalRemaining) == 0x000008, "Member 'AthenaEquippedItemWidget_C_AmmoChanged::TotalRemaining' has a wrong offset!");

// Function AthenaEquippedItemWidget.AthenaEquippedItemWidget_C.HasAmmoChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaEquippedItemWidget_C_HasAmmoChanged final
{
public:
	bool                                          bHasAmmo;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaEquippedItemWidget_C_HasAmmoChanged) == 0x000001, "Wrong alignment on AthenaEquippedItemWidget_C_HasAmmoChanged");
static_assert(sizeof(AthenaEquippedItemWidget_C_HasAmmoChanged) == 0x000001, "Wrong size on AthenaEquippedItemWidget_C_HasAmmoChanged");
static_assert(offsetof(AthenaEquippedItemWidget_C_HasAmmoChanged, bHasAmmo) == 0x000000, "Member 'AthenaEquippedItemWidget_C_HasAmmoChanged::bHasAmmo' has a wrong offset!");

// Function AthenaEquippedItemWidget.AthenaEquippedItemWidget_C.WeaponTypeChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaEquippedItemWidget_C_WeaponTypeChanged final
{
public:
	EEquippedWeaponDisplay                        Mode;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaEquippedItemWidget_C_WeaponTypeChanged) == 0x000001, "Wrong alignment on AthenaEquippedItemWidget_C_WeaponTypeChanged");
static_assert(sizeof(AthenaEquippedItemWidget_C_WeaponTypeChanged) == 0x000001, "Wrong size on AthenaEquippedItemWidget_C_WeaponTypeChanged");
static_assert(offsetof(AthenaEquippedItemWidget_C_WeaponTypeChanged, Mode) == 0x000000, "Member 'AthenaEquippedItemWidget_C_WeaponTypeChanged::Mode' has a wrong offset!");

// Function AthenaEquippedItemWidget.AthenaEquippedItemWidget_C.ResourceTypeChanged
// 0x0010 (0x0010 - 0x0000)
struct AthenaEquippedItemWidget_C_ResourceTypeChanged final
{
public:
	class UFortResourceItemDefinition*            Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ResourceCount_0;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaEquippedItemWidget_C_ResourceTypeChanged) == 0x000008, "Wrong alignment on AthenaEquippedItemWidget_C_ResourceTypeChanged");
static_assert(sizeof(AthenaEquippedItemWidget_C_ResourceTypeChanged) == 0x000010, "Wrong size on AthenaEquippedItemWidget_C_ResourceTypeChanged");
static_assert(offsetof(AthenaEquippedItemWidget_C_ResourceTypeChanged, Item) == 0x000000, "Member 'AthenaEquippedItemWidget_C_ResourceTypeChanged::Item' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_ResourceTypeChanged, ResourceCount_0) == 0x000008, "Member 'AthenaEquippedItemWidget_C_ResourceTypeChanged::ResourceCount_0' has a wrong offset!");

// Function AthenaEquippedItemWidget.AthenaEquippedItemWidget_C.AmmoTypeChanged
// 0x0010 (0x0010 - 0x0000)
struct AthenaEquippedItemWidget_C_AmmoTypeChanged final
{
public:
	class AFortWeaponRanged*                      RangedWeapon;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWorldItemDefinition*               Item;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaEquippedItemWidget_C_AmmoTypeChanged) == 0x000008, "Wrong alignment on AthenaEquippedItemWidget_C_AmmoTypeChanged");
static_assert(sizeof(AthenaEquippedItemWidget_C_AmmoTypeChanged) == 0x000010, "Wrong size on AthenaEquippedItemWidget_C_AmmoTypeChanged");
static_assert(offsetof(AthenaEquippedItemWidget_C_AmmoTypeChanged, RangedWeapon) == 0x000000, "Member 'AthenaEquippedItemWidget_C_AmmoTypeChanged::RangedWeapon' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_AmmoTypeChanged, Item) == 0x000008, "Member 'AthenaEquippedItemWidget_C_AmmoTypeChanged::Item' has a wrong offset!");

// Function AthenaEquippedItemWidget.AthenaEquippedItemWidget_C.ResourceCountChanged
// 0x0004 (0x0004 - 0x0000)
struct AthenaEquippedItemWidget_C_ResourceCountChanged final
{
public:
	int32                                         ResourceCount_0;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaEquippedItemWidget_C_ResourceCountChanged) == 0x000004, "Wrong alignment on AthenaEquippedItemWidget_C_ResourceCountChanged");
static_assert(sizeof(AthenaEquippedItemWidget_C_ResourceCountChanged) == 0x000004, "Wrong size on AthenaEquippedItemWidget_C_ResourceCountChanged");
static_assert(offsetof(AthenaEquippedItemWidget_C_ResourceCountChanged, ResourceCount_0) == 0x000000, "Member 'AthenaEquippedItemWidget_C_ResourceCountChanged::ResourceCount_0' has a wrong offset!");

// Function AthenaEquippedItemWidget.AthenaEquippedItemWidget_C.UpdateWidgetColor
// 0x0060 (0x0060 - 0x0000)
struct AthenaEquippedItemWidget_C_UpdateWidgetColor final
{
public:
	bool                                          HasAmmo;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable12;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select1_Default;                            // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select12_Default;                           // 0x0028(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0038(0x0028)()
};
static_assert(alignof(AthenaEquippedItemWidget_C_UpdateWidgetColor) == 0x000008, "Wrong alignment on AthenaEquippedItemWidget_C_UpdateWidgetColor");
static_assert(sizeof(AthenaEquippedItemWidget_C_UpdateWidgetColor) == 0x000060, "Wrong size on AthenaEquippedItemWidget_C_UpdateWidgetColor");
static_assert(offsetof(AthenaEquippedItemWidget_C_UpdateWidgetColor, HasAmmo) == 0x000000, "Member 'AthenaEquippedItemWidget_C_UpdateWidgetColor::HasAmmo' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_UpdateWidgetColor, Temp_bool_Variable) == 0x000001, "Member 'AthenaEquippedItemWidget_C_UpdateWidgetColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_UpdateWidgetColor, Temp_float_Variable) == 0x000004, "Member 'AthenaEquippedItemWidget_C_UpdateWidgetColor::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_UpdateWidgetColor, Temp_float_Variable1) == 0x000008, "Member 'AthenaEquippedItemWidget_C_UpdateWidgetColor::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_UpdateWidgetColor, Temp_bool_Variable1) == 0x00000C, "Member 'AthenaEquippedItemWidget_C_UpdateWidgetColor::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_UpdateWidgetColor, K2Node_Select_Default) == 0x000010, "Member 'AthenaEquippedItemWidget_C_UpdateWidgetColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_UpdateWidgetColor, Temp_struct_Variable) == 0x000014, "Member 'AthenaEquippedItemWidget_C_UpdateWidgetColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_UpdateWidgetColor, Temp_bool_Variable12) == 0x000024, "Member 'AthenaEquippedItemWidget_C_UpdateWidgetColor::Temp_bool_Variable12' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_UpdateWidgetColor, Temp_byte_Variable) == 0x000025, "Member 'AthenaEquippedItemWidget_C_UpdateWidgetColor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_UpdateWidgetColor, Temp_byte_Variable1) == 0x000026, "Member 'AthenaEquippedItemWidget_C_UpdateWidgetColor::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_UpdateWidgetColor, K2Node_Select1_Default) == 0x000027, "Member 'AthenaEquippedItemWidget_C_UpdateWidgetColor::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_UpdateWidgetColor, K2Node_Select12_Default) == 0x000028, "Member 'AthenaEquippedItemWidget_C_UpdateWidgetColor::K2Node_Select12_Default' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_UpdateWidgetColor, K2Node_MakeStruct_SlateColor) == 0x000038, "Member 'AthenaEquippedItemWidget_C_UpdateWidgetColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function AthenaEquippedItemWidget.AthenaEquippedItemWidget_C.GetCurrentAmmoText
// 0x0118 (0x0118 - 0x0000)
struct AthenaEquippedItemWidget_C_GetCurrentAmmoText final
{
public:
	int32                                         CurrentAmmoCount;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CurrentAmmoText;                                   // 0x0008(0x0018)(Parm, OutParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ZeroConstructor, ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x0078(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array1;                           // 0x00D0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue1;                      // 0x00E0(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00F8(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaEquippedItemWidget_C_GetCurrentAmmoText) == 0x000008, "Wrong alignment on AthenaEquippedItemWidget_C_GetCurrentAmmoText");
static_assert(sizeof(AthenaEquippedItemWidget_C_GetCurrentAmmoText) == 0x000118, "Wrong size on AthenaEquippedItemWidget_C_GetCurrentAmmoText");
static_assert(offsetof(AthenaEquippedItemWidget_C_GetCurrentAmmoText, CurrentAmmoCount) == 0x000000, "Member 'AthenaEquippedItemWidget_C_GetCurrentAmmoText::CurrentAmmoCount' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_GetCurrentAmmoText, CurrentAmmoText) == 0x000008, "Member 'AthenaEquippedItemWidget_C_GetCurrentAmmoText::CurrentAmmoText' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_GetCurrentAmmoText, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'AthenaEquippedItemWidget_C_GetCurrentAmmoText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_GetCurrentAmmoText, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'AthenaEquippedItemWidget_C_GetCurrentAmmoText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_GetCurrentAmmoText, K2Node_MakeArray_Array) == 0x000068, "Member 'AthenaEquippedItemWidget_C_GetCurrentAmmoText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_GetCurrentAmmoText, K2Node_MakeStruct_FormatArgumentData1) == 0x000078, "Member 'AthenaEquippedItemWidget_C_GetCurrentAmmoText::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_GetCurrentAmmoText, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'AthenaEquippedItemWidget_C_GetCurrentAmmoText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_GetCurrentAmmoText, K2Node_MakeArray_Array1) == 0x0000D0, "Member 'AthenaEquippedItemWidget_C_GetCurrentAmmoText::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_GetCurrentAmmoText, CallFunc_Format_ReturnValue1) == 0x0000E0, "Member 'AthenaEquippedItemWidget_C_GetCurrentAmmoText::CallFunc_Format_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_GetCurrentAmmoText, CallFunc_Conv_IntToText_ReturnValue) == 0x0000F8, "Member 'AthenaEquippedItemWidget_C_GetCurrentAmmoText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_GetCurrentAmmoText, CallFunc_Less_IntInt_ReturnValue1) == 0x000110, "Member 'AthenaEquippedItemWidget_C_GetCurrentAmmoText::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");

// Function AthenaEquippedItemWidget.AthenaEquippedItemWidget_C.GetRemainingAmmoText
// 0x0078 (0x0078 - 0x0000)
struct AthenaEquippedItemWidget_C_GetRemainingAmmoText final
{
public:
	int32                                         RemainingAmmoCount;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CurrentAmmoText;                                   // 0x0008(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0028(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0048(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0060(0x0018)()
};
static_assert(alignof(AthenaEquippedItemWidget_C_GetRemainingAmmoText) == 0x000008, "Wrong alignment on AthenaEquippedItemWidget_C_GetRemainingAmmoText");
static_assert(sizeof(AthenaEquippedItemWidget_C_GetRemainingAmmoText) == 0x000078, "Wrong size on AthenaEquippedItemWidget_C_GetRemainingAmmoText");
static_assert(offsetof(AthenaEquippedItemWidget_C_GetRemainingAmmoText, RemainingAmmoCount) == 0x000000, "Member 'AthenaEquippedItemWidget_C_GetRemainingAmmoText::RemainingAmmoCount' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_GetRemainingAmmoText, CurrentAmmoText) == 0x000008, "Member 'AthenaEquippedItemWidget_C_GetRemainingAmmoText::CurrentAmmoText' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_GetRemainingAmmoText, Temp_bool_Variable) == 0x000020, "Member 'AthenaEquippedItemWidget_C_GetRemainingAmmoText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_GetRemainingAmmoText, CallFunc_Conv_IntToText_ReturnValue) == 0x000028, "Member 'AthenaEquippedItemWidget_C_GetRemainingAmmoText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_GetRemainingAmmoText, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'AthenaEquippedItemWidget_C_GetRemainingAmmoText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_GetRemainingAmmoText, Temp_text_Variable) == 0x000048, "Member 'AthenaEquippedItemWidget_C_GetRemainingAmmoText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemWidget_C_GetRemainingAmmoText, K2Node_Select_Default) == 0x000060, "Member 'AthenaEquippedItemWidget_C_GetRemainingAmmoText::K2Node_Select_Default' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Dragon_GliderChute_AnimBP

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Dragon_GliderChute_AnimBP.Dragon_GliderChute_AnimBP_C
// 0x0778 (0x0AF0 - 0x0378)
class UDragon_GliderChute_AnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_378[0x8];                                      // 0x0378(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0380(0x0008)(Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_A99615014EA5B13CC3254083B9D5FEDE; // 0x0388(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_E4E7F1A44C799E996866EFAEFE335FB3; // 0x03D0(0x0070)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_857A34EA4F0A297E27DF8C8427539989; // 0x0440(0x0080)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6F88DBB041D7585C55DFCDBE41CF7455; // 0x04C0(0x0080)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_D240FC4E4CD55E6DB1C9ADA2282691FA; // 0x0540(0x0080)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5C8E801E4C9EED53D45DBABFAF43ED35; // 0x05C0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_C37BB15D46E2FD548BB13589A6F827CB; // 0x0640(0x0088)()
	struct FAnimNode_Root                         AnimGraphNode_StateResult_14DFFF1246519F2F4A733EB9CEF80A83; // 0x06C8(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_060F8D4C46B093E16BA7C9B571311841; // 0x0710(0x0128)()
	struct FAnimNode_Root                         AnimGraphNode_StateResult_48A5286F45FAFEB052182999527AC6D9; // 0x0838(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_BA31A8FF4EBE384F500F70B05460E3C4; // 0x0880(0x0128)()
	struct FAnimNode_Root                         AnimGraphNode_StateResult_566190374510421740624895F4503B6D; // 0x09A8(0x0048)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_EE98A1244C3B0FD7934F5AB203F0C4FA; // 0x09F0(0x00E0)()
	bool                                          IsParachuteOpen;                                   // 0x0AD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD1[0x3];                                      // 0x0AD1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AimPitch;                                          // 0x0AD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeployAnimRate;                                    // 0x0AD8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkydiveYaw;                                        // 0x0ADC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UseDynamicsAlpha;                                  // 0x0AE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Dragon_GliderChute_AnimBP(int32 EntryPoint);
	void AnimNotify_dynamicsOn();
	void AnimNotify_dynamicsOff();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Dragon_GliderChute_AnimBP_AnimGraphNode_TransitionResult_857A34EA4F0A297E27DF8C8427539989();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Dragon_GliderChute_AnimBP_AnimGraphNode_BlendSpacePlayer_BA31A8FF4EBE384F500F70B05460E3C4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Dragon_GliderChute_AnimBP_AnimGraphNode_BlendSpacePlayer_060F8D4C46B093E16BA7C9B571311841();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Dragon_GliderChute_AnimBP_AnimGraphNode_TransitionResult_6F88DBB041D7585C55DFCDBE41CF7455();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Dragon_GliderChute_AnimBP_AnimGraphNode_TransitionResult_5C8E801E4C9EED53D45DBABFAF43ED35();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Dragon_GliderChute_AnimBP_AnimGraphNode_TransitionResult_D240FC4E4CD55E6DB1C9ADA2282691FA();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Dragon_GliderChute_AnimBP_C">();
	}
	static class UDragon_GliderChute_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDragon_GliderChute_AnimBP_C>();
	}
};
static_assert(alignof(UDragon_GliderChute_AnimBP_C) == 0x000010, "Wrong alignment on UDragon_GliderChute_AnimBP_C");
static_assert(sizeof(UDragon_GliderChute_AnimBP_C) == 0x000AF0, "Wrong size on UDragon_GliderChute_AnimBP_C");
static_assert(offsetof(UDragon_GliderChute_AnimBP_C, UberGraphFrame) == 0x000380, "Member 'UDragon_GliderChute_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UDragon_GliderChute_AnimBP_C, AnimGraphNode_Root_A99615014EA5B13CC3254083B9D5FEDE) == 0x000388, "Member 'UDragon_GliderChute_AnimBP_C::AnimGraphNode_Root_A99615014EA5B13CC3254083B9D5FEDE' has a wrong offset!");
static_assert(offsetof(UDragon_GliderChute_AnimBP_C, AnimGraphNode_Slot_E4E7F1A44C799E996866EFAEFE335FB3) == 0x0003D0, "Member 'UDragon_GliderChute_AnimBP_C::AnimGraphNode_Slot_E4E7F1A44C799E996866EFAEFE335FB3' has a wrong offset!");
static_assert(offsetof(UDragon_GliderChute_AnimBP_C, AnimGraphNode_TransitionResult_857A34EA4F0A297E27DF8C8427539989) == 0x000440, "Member 'UDragon_GliderChute_AnimBP_C::AnimGraphNode_TransitionResult_857A34EA4F0A297E27DF8C8427539989' has a wrong offset!");
static_assert(offsetof(UDragon_GliderChute_AnimBP_C, AnimGraphNode_TransitionResult_6F88DBB041D7585C55DFCDBE41CF7455) == 0x0004C0, "Member 'UDragon_GliderChute_AnimBP_C::AnimGraphNode_TransitionResult_6F88DBB041D7585C55DFCDBE41CF7455' has a wrong offset!");
static_assert(offsetof(UDragon_GliderChute_AnimBP_C, AnimGraphNode_TransitionResult_D240FC4E4CD55E6DB1C9ADA2282691FA) == 0x000540, "Member 'UDragon_GliderChute_AnimBP_C::AnimGraphNode_TransitionResult_D240FC4E4CD55E6DB1C9ADA2282691FA' has a wrong offset!");
static_assert(offsetof(UDragon_GliderChute_AnimBP_C, AnimGraphNode_TransitionResult_5C8E801E4C9EED53D45DBABFAF43ED35) == 0x0005C0, "Member 'UDragon_GliderChute_AnimBP_C::AnimGraphNode_TransitionResult_5C8E801E4C9EED53D45DBABFAF43ED35' has a wrong offset!");
static_assert(offsetof(UDragon_GliderChute_AnimBP_C, AnimGraphNode_SequencePlayer_C37BB15D46E2FD548BB13589A6F827CB) == 0x000640, "Member 'UDragon_GliderChute_AnimBP_C::AnimGraphNode_SequencePlayer_C37BB15D46E2FD548BB13589A6F827CB' has a wrong offset!");
static_assert(offsetof(UDragon_GliderChute_AnimBP_C, AnimGraphNode_StateResult_14DFFF1246519F2F4A733EB9CEF80A83) == 0x0006C8, "Member 'UDragon_GliderChute_AnimBP_C::AnimGraphNode_StateResult_14DFFF1246519F2F4A733EB9CEF80A83' has a wrong offset!");
static_assert(offsetof(UDragon_GliderChute_AnimBP_C, AnimGraphNode_BlendSpacePlayer_060F8D4C46B093E16BA7C9B571311841) == 0x000710, "Member 'UDragon_GliderChute_AnimBP_C::AnimGraphNode_BlendSpacePlayer_060F8D4C46B093E16BA7C9B571311841' has a wrong offset!");
static_assert(offsetof(UDragon_GliderChute_AnimBP_C, AnimGraphNode_StateResult_48A5286F45FAFEB052182999527AC6D9) == 0x000838, "Member 'UDragon_GliderChute_AnimBP_C::AnimGraphNode_StateResult_48A5286F45FAFEB052182999527AC6D9' has a wrong offset!");
static_assert(offsetof(UDragon_GliderChute_AnimBP_C, AnimGraphNode_BlendSpacePlayer_BA31A8FF4EBE384F500F70B05460E3C4) == 0x000880, "Member 'UDragon_GliderChute_AnimBP_C::AnimGraphNode_BlendSpacePlayer_BA31A8FF4EBE384F500F70B05460E3C4' has a wrong offset!");
static_assert(offsetof(UDragon_GliderChute_AnimBP_C, AnimGraphNode_StateResult_566190374510421740624895F4503B6D) == 0x0009A8, "Member 'UDragon_GliderChute_AnimBP_C::AnimGraphNode_StateResult_566190374510421740624895F4503B6D' has a wrong offset!");
static_assert(offsetof(UDragon_GliderChute_AnimBP_C, AnimGraphNode_StateMachine_EE98A1244C3B0FD7934F5AB203F0C4FA) == 0x0009F0, "Member 'UDragon_GliderChute_AnimBP_C::AnimGraphNode_StateMachine_EE98A1244C3B0FD7934F5AB203F0C4FA' has a wrong offset!");
static_assert(offsetof(UDragon_GliderChute_AnimBP_C, IsParachuteOpen) == 0x000AD0, "Member 'UDragon_GliderChute_AnimBP_C::IsParachuteOpen' has a wrong offset!");
static_assert(offsetof(UDragon_GliderChute_AnimBP_C, AimPitch) == 0x000AD4, "Member 'UDragon_GliderChute_AnimBP_C::AimPitch' has a wrong offset!");
static_assert(offsetof(UDragon_GliderChute_AnimBP_C, DeployAnimRate) == 0x000AD8, "Member 'UDragon_GliderChute_AnimBP_C::DeployAnimRate' has a wrong offset!");
static_assert(offsetof(UDragon_GliderChute_AnimBP_C, SkydiveYaw) == 0x000ADC, "Member 'UDragon_GliderChute_AnimBP_C::SkydiveYaw' has a wrong offset!");
static_assert(offsetof(UDragon_GliderChute_AnimBP_C, UseDynamicsAlpha) == 0x000AE0, "Member 'UDragon_GliderChute_AnimBP_C::UseDynamicsAlpha' has a wrong offset!");

}

